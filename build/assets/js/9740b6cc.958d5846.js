"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[2037],{1200:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>i,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"js/arrays/arrays","title":"Arrays","description":"\xbfQu\xe9 son los Arrays en JavaScript?","source":"@site/docs/js/arrays/arrays.md","sourceDirName":"js/arrays","slug":"/js/arrays/","permalink":"/docuQuest/docs/js/arrays/","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/js/arrays/arrays.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"N\xfameros","permalink":"/docuQuest/docs/js/numeros"},"next":{"title":"Interactuar con arrays","permalink":"/docuQuest/docs/js/arrays/interactuar"}}');var a=n(4848),s=n(8453);const l={},c="Arrays",i={},d=[{value:"\xbfQu\xe9 son los Arrays en JavaScript?",id:"qu\xe9-son-los-arrays-en-javascript",level:2},{value:"Declaraci\xf3n y Creaci\xf3n de Arrays",id:"declaraci\xf3n-y-creaci\xf3n-de-arrays",level:2},{value:"Acceso a los Elementos del Array",id:"acceso-a-los-elementos-del-array",level:2},{value:"Propiedades y M\xe9todos de los Arrays",id:"propiedades-y-m\xe9todos-de-los-arrays",level:2},{value:"Iteraci\xf3n sobre los Elementos del Array",id:"iteraci\xf3n-sobre-los-elementos-del-array",level:2},{value:"Conclusiones",id:"conclusiones",level:2}];function t(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(r.header,{children:(0,a.jsx)(r.h1,{id:"arrays",children:"Arrays"})}),"\n",(0,a.jsx)(r.h2,{id:"qu\xe9-son-los-arrays-en-javascript",children:"\xbfQu\xe9 son los Arrays en JavaScript?"}),"\n",(0,a.jsx)(r.p,{children:"Un array en JavaScript es una colecci\xf3n ordenada de elementos que se pueden acceder mediante un \xedndice num\xe9rico. Los elementos de un array pueden ser de cualquier tipo de datos, incluyendo n\xfameros, strings, booleanos, objetos u otros arrays. La capacidad de almacenar m\xfaltiples valores en una sola variable hace que los arrays sean una herramienta poderosa y vers\xe1til en el desarrollo de aplicaciones web."}),"\n",(0,a.jsx)(r.h2,{id:"declaraci\xf3n-y-creaci\xf3n-de-arrays",children:"Declaraci\xf3n y Creaci\xf3n de Arrays"}),"\n",(0,a.jsxs)(r.p,{children:["En JavaScript, los arrays se pueden crear de varias formas. La forma m\xe1s com\xfan de declarar un array es utilizando la sintaxis de corchetes ",(0,a.jsx)(r.code,{children:"[]"}),". Tambi\xe9n se puede utilizar el constructor ",(0,a.jsx)(r.code,{children:"Array()"})," para crear un nuevo array."]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'// Declaraci\xf3n de un array vac\xedo\nlet miArray = [];\n\n// Declaraci\xf3n de un array con elementos\nlet numeros = [1, 2, 3, 4, 5];\n\n// Utilizando el constructor Array()\nlet colores = new Array("rojo", "verde", "azul");\n'})}),"\n",(0,a.jsx)(r.h2,{id:"acceso-a-los-elementos-del-array",children:"Acceso a los Elementos del Array"}),"\n",(0,a.jsx)(r.p,{children:"Los elementos de un array se pueden acceder utilizando su \xedndice num\xe9rico. El primer elemento de un array tiene un \xedndice de 0, el segundo tiene un \xedndice de 1, y as\xed sucesivamente."}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\nconsole.log(colores[0]); // Imprime: "rojo"\nconsole.log(colores[1]); // Imprime: "verde"\nconsole.log(colores[2]); // Imprime: "azul"\n'})}),"\n",(0,a.jsx)(r.h2,{id:"propiedades-y-m\xe9todos-de-los-arrays",children:"Propiedades y M\xe9todos de los Arrays"}),"\n",(0,a.jsx)(r.p,{children:"JavaScript proporciona una variedad de propiedades y m\xe9todos integrados que facilitan la manipulaci\xf3n y el trabajo con arrays. Algunas de las propiedades y m\xe9todos m\xe1s comunes incluyen:"}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"length"}),": Propiedad que devuelve la longitud (n\xfamero de elementos) de un array."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\nconsole.log(colores.length); // Imprime: 3\n'})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"push()"}),": M\xe9todo que agrega uno o m\xe1s elementos al final de un array y devuelve la nueva longitud del array."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde"];\n\ncolores.push("azul");\nconsole.log(colores); // Imprime: ["rojo", "verde", "azul"]\n'})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"pop()"}),": M\xe9todo que elimina el \xfaltimo elemento de un array y lo devuelve."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\nlet ultimoColor = colores.pop();\nconsole.log(ultimoColor); // Imprime: "azul"\nconsole.log(colores); // Imprime: ["rojo", "verde"]\n'})}),"\n",(0,a.jsxs)(r.ul,{children:["\n",(0,a.jsxs)(r.li,{children:[(0,a.jsx)(r.code,{children:"splice()"}),": M\xe9todo que permite agregar, eliminar o reemplazar elementos en un array."]}),"\n"]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsx)(r.strong,{children:"Ejemplo:"})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\n// Eliminar el segundo elemento\ncolores.splice(1, 1);\nconsole.log(colores); // Imprime: ["rojo", "azul"]\n\n// Agregar elementos en la posici\xf3n 1\ncolores.splice(1, 0, "amarillo", "naranja");\nconsole.log(colores); // Imprime: ["rojo", "amarillo", "naranja", "azul"]\n'})}),"\n",(0,a.jsx)(r.h2,{id:"iteraci\xf3n-sobre-los-elementos-del-array",children:"Iteraci\xf3n sobre los Elementos del Array"}),"\n",(0,a.jsxs)(r.p,{children:["Es com\xfan necesitar recorrer todos los elementos de un array para realizar alguna operaci\xf3n sobre ellos. Para esto, se pueden utilizar bucles como ",(0,a.jsx)(r.code,{children:"for"})," o ",(0,a.jsx)(r.code,{children:"forEach()"}),"."]}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsxs)(r.strong,{children:["Ejemplo con ",(0,a.jsx)(r.code,{children:"for"}),":"]})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\nfor (let i = 0; i < colores.length; i++) {\n  console.log(colores[i]);\n}\n'})}),"\n",(0,a.jsx)(r.p,{children:(0,a.jsxs)(r.strong,{children:["Ejemplo con ",(0,a.jsx)(r.code,{children:"forEach()"}),":"]})}),"\n",(0,a.jsx)(r.pre,{children:(0,a.jsx)(r.code,{className:"language-jsx",children:'let colores = ["rojo", "verde", "azul"];\n\ncolores.forEach(function (color) {\n  console.log(color);\n});\n'})}),"\n",(0,a.jsx)(r.h2,{id:"conclusiones",children:"Conclusiones"}),"\n",(0,a.jsx)(r.p,{children:"Los arrays son una parte fundamental de JavaScript y se utilizan ampliamente en el desarrollo de aplicaciones web para almacenar y manipular datos de manera eficiente. Con su capacidad para almacenar m\xfaltiples valores en una sola variable y una variedad de m\xe9todos y propiedades integrados para manipularlos, los arrays son una herramienta poderosa para los desarrolladores JavaScript. Al comprender c\xf3mo funcionan los arrays y c\xf3mo se pueden utilizar en diferentes situaciones, los desarrolladores pueden escribir c\xf3digo m\xe1s limpio, eficiente y mantenible en sus aplicaciones web."})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,a.jsx)(r,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>l,x:()=>c});var o=n(6540);const a={},s=o.createContext(a);function l(e){const r=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),o.createElement(s.Provider,{value:r},e.children)}}}]);