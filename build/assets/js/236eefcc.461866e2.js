"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[1510],{3789:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"js/asincronia/callbacks","title":"Callbacks","description":"Funciones de Callback en la Asincron\xeda de JavaScript","source":"@site/docs/js/asincronia/callbacks.md","sourceDirName":"js/asincronia","slug":"/js/asincronia/callbacks","permalink":"/docuQuest/docs/js/asincronia/callbacks","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/js/asincronia/callbacks.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Introducci\xf3n","permalink":"/docuQuest/docs/js/asincronia/introduccion"},"next":{"title":"Promesas","permalink":"/docuQuest/docs/js/asincronia/promesas"}}');var r=a(4848),s=a(8453);const i={},l="Callbacks",c={},d=[{value:"Funciones de Callback en la Asincron\xeda de JavaScript",id:"funciones-de-callback-en-la-asincron\xeda-de-javascript",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es un <strong>callback</strong>?",id:"-qu\xe9-es-un-callback",level:2},{value:"\u2705 Ejemplo b\xe1sico real: funci\xf3n que saluda con callback",id:"-ejemplo-b\xe1sico-real-funci\xf3n-que-saluda-con-callback",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?",id:"-qu\xe9-ocurre-aqu\xed",level:3},{value:"\ud83d\udccc Esto es un <strong>callback</strong>:",id:"-esto-es-un-callback",level:3},{value:"\u2705 Otro ejemplo real: funci\xf3n con retraso (simulando asincron\xeda)",id:"-otro-ejemplo-real-funci\xf3n-con-retraso-simulando-asincron\xeda",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?",id:"-qu\xe9-ocurre-aqu\xed-1",level:3},{value:"\u2705 Parte 1: <strong>Ejemplo real de callback en el DOM con <code>addEventListener</code></strong>",id:"-parte-1-ejemplo-real-de-callback-en-el-dom-con-addeventlistener",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 est\xe1 pasando?",id:"-qu\xe9-est\xe1-pasando",level:3},{value:"\u26a0\ufe0f Parte 2: Ejemplo de <strong>callback hell</strong> (infierno de callbacks)",id:"\ufe0f-parte-2-ejemplo-de-callback-hell-infierno-de-callbacks",level:2},{value:"\ud83d\udca5 Ejemplo con <code>setTimeout</code>:",id:"-ejemplo-con-settimeout",level:3},{value:"\ud83d\udd0d Problemas:",id:"-problemas",level:3},{value:"\u2705 \xbfC\xf3mo evitarlo?",id:"-c\xf3mo-evitarlo",level:3},{value:"\u2705 Versi\xf3n limpia y moderna con <code>async/await</code>",id:"-versi\xf3n-limpia-y-moderna-con-asyncawait",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 hicimos aqu\xed?",id:"-qu\xe9-hicimos-aqu\xed",level:3},{value:"\u2705 Ventajas de usar <code>async/await</code>:",id:"-ventajas-de-usar-asyncawait",level:3},{value:"Soluciones para Evitar el Callback Hell",id:"soluciones-para-evitar-el-callback-hell",level:3},{value:"Callbacks en Operaciones Asincr\xf3nicas (Ejemplos)",id:"callbacks-en-operaciones-asincr\xf3nicas-ejemplos",level:2},{value:"\u2705 Ejemplo real: procesar un pedido y notificar al usuario con un callback",id:"-ejemplo-real-procesar-un-pedido-y-notificar-al-usuario-con-un-callback",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre paso por paso?",id:"-qu\xe9-ocurre-paso-por-paso",level:2},{value:"\ud83e\udde0 \xbfPor qu\xe9 es asincr\xf3nico?",id:"-por-qu\xe9-es-asincr\xf3nico",level:3},{value:"\u2705 Resultado final esperado en consola:",id:"-resultado-final-esperado-en-consola",level:3},{value:"\ud83d\udd01 Versi\xf3n 1 (RECAP): Con <strong>callback</strong>",id:"-versi\xf3n-1-recap-con-callback",level:2},{value:"\ud83d\udd01 Versi\xf3n 2: Con <strong>promesas</strong>",id:"-versi\xf3n-2-con-promesas",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 hicimos?",id:"-qu\xe9-hicimos",level:3},{value:"\ud83d\udd01 Versi\xf3n 3: Con <strong>async/await</strong> (la forma m\xe1s clara y moderna)",id:"-versi\xf3n-3-con-asyncawait-la-forma-m\xe1s-clara-y-moderna",level:2},{value:"\u2705 Comparaci\xf3n final",id:"-comparaci\xf3n-final",level:2},{value:"\ud83c\udfaf Objetivo:",id:"-objetivo",level:2},{value:"\u2705 C\xf3digo completo comentado l\xednea por l\xednea",id:"-c\xf3digo-completo-comentado-l\xednea-por-l\xednea",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed paso a paso?",id:"-qu\xe9-pasa-aqu\xed-paso-a-paso",level:3},{value:"\ud83e\udde0 Ventajas:",id:"-ventajas",level:3},{value:"\ud83d\udce6 Salida esperada en consola:",id:"-salida-esperada-en-consola",level:3},{value:"\ud83c\udfaf Objetivo:",id:"-objetivo-1",level:2},{value:"\u2705 C\xf3digo completo con <code>Promise.all()</code> y comparaci\xf3n de tiempos",id:"-c\xf3digo-completo-con-promiseall-y-comparaci\xf3n-de-tiempos",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?",id:"-qu\xe9-pasa-aqu\xed",level:3},{value:"\ud83e\udde0 Comparaci\xf3n de tiempos",id:"-comparaci\xf3n-de-tiempos",level:3},{value:"\ud83d\udce6 Resultado esperado:",id:"-resultado-esperado",level:3},{value:"\ud83c\udfaf Objetivo:",id:"-objetivo-2",level:2},{value:"\u2705 C\xf3digo completo con <code>Promise.race()</code> y comentarios l\xednea por l\xednea",id:"-c\xf3digo-completo-con-promiserace-y-comentarios-l\xednea-por-l\xednea",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?",id:"-qu\xe9-ocurre-aqu\xed-2",level:2},{value:"\ud83d\udce6 Resultado ejemplo:",id:"-resultado-ejemplo",level:3},{value:"\ud83e\udde0 \xbfCu\xe1ndo usar <code>Promise.race()</code>?",id:"-cu\xe1ndo-usar-promiserace",level:3},{value:"\ud83c\udfaf Objetivo:",id:"-objetivo-3",level:2},{value:"\u2705 C\xf3digo completo con <code>Promise.race()</code> + timeout manual (comentado l\xednea por l\xednea)",id:"-c\xf3digo-completo-con-promiserace--timeout-manual-comentado-l\xednea-por-l\xednea",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?",id:"-qu\xe9-ocurre-aqu\xed-3",level:2},{value:"\ud83d\udce6 Posibles resultados:",id:"-posibles-resultados",level:2},{value:"Si la petici\xf3n fue r\xe1pida (menos de 3s):",id:"si-la-petici\xf3n-fue-r\xe1pida-menos-de-3s",level:3},{value:"Si fue lenta (m\xe1s de 3s):",id:"si-fue-lenta-m\xe1s-de-3s",level:3},{value:"\u2705 \xbfPor qu\xe9 es \xfatil esta t\xe9cnica?",id:"-por-qu\xe9-es-\xfatil-esta-t\xe9cnica",level:2},{value:"Callbacks en m\xe9todos de arrays",id:"callbacks-en-m\xe9todos-de-arrays",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es un callback en este contexto?",id:"-qu\xe9-es-un-callback-en-este-contexto",level:2},{value:"\u2705 1. <code>.forEach()</code> \u2013 Recorrer un array y hacer algo con cada elemento",id:"-1-foreach--recorrer-un-array-y-hacer-algo-con-cada-elemento",level:2},{value:"\ud83d\udd0d Qu\xe9 pasa aqu\xed:",id:"-qu\xe9-pasa-aqu\xed-1",level:3},{value:"\u2705 2. <code>.map()</code> \u2013 Crear un nuevo array a partir del original",id:"-2-map--crear-un-nuevo-array-a-partir-del-original",level:2},{value:"\ud83d\udd0d Qu\xe9 hace <code>.map()</code>:",id:"-qu\xe9-hace-map",level:3},{value:"\u2705 3. <code>.filter()</code> \u2013 Crear un nuevo array con elementos que cumplen una condici\xf3n",id:"-3-filter--crear-un-nuevo-array-con-elementos-que-cumplen-una-condici\xf3n",level:2},{value:"\ud83d\udd0d Qu\xe9 hace <code>.filter()</code>:",id:"-qu\xe9-hace-filter",level:3},{value:"\u2705 4. <code>.reduce()</code> \u2013 Reducir un array a un solo valor (acumulador)",id:"-4-reduce--reducir-un-array-a-un-solo-valor-acumulador",level:2},{value:"\ud83d\udd0d Qu\xe9 hace <code>.reduce()</code>:",id:"-qu\xe9-hace-reduce",level:3},{value:"\ud83d\udce6 Resumen visual:",id:"-resumen-visual",level:2},{value:"Ejemplos pr\xe1cticos reales:",id:"ejemplos-pr\xe1cticos-reales",level:3},{value:"\u2705 Parte 1: Calcular estad\xedsticas de usuarios (con <code>filter</code>, <code>map</code> y <code>reduce</code>)",id:"-parte-1-calcular-estad\xedsticas-de-usuarios-con-filter-map-y-reduce",level:2},{value:"\ud83e\uddfe Supuesto: tenemos una lista de usuarios con edad, y queremos:",id:"-supuesto-tenemos-una-lista-de-usuarios-con-edad-y-queremos",level:3},{value:"\ud83d\udce6 C\xf3digo comentado paso por paso:",id:"-c\xf3digo-comentado-paso-por-paso",level:3},{value:"\u2705 Salida esperada:",id:"-salida-esperada",level:3},{value:"\xbfQu\xe9 aprendiste aqu\xed?",id:"qu\xe9-aprendiste-aqu\xed",level:3},{value:"\ud83e\uddfe Supuesto: tenemos una lista de productos con nombre y precio base (sin impuestos), y queremos:",id:"-supuesto-tenemos-una-lista-de-productos-con-nombre-y-precio-base-sin-impuestos-y-queremos",level:2},{value:"\u2705 C\xf3digo completo y comentado l\xednea por l\xednea:",id:"-c\xf3digo-completo-y-comentado-l\xednea-por-l\xednea",level:2},{value:"\u2705 Salida esperada:",id:"-salida-esperada-1",level:2},{value:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?",id:"-qu\xe9-aprendiste-aqu\xed",level:3},{value:"\ud83e\uddfe Supuesto real:",id:"-supuesto-real",level:2},{value:"\u2705 C\xf3digo completo comentado paso por paso:",id:"-c\xf3digo-completo-comentado-paso-por-paso",level:2},{value:"\u2705 Salida esperada:",id:"-salida-esperada-2",level:3},{value:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?",id:"-qu\xe9-aprendiste-aqu\xed-1",level:3},{value:"Callbacks y manejo de Errores",id:"callbacks-y-manejo-de-errores",level:2},{value:"\ud83e\udde0 Concepto b\xe1sico:",id:"-concepto-b\xe1sico",level:3},{value:"\u2705 Ejemplo real simulado: leer un archivo (simulado con setTimeout)",id:"-ejemplo-real-simulado-leer-un-archivo-simulado-con-settimeout",level:2},{value:"\u2705 \xbfQu\xe9 hace este ejemplo?",id:"-qu\xe9-hace-este-ejemplo",level:3},{value:"\ud83d\udccc Resultado en consola:",id:"-resultado-en-consola",level:2},{value:"Funciones de Retry",id:"funciones-de-retry",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es <code>retry()</code>?",id:"-qu\xe9-es-retry",level:2},{value:"\u2705 Ejemplo pr\xe1ctico: Reintentar leer un archivo con callback",id:"-ejemplo-pr\xe1ctico-reintentar-leer-un-archivo-con-callback",level:2},{value:"\u2705 Creamos la funci\xf3n <code>retry</code>",id:"-creamos-la-funci\xf3n-retry",level:3},{value:"\u2705 Usamos <code>retry()</code> para ejecutar <code>leerArchivo</code>",id:"-usamos-retry-para-ejecutar-leerarchivo",level:3},{value:"\ud83e\uddea Posible salida (dependiendo del azar):",id:"-posible-salida-dependiendo-del-azar",level:2},{value:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?",id:"-qu\xe9-aprendiste-aqu\xed-2",level:3},{value:"Paralelismo controlado",id:"paralelismo-controlado",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es el paralelismo controlado?",id:"-qu\xe9-es-el-paralelismo-controlado",level:2},{value:"\u2705 Ejemplo real: Descargar 5 archivos, m\xe1ximo 2 en paralelo, con retry",id:"-ejemplo-real-descargar-5-archivos-m\xe1ximo-2-en-paralelo-con-retry",level:2},{value:"Paso 1: funci\xf3n simulada de descarga con fallo aleatorio",id:"paso-1-funci\xf3n-simulada-de-descarga-con-fallo-aleatorio",level:3},{value:"Paso 2: funci\xf3n retry para promesas",id:"paso-2-funci\xf3n-retry-para-promesas",level:3},{value:"Paso 3: ejecuci\xf3n con paralelismo controlado (m\xe1ximo 2 a la vez)",id:"paso-3-ejecuci\xf3n-con-paralelismo-controlado-m\xe1ximo-2-a-la-vez",level:3},{value:"Paso 4: definimos tareas y lanzamos todo",id:"paso-4-definimos-tareas-y-lanzamos-todo",level:3},{value:"\ud83e\udde0 \xbfQu\xe9 aprendiste?",id:"-qu\xe9-aprendiste",level:2},{value:"Practica mini APP de descarga masiva",id:"practica-mini-app-de-descarga-masiva",level:2},{value:"\ud83e\uddf1 Paso 1: HTML b\xe1sico (<code>index.html</code>)",id:"-paso-1-html-b\xe1sico-indexhtml",level:3},{value:"\ud83e\udde0 Paso 2: JavaScript con control de paralelismo y retry (<code>main.js</code>)",id:"-paso-2-javascript-con-control-de-paralelismo-y-retry-mainjs",level:3},{value:"\ud83e\uddea \xbfQu\xe9 ver\xe1s al ejecutar?",id:"-qu\xe9-ver\xe1s-al-ejecutar",level:2},{value:"\u2705 \xbfQu\xe9 aprendiste?",id:"-qu\xe9-aprendiste-1",level:3},{value:"\ud83e\uddf1 Paso 1: A\xf1adir la barra de progreso al HTML",id:"-paso-1-a\xf1adir-la-barra-de-progreso-al-html",level:3},{value:"\ud83e\udde0 Paso 2: JavaScript mejorado en <code>main.js</code>",id:"-paso-2-javascript-mejorado-en-mainjs",level:3},{value:"\ud83e\uddea \xbfQu\xe9 ver\xe1s ahora?",id:"-qu\xe9-ver\xe1s-ahora",level:2}];function t(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"callbacks",children:"Callbacks"})}),"\n",(0,r.jsx)(n.h2,{id:"funciones-de-callback-en-la-asincron\xeda-de-javascript",children:"Funciones de Callback en la Asincron\xeda de JavaScript"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-un-callback",children:["\ud83e\udde0 \xbfQu\xe9 es un ",(0,r.jsx)(n.strong,{children:"callback"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["Un ",(0,r.jsx)(n.strong,{children:"callback"})," es simplemente una ",(0,r.jsx)(n.strong,{children:"funci\xf3n que se pasa como argumento"})," a otra funci\xf3n, para que ",(0,r.jsx)(n.strong,{children:"esa otra funci\xf3n la ejecute m\xe1s tarde"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\ud83d\udce6 JavaScript trata a las funciones como ciudadanos de primera clase:"}),"\n",(0,r.jsxs)(n.p,{children:["Puedes ",(0,r.jsx)(n.strong,{children:"pasarlas como argumentos"}),", ",(0,r.jsx)(n.strong,{children:"guardarlas en variables"})," y ",(0,r.jsx)(n.strong,{children:"retornarlas"})," como cualquier dato."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-b\xe1sico-real-funci\xf3n-que-saluda-con-callback",children:"\u2705 Ejemplo b\xe1sico real: funci\xf3n que saluda con callback"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Funci\xf3n que toma un nombre y una funci\xf3n como argumentos\nfunction procesarUsuario(nombre, callback) {\n  // Mostramos un mensaje base\n  console.log("Procesando usuario...");\n\n  // Ejecutamos la funci\xf3n que se pas\xf3 como argumento (el callback)\n  callback(nombre);\n}\n\n// Esta es la funci\xf3n que queremos ejecutar al final\nfunction saludar(nombre) {\n  console.log(`Hola, ${nombre}. Bienvenido a la app.`);\n}\n\n// Llamamos a la funci\xf3n y le pasamos otra funci\xf3n como par\xe1metro\nprocesarUsuario("Carlos", saludar);\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre-aqu\xed",children:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Llamamos a ",(0,r.jsx)(n.code,{children:'procesarUsuario("Carlos", saludar)'}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["La funci\xf3n ",(0,r.jsx)(n.code,{children:"saludar"})," ",(0,r.jsx)(n.strong,{children:"no se ejecuta inmediatamente"}),", solo se ",(0,r.jsx)(n.strong,{children:"pasa como dato"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Dentro de ",(0,r.jsx)(n.code,{children:"procesarUsuario"}),", ",(0,r.jsxs)(n.strong,{children:["se ejecuta ",(0,r.jsx)(n.code,{children:"callback(nombre)"})]}),", y entonces se llama a ",(0,r.jsx)(n.code,{children:'saludar("Carlos")'}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-esto-es-un-callback",children:["\ud83d\udccc Esto es un ",(0,r.jsx)(n.strong,{children:"callback"}),":"]}),"\n",(0,r.jsxs)(n.p,{children:["Una ",(0,r.jsx)(n.strong,{children:"funci\xf3n que se ejecuta dentro de otra"}),", pasada como par\xe1metro."]}),"\n",(0,r.jsx)(n.h2,{id:"-otro-ejemplo-real-funci\xf3n-con-retraso-simulando-asincron\xeda",children:"\u2705 Otro ejemplo real: funci\xf3n con retraso (simulando asincron\xeda)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function esperarYMostrar(mensaje, callback) {\n  console.log("\u23f3 Esperando 2 segundos...");\n\n  setTimeout(() => {\n    console.log(mensaje);\n    callback(); // ejecutamos el callback despu\xe9s del mensaje\n  }, 2000);\n}\n\nfunction final() {\n  console.log("\u2705 Todo ha terminado.");\n}\n\n// Llamamos y pasamos la funci\xf3n final como callback\nesperarYMostrar("\ud83d\udcdd Aqu\xed est\xe1 tu mensaje", final);\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre-aqu\xed-1",children:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Usamos ",(0,r.jsx)(n.code,{children:"setTimeout"})," para simular un proceso que tarda."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Cuando termina, ",(0,r.jsx)(n.strong,{children:"llamamos al callback"})," (la funci\xf3n ",(0,r.jsx)(n.code,{children:"final"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Resultado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u23f3 Esperando 2 segundos...\n\ud83d\udcdd Aqu\xed est\xe1 tu mensaje\n\u2705 Todo ha terminado.\n\n"})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo de callback t\xedpico del DOM (por ejemplo, con addEventListener) y despu\xe9s c\xf3mo los callbacks pueden volverse complicados (callback hell) si no se organizan bien"}),"\n",(0,r.jsxs)(n.h2,{id:"-parte-1-ejemplo-real-de-callback-en-el-dom-con-addeventlistener",children:["\u2705 Parte 1: ",(0,r.jsxs)(n.strong,{children:["Ejemplo real de callback en el DOM con ",(0,r.jsx)(n.code,{children:"addEventListener"})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n<head>\n  <meta charset="UTF-8">\n  <title>Callback en el DOM</title>\n</head>\n<body>\n  <button id="miBoton">Haz clic aqu\xed</button>\n  <p id="mensaje"></p>\n\n  <script>\n    // Obtenemos los elementos del DOM\n    const boton = document.getElementById("miBoton");\n    const mensaje = document.getElementById("mensaje");\n\n    // Callback: esta funci\xf3n se ejecutar\xe1 cuando el bot\xf3n sea clicado\n    function manejarClick() {\n      mensaje.textContent = "\ud83d\udc4b \xa1Hola! Has hecho clic en el bot\xf3n.";\n    }\n\n    // Asociamos el evento al bot\xf3n con un callback\n    boton.addEventListener("click", manejarClick);\n  <\/script>\n</body>\n</html>\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-est\xe1-pasando",children:"\ud83d\udd0d \xbfQu\xe9 est\xe1 pasando?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Tenemos un bot\xf3n y un p\xe1rrafo."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Usamos ",(0,r.jsx)(n.code,{children:"addEventListener"})," para decir:"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'"Cuando alguien haga clic en este bot\xf3n, ejecuta esta funci\xf3n".'}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["La funci\xf3n ",(0,r.jsx)(n.code,{children:"manejarClick"})," es un ",(0,r.jsx)(n.strong,{children:"callback"})," porque ",(0,r.jsx)(n.strong,{children:"no se ejecuta inmediatamente"}),", sino que ",(0,r.jsx)(n.strong,{children:"se pasa como argumento"})," y se ejecuta ",(0,r.jsx)(n.strong,{children:"cuando ocurra un evento"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"\ufe0f-parte-2-ejemplo-de-callback-hell-infierno-de-callbacks",children:["\u26a0\ufe0f Parte 2: Ejemplo de ",(0,r.jsx)(n.strong,{children:"callback hell"})," (infierno de callbacks)"]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando tenemos ",(0,r.jsx)(n.strong,{children:"muchas funciones anidadas una dentro de otra"}),", especialmente asincr\xf3nicas (como en ",(0,r.jsx)(n.code,{children:"setTimeout"}),"), el c\xf3digo se vuelve ",(0,r.jsx)(n.strong,{children:"dif\xedcil de leer y mantener"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"-ejemplo-con-settimeout",children:["\ud83d\udca5 Ejemplo con ",(0,r.jsx)(n.code,{children:"setTimeout"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'console.log("\ud83d\udee0 Iniciando proceso...");\n\nsetTimeout(() => {\n  console.log("Paso 1 completado");\n\n  setTimeout(() => {\n    console.log("Paso 2 completado");\n\n    setTimeout(() => {\n      console.log("Paso 3 completado");\n\n      setTimeout(() => {\n        console.log("\u2705 Proceso finalizado");\n      }, 1000);\n\n    }, 1000);\n\n  }, 1000);\n\n}, 1000);\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-problemas",children:"\ud83d\udd0d Problemas:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Todo est\xe1 ",(0,r.jsx)(n.strong,{children:"muy anidado"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Dif\xedcil de ",(0,r.jsx)(n.strong,{children:"leer"}),", ",(0,r.jsx)(n.strong,{children:"debuggear"})," y ",(0,r.jsx)(n.strong,{children:"modificar"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Si necesitas manejar errores aqu\xed, se complica a\xfan m\xe1s."}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:'A esto se le llama callback hell ("infierno de callbacks").'}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-c\xf3mo-evitarlo",children:"\u2705 \xbfC\xf3mo evitarlo?"}),"\n",(0,r.jsxs)(n.p,{children:["Con ",(0,r.jsx)(n.strong,{children:"promesas"})," y ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"async/await"})}),", que hacen que el c\xf3digo asincr\xf3nico se vea como secuencial."]}),"\n",(0,r.jsxs)(n.p,{children:["\xbfQuieres que ahora transformemos este mismo ejemplo de callback hell en una versi\xf3n con ",(0,r.jsx)(n.code,{children:"async/await"}),", bien organizada y limpia?"]}),"\n",(0,r.jsxs)(n.p,{children:["Vamos a ",(0,r.jsx)(n.strong,{children:"transformar el ejemplo de callback hell"})," con ",(0,r.jsx)(n.code,{children:"setTimeout"})," en una versi\xf3n ",(0,r.jsxs)(n.strong,{children:["mucho m\xe1s clara y limpia usando ",(0,r.jsx)(n.code,{children:"async/await"})]}),"."]}),"\n",(0,r.jsxs)(n.h2,{id:"-versi\xf3n-limpia-y-moderna-con-asyncawait",children:["\u2705 Versi\xf3n limpia y moderna con ",(0,r.jsx)(n.code,{children:"async/await"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n<head>\n  <meta charset="UTF-8">\n  <title>Async/Await en cadena</title>\n</head>\n<body>\n  <h2>Ejemplo: evitar callback hell con async/await</h2>\n  <button id="iniciar">Iniciar proceso</button>\n  <pre id="log"></pre>\n\n  <script>\n    const log = document.getElementById("log");\n    const btn = document.getElementById("iniciar");\n\n    // Funci\xf3n que simula esperar N milisegundos\n    function esperar(ms) {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    // Funci\xf3n asincr\xf3nica que organiza los pasos con await\n    async function ejecutarProceso() {\n      log.textContent = "\ud83d\udee0 Iniciando proceso...\\n";\n\n      await esperar(1000);\n      log.textContent += "\u2714\ufe0f Paso 1 completado\\n";\n\n      await esperar(1000);\n      log.textContent += "\u2714\ufe0f Paso 2 completado\\n";\n\n      await esperar(1000);\n      log.textContent += "\u2714\ufe0f Paso 3 completado\\n";\n\n      await esperar(1000);\n      log.textContent += "\u2705 Proceso finalizado";\n    }\n\n    // Al hacer clic, ejecutamos todo el proceso asincr\xf3nico\n    btn.addEventListener("click", ejecutarProceso);\n  <\/script>\n</body>\n</html>\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hicimos-aqu\xed",children:"\ud83d\udd0d \xbfQu\xe9 hicimos aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Creamos una funci\xf3n ",(0,r.jsx)(n.code,{children:"esperar(ms)"})," que devuelve una promesa con ",(0,r.jsx)(n.code,{children:"setTimeout"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Usamos ",(0,r.jsx)(n.code,{children:"await"})," para esperar cada paso."]}),"\n",(0,r.jsxs)(n.li,{children:["El c\xf3digo se lee ",(0,r.jsx)(n.strong,{children:"de arriba hacia abajo"}),", como si fuera ",(0,r.jsx)(n.strong,{children:"sincr\xf3nico"}),", pero sigue siendo asincr\xf3nico."]}),"\n",(0,r.jsx)(n.li,{children:'Evitamos el caos de anidamientos del "callback hell".'}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-ventajas-de-usar-asyncawait",children:["\u2705 Ventajas de usar ",(0,r.jsx)(n.code,{children:"async/await"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Mucho m\xe1s legible."}),"\n",(0,r.jsx)(n.li,{children:"F\xe1cil de mantener y ampliar."}),"\n",(0,r.jsxs)(n.li,{children:["Puedes usar ",(0,r.jsx)(n.code,{children:"try/catch"})," para manejar errores f\xe1cilmente."]}),"\n",(0,r.jsx)(n.li,{children:"Ideal para procesos que dependen uno del otro."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"soluciones-para-evitar-el-callback-hell",children:"Soluciones para Evitar el Callback Hell"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Modularizaci\xf3n del C\xf3digo"}),": Dividir el c\xf3digo en funciones m\xe1s peque\xf1as y modulares puede ayudar a evitar el anidamiento excesivo de callbacks. Cada funci\xf3n puede manejar una parte espec\xedfica de la l\xf3gica asincr\xf3nica."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Promesas"}),": Las promesas, introducidas en ECMAScript 6, proporcionan una manera m\xe1s estructurada de manejar la asincron\xeda y evitar el callback hell. Las promesas permiten encadenar operaciones asincr\xf3nicas de manera m\xe1s clara y manejable."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Async/Await"}),": La sintaxis async/await, introducida en ECMAScript 2017, permite escribir c\xf3digo asincr\xf3nico de manera similar al c\xf3digo s\xedncrono, mejorando significativamente la legibilidad y manejabilidad del c\xf3digo."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"callbacks-en-operaciones-asincr\xf3nicas-ejemplos",children:"Callbacks en Operaciones Asincr\xf3nicas (Ejemplos)"}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed tienes un ",(0,r.jsx)(n.strong,{children:"ejemplo completo y real"})," de ",(0,r.jsx)(n.strong,{children:"callback en una operaci\xf3n asincr\xf3nica"})," usando ",(0,r.jsx)(n.code,{children:"setTimeout"}),", que simula una tarea que toma tiempo (como consultar una base de datos o llamar a una API). Te lo explico ",(0,r.jsx)(n.strong,{children:"l\xednea por l\xednea"})," con comentarios claros."]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-procesar-un-pedido-y-notificar-al-usuario-con-un-callback",children:"\u2705 Ejemplo real: procesar un pedido y notificar al usuario con un callback"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Funci\xf3n asincr\xf3nica simulada usando setTimeout\nfunction procesarPedido(pedido, callback) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  // Simulamos un retardo de 2 segundos (como una operaci\xf3n asincr\xf3nica)\n  setTimeout(() => {\n    console.log("\u2705 Pedido procesado correctamente.");\n\n    // Ejecutamos el callback una vez termina la operaci\xf3n\n    callback(pedido);\n  }, 2000);\n}\n\n// Esta es la funci\xf3n callback que se ejecutar\xe1 al finalizar el pedido\nfunction notificarUsuario(pedido) {\n  console.log(`\ud83d\udce6 Tu pedido "${pedido}" est\xe1 listo para ser enviado.`);\n}\n\n// Ejecutamos todo pasando la funci\xf3n notificarUsuario como callback\nprocesarPedido("Camiseta JavaScript", notificarUsuario);\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-ocurre-paso-por-paso",children:"\ud83d\udd0d \xbfQu\xe9 ocurre paso por paso?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Llamamos a ",(0,r.jsx)(n.code,{children:'procesarPedido("Camiseta JavaScript", notificarUsuario)'})]})}),"\n",(0,r.jsxs)(n.p,{children:["\u2192 Esto ",(0,r.jsx)(n.strong,{children:"inicia la operaci\xf3n"})," y le pasamos una funci\xf3n (",(0,r.jsx)(n.code,{children:"notificarUsuario"}),") que ",(0,r.jsx)(n.strong,{children:"debe ejecutarse al final"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Dentro de ",(0,r.jsx)(n.code,{children:"procesarPedido"}),", se imprime el mensaje inicial:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\uded2 Recibido pedido: Camiseta JavaScript\n\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Luego, se inicia ",(0,r.jsx)(n.code,{children:"setTimeout(...)"})," que ",(0,r.jsx)(n.strong,{children:"simula una espera de 2 segundos"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Despu\xe9s de los 2 segundos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Se imprime ",(0,r.jsx)(n.code,{children:"\u2705 Pedido procesado correctamente."})]}),"\n",(0,r.jsxs)(n.li,{children:["Se ejecuta el ",(0,r.jsxs)(n.strong,{children:["callback ",(0,r.jsx)(n.code,{children:"notificarUsuario(pedido)"})]})]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Finalmente, el callback imprime:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\ud83d\udce6 Tu pedido "Camiseta JavaScript" est\xe1 listo para ser enviado.\n\n'})}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-por-qu\xe9-es-asincr\xf3nico",children:"\ud83e\udde0 \xbfPor qu\xe9 es asincr\xf3nico?"}),"\n",(0,r.jsxs)(n.p,{children:["Porque usamos ",(0,r.jsx)(n.code,{children:"setTimeout"}),", que es ",(0,r.jsx)(n.strong,{children:"no bloqueante"}),": la ejecuci\xf3n ",(0,r.jsx)(n.strong,{children:"contin\xfaa"})," mientras espera. En una app real, esto puede representar una petici\xf3n a servidor, lectura de archivo, etc."]}),"\n",(0,r.jsx)(n.h3,{id:"-resultado-final-esperado-en-consola",children:"\u2705 Resultado final esperado en consola:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\ud83d\uded2 Recibido pedido: Camiseta JavaScript\n\u2705 Pedido procesado correctamente.\n\ud83d\udce6 Tu pedido "Camiseta JavaScript" est\xe1 listo para ser enviado.\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos a transformar el ejemplo original paso por paso para que veas ",(0,r.jsx)(n.strong,{children:"c\xf3mo evoluciona el c\xf3digo"})," desde:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Callback"})," \u2192"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Promesa"})," \u2192"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"async/await"})]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-versi\xf3n-1-recap-con-callback",children:["\ud83d\udd01 Versi\xf3n 1 (RECAP): Con ",(0,r.jsx)(n.strong,{children:"callback"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function procesarPedido(pedido, callback) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  setTimeout(() => {\n    console.log("\u2705 Pedido procesado correctamente.");\n    callback(pedido); // Ejecutamos el callback manualmente\n  }, 2000);\n}\n\nfunction notificarUsuario(pedido) {\n  console.log(`\ud83d\udce6 Tu pedido "${pedido}" est\xe1 listo para ser enviado.`);\n}\n\nprocesarPedido("Camiseta JavaScript", notificarUsuario);\n\n'})}),"\n",(0,r.jsxs)(n.h2,{id:"-versi\xf3n-2-con-promesas",children:["\ud83d\udd01 Versi\xf3n 2: Con ",(0,r.jsx)(n.strong,{children:"promesas"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Ahora procesarPedido devuelve una promesa\nfunction procesarPedido(pedido) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      console.log("\u2705 Pedido procesado correctamente.");\n      resolve(pedido); // Terminamos la promesa con \xe9xito\n    }, 2000);\n  });\n}\n\n// Usamos .then() para manejar el resultado\nprocesarPedido("Camiseta JavaScript")\n  .then((pedido) => {\n    console.log(`\ud83d\udce6 Tu pedido "${pedido}" est\xe1 listo para ser enviado.`);\n  })\n  .catch((error) => {\n    console.error("\u274c Hubo un error con el pedido:", error);\n  });\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hicimos",children:"\ud83d\udd0d \xbfQu\xe9 hicimos?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ahora ",(0,r.jsx)(n.code,{children:"procesarPedido"})," devuelve una ",(0,r.jsx)(n.strong,{children:"promesa"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Podemos usar ",(0,r.jsx)(n.code,{children:".then()"})," para ejecutar algo ",(0,r.jsx)(n.strong,{children:"cuando termine"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Separamos claramente la ",(0,r.jsx)(n.strong,{children:"l\xf3gica de la operaci\xf3n"})," y la ",(0,r.jsx)(n.strong,{children:"reacci\xf3n al resultado"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-versi\xf3n-3-con-asyncawait-la-forma-m\xe1s-clara-y-moderna",children:["\ud83d\udd01 Versi\xf3n 3: Con ",(0,r.jsx)(n.strong,{children:"async/await"})," (la forma m\xe1s clara y moderna)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function procesarPedido(pedido) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log("\u2705 Pedido procesado correctamente.");\n      resolve(pedido);\n    }, 2000);\n  });\n}\n\n// Funci\xf3n asincr\xf3nica que usa await en vez de .then()\nasync function ejecutarPedido() {\n  try {\n    const pedido = await procesarPedido("Camiseta JavaScript");\n    console.log(`\ud83d\udce6 Tu pedido "${pedido}" est\xe1 listo para ser enviado.`);\n  } catch (error) {\n    console.error("\u274c Hubo un error con el pedido:", error);\n  }\n}\n\n// Ejecutamos todo\nejecutarPedido();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-comparaci\xf3n-final",children:"\u2705 Comparaci\xf3n final"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Versi\xf3n"}),(0,r.jsx)(n.th,{children:"C\xf3digo limpio"}),(0,r.jsx)(n.th,{children:"Manejo de errores"}),(0,r.jsx)(n.th,{children:"Orden secuencial"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Callback"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"Complicado"}),(0,r.jsx)(n.td,{children:"Dif\xedcil de leer"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Promesa (.then)"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsxs)(n.td,{children:["Con ",(0,r.jsx)(n.code,{children:".catch()"})]}),(0,r.jsx)(n.td,{children:"Medianamente"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Async/Await"}),(0,r.jsx)(n.td,{children:"\u2705\u2705"}),(0,r.jsxs)(n.td,{children:["Natural con ",(0,r.jsx)(n.code,{children:"try"})]}),(0,r.jsx)(n.td,{children:"\u2705 Muy claro"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos a ",(0,r.jsxs)(n.strong,{children:["extender el ejemplo con ",(0,r.jsx)(n.code,{children:"async/await"})]})," para simular ",(0,r.jsx)(n.strong,{children:"dos pedidos realizados uno despu\xe9s del otro"}),", como si un usuario hiciera varios pedidos y quisieras procesarlos en orden."]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo",children:"\ud83c\udfaf Objetivo:"}),"\n",(0,r.jsxs)(n.p,{children:["Simular dos pedidos consecutivos (uno tras otro), usando ",(0,r.jsx)(n.code,{children:"async/await"}),", de forma clara y entendible."]}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3digo-completo-comentado-l\xednea-por-l\xednea",children:"\u2705 C\xf3digo completo comentado l\xednea por l\xednea"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos una operaci\xf3n asincr\xf3nica: procesar un pedido\nfunction procesarPedido(pedido) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log(`\u2705 Pedido "${pedido}" procesado correctamente.`);\n      resolve(pedido);\n    }, 2000); // Simulamos 2 segundos de espera\n  });\n}\n\n// Funci\xf3n asincr\xf3nica que encadena dos pedidos en orden\nasync function ejecutarPedidosEnCadena() {\n  try {\n    // Primer pedido\n    const pedido1 = await procesarPedido("Camiseta JavaScript");\n    console.log(`\ud83d\udce6 Pedido 1 listo: ${pedido1}\\n`);\n\n    // Segundo pedido (solo comienza cuando termina el primero)\n    const pedido2 = await procesarPedido("Sticker HTML5");\n    console.log(`\ud83d\udce6 Pedido 2 listo: ${pedido2}\\n`);\n\n    console.log("\ud83c\udf89 Todos los pedidos fueron procesados exitosamente.");\n  } catch (error) {\n    console.error("\u274c Error durante el procesamiento de pedidos:", error);\n  }\n}\n\n// Ejecutamos la funci\xf3n principal\nejecutarPedidosEnCadena();\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed-paso-a-paso",children:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed paso a paso?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Llamamos a ",(0,r.jsx)(n.code,{children:"ejecutarPedidosEnCadena()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Se procesa el ",(0,r.jsx)(n.strong,{children:"primer pedido"})," (",(0,r.jsx)(n.code,{children:'"Camiseta JavaScript"'}),") con ",(0,r.jsx)(n.code,{children:"await"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Solo cuando el primer pedido termina, se procesa el ",(0,r.jsx)(n.strong,{children:"segundo pedido"})," (",(0,r.jsx)(n.code,{children:'"Sticker HTML5"'}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Se muestra el mensaje final cuando ",(0,r.jsx)(n.strong,{children:"ambos han sido procesados"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si alguno falla, el ",(0,r.jsx)(n.code,{children:"try...catch"})," lo captura."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-ventajas",children:"\ud83e\udde0 Ventajas:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 El orden es ",(0,r.jsx)(n.strong,{children:"100% controlado"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 El c\xf3digo es ",(0,r.jsx)(n.strong,{children:"limpio y legible"}),", sin anidamientos."]}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Se puede ampliar f\xe1cilmente a 3, 4, o m\xe1s pasos."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-salida-esperada-en-consola",children:"\ud83d\udce6 Salida esperada en consola:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\ud83d\uded2 Recibido pedido: Camiseta JavaScript\n\u2705 Pedido "Camiseta JavaScript" procesado correctamente.\n\ud83d\udce6 Pedido 1 listo: Camiseta JavaScript\n\n\ud83d\uded2 Recibido pedido: Sticker HTML5\n\u2705 Pedido "Sticker HTML5" procesado correctamente.\n\ud83d\udce6 Pedido 2 listo: Sticker HTML5\n\n\ud83c\udf89 Todos los pedidos fueron procesados exitosamente.\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Ahora vamos a usar ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Promise.all()"})})," para ",(0,r.jsx)(n.strong,{children:"procesar varios pedidos al mismo tiempo"}),", es decir, ",(0,r.jsx)(n.strong,{children:"en paralelo"}),", en lugar de uno tras otro como hicimos antes con ",(0,r.jsx)(n.code,{children:"await"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo-1",children:"\ud83c\udfaf Objetivo:"}),"\n",(0,r.jsxs)(n.p,{children:["Procesar m\xfaltiples pedidos de forma ",(0,r.jsx)(n.strong,{children:"concurrente"}),", y mostrar ",(0,r.jsx)(n.strong,{children:"cu\xe1nto tardan en total"})," comparado con el modo secuencial."]}),"\n",(0,r.jsxs)(n.h2,{id:"-c\xf3digo-completo-con-promiseall-y-comparaci\xf3n-de-tiempos",children:["\u2705 C\xf3digo completo con ",(0,r.jsx)(n.code,{children:"Promise.all()"})," y comparaci\xf3n de tiempos"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos una operaci\xf3n asincr\xf3nica que tarda 2 segundos por pedido\nfunction procesarPedido(pedido) {\n  console.log(`\ud83d\uded2 Recibido pedido: ${pedido}`);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      console.log(`\u2705 Pedido "${pedido}" procesado.`);\n      resolve(pedido);\n    }, 2000);\n  });\n}\n\n// Funci\xf3n asincr\xf3nica para procesar m\xfaltiples pedidos en paralelo\nasync function ejecutarPedidosEnParalelo() {\n  const pedidos = ["Camiseta JS", "Sticker HTML5", "Gorra CSS"];\n\n  console.log("\u23f1 Iniciando procesamiento en paralelo...\\n");\n\n  const inicio = Date.now(); // Marcamos el tiempo de inicio\n\n  try {\n    // Lanzamos todos los pedidos al mismo tiempo\n    const resultados = await Promise.all(\n      pedidos.map((p) => procesarPedido(p))\n    );\n\n    const fin = Date.now(); // Tiempo al finalizar\n\n    console.log("\\n\ud83d\udce6 Todos los pedidos fueron procesados:");\n    resultados.forEach((p, i) => {\n      console.log(`  ${i + 1}. ${p}`);\n    });\n\n    const duracion = ((fin - inicio) / 1000).toFixed(2);\n    console.log(`\u23f3 Tiempo total: ${duracion} segundos`);\n  } catch (error) {\n    console.error("\u274c Ocurri\xf3 un error al procesar los pedidos:", error);\n  }\n}\n\nejecutarPedidosEnParalelo();\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed",children:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Creamos un array de pedidos (",(0,r.jsx)(n.code,{children:'["Camiseta JS", "Sticker HTML5", "Gorra CSS"]'}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Con ",(0,r.jsx)(n.code,{children:"Promise.all()"})," y ",(0,r.jsx)(n.code,{children:".map()"}),", ",(0,r.jsx)(n.strong,{children:"disparamos todas las promesas a la vez"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"await Promise.all(...)"})," espera a que ",(0,r.jsx)(n.strong,{children:"todas las promesas terminen"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Luego imprimimos los resultados y el ",(0,r.jsx)(n.strong,{children:"tiempo total"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-comparaci\xf3n-de-tiempos",children:"\ud83e\udde0 Comparaci\xf3n de tiempos"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cada pedido tarda ",(0,r.jsx)(n.strong,{children:"2 segundos"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["En modo secuencial (con ",(0,r.jsx)(n.code,{children:"await"})," uno tras otro), ser\xedan: ",(0,r.jsx)(n.strong,{children:"2s + 2s + 2s = 6s"})," aprox."]}),"\n",(0,r.jsxs)(n.li,{children:["En modo paralelo (",(0,r.jsx)(n.code,{children:"Promise.all()"}),"), tardan: ",(0,r.jsx)(n.strong,{children:"\u2248 2s en total"})," \ud83d\udd25"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-resultado-esperado",children:"\ud83d\udce6 Resultado esperado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\u23f1 Iniciando procesamiento en paralelo...\n\n\ud83d\uded2 Recibido pedido: Camiseta JS\n\ud83d\uded2 Recibido pedido: Sticker HTML5\n\ud83d\uded2 Recibido pedido: Gorra CSS\n\u2705 Pedido "Camiseta JS" procesado.\n\u2705 Pedido "Sticker HTML5" procesado.\n\u2705 Pedido "Gorra CSS" procesado.\n\n\ud83d\udce6 Todos los pedidos fueron procesados:\n  1. Camiseta JS\n  2. Sticker HTML5\n  3. Gorra CSS\n\u23f3 Tiempo total: 2.00 segundos\n\n'})}),"\n",(0,r.jsxs)(n.p,{children:["Ahora vamos a usar ",(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.code,{children:"Promise.race()"})}),", que nos permite lanzar varias promesas al mismo tiempo, ",(0,r.jsx)(n.strong,{children:"pero solo se resuelve (o rechaza) con la primera que termine"}),", sin importar si fue la m\xe1s r\xe1pida o la m\xe1s lenta."]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo-2",children:"\ud83c\udfaf Objetivo:"}),"\n",(0,r.jsxs)(n.p,{children:["Simular una carrera entre pedidos y actuar ",(0,r.jsx)(n.strong,{children:"solo con el primero que se procese"}),", ignorando el resto."]}),"\n",(0,r.jsxs)(n.h2,{id:"-c\xf3digo-completo-con-promiserace-y-comentarios-l\xednea-por-l\xednea",children:["\u2705 C\xf3digo completo con ",(0,r.jsx)(n.code,{children:"Promise.race()"})," y comentarios l\xednea por l\xednea"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos un pedido que tarda entre 1 y 5 segundos aleatoriamente\nfunction procesarPedido(pedido) {\n  const tiempo = Math.floor(Math.random() * 5000) + 1000; // entre 1 y 5 segundos\n\n  console.log(`\ud83d\uded2 Pedido "${pedido}" recibido. Tardar\xe1 ${tiempo}ms.`);\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(`\u2705 Pedido "${pedido}" completado en ${tiempo}ms`);\n    }, tiempo);\n  });\n}\n\n// Funci\xf3n principal usando Promise.race\nasync function ejecutarCarreraDePedidos() {\n  const pedidos = ["Camiseta JS", "Sticker CSS", "Taza HTML"];\n\n  console.log("\ud83c\udfc1 Iniciando carrera de pedidos...\\n");\n\n  try {\n    // Solo se resuelve el primer pedido que termine\n    const ganador = await Promise.race(\n      pedidos.map((p) => procesarPedido(p))\n    );\n\n    console.log(`\\n\ud83c\udf89 El primer pedido en completarse fue:\\n${ganador}`);\n  } catch (error) {\n    console.error("\u274c Ocurri\xf3 un error:", error);\n  }\n}\n\nejecutarCarreraDePedidos();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-ocurre-aqu\xed-2",children:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Cada pedido simula un tiempo aleatorio (1 a 5 segundos)."}),"\n",(0,r.jsxs)(n.li,{children:["Todos se lanzan ",(0,r.jsx)(n.strong,{children:"al mismo tiempo"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"Promise.race()"})," resuelve con la primera promesa que termine"]}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Imprimimos solo el resultado del m\xe1s r\xe1pido."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-resultado-ejemplo",children:"\ud83d\udce6 Resultado ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'\ud83c\udfc1 Iniciando carrera de pedidos...\n\n\ud83d\uded2 Pedido "Camiseta JS" recibido. Tardar\xe1 3763ms.\n\ud83d\uded2 Pedido "Sticker CSS" recibido. Tardar\xe1 1285ms.\n\ud83d\uded2 Pedido "Taza HTML" recibido. Tardar\xe1 2214ms.\n\n\ud83c\udf89 El primer pedido en completarse fue:\n\u2705 Pedido "Sticker CSS" completado en 1285ms\n\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-cu\xe1ndo-usar-promiserace",children:["\ud83e\udde0 \xbfCu\xe1ndo usar ",(0,r.jsx)(n.code,{children:"Promise.race()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cuando necesitas ",(0,r.jsx)(n.strong,{children:"la primera respuesta disponible"}),", no todas."]}),"\n",(0,r.jsxs)(n.li,{children:["Para implementar ",(0,r.jsx)(n.strong,{children:"timeouts personalizados"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Para elegir ",(0,r.jsx)(n.strong,{children:"la API o servidor m\xe1s r\xe1pido"})," entre varias opciones."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora vamos a combinar ",(0,r.jsx)(n.code,{children:"**Promise.race()**"})," con un ",(0,r.jsx)(n.strong,{children:"timeout manual"}),", una t\xe9cnica muy \xfatil para ",(0,r.jsx)(n.strong,{children:"cancelar procesos lentos"})," si no responden a tiempo."]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo-3",children:"\ud83c\udfaf Objetivo:"}),"\n",(0,r.jsxs)(n.p,{children:["Simular una petici\xf3n (por ejemplo a una API) y ",(0,r.jsx)(n.strong,{children:"cancelarla si tarda m\xe1s de 3 segundos"}),", mostrando un mensaje de error si se excede ese tiempo."]}),"\n",(0,r.jsxs)(n.h2,{id:"-c\xf3digo-completo-con-promiserace--timeout-manual-comentado-l\xednea-por-l\xednea",children:["\u2705 C\xf3digo completo con ",(0,r.jsx)(n.code,{children:"Promise.race()"})," + timeout manual (comentado l\xednea por l\xednea)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos una petici\xf3n asincr\xf3nica que tarda entre 2 y 5 segundos\nfunction peticionLenta() {\n  const tiempo = Math.floor(Math.random() * 3000) + 2000; // entre 2000ms y 5000ms\n\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(`\u2705 Respuesta recibida en ${tiempo}ms`);\n    }, tiempo);\n  });\n}\n\n// Promesa de timeout: se rechaza despu\xe9s de cierto tiempo\nfunction crearTimeout(ms) {\n  return new Promise((_, reject) => {\n    setTimeout(() => {\n      reject(`\u23f0 Tiempo de espera excedido: ${ms}ms`);\n    }, ms);\n  });\n}\n\n// Funci\xf3n principal que usa Promise.race para elegir entre la petici\xf3n o el timeout\nasync function ejecutarPeticionConTimeout() {\n  console.log("\ud83d\ude80 Iniciando petici\xf3n...");\n\n  try {\n    // Solo se resolver\xe1 la promesa que termine primero: la petici\xf3n o el timeout\n    const resultado = await Promise.race([\n      peticionLenta(),      // Operaci\xf3n lenta\n      crearTimeout(3000)    // Tiempo m\xe1ximo permitido: 3 segundos\n    ]);\n\n    console.log(resultado);\n  } catch (error) {\n    // Se ejecuta si gana el timeout\n    console.error("\u274c Error:", error);\n  }\n}\n\nejecutarPeticionConTimeout();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-ocurre-aqu\xed-3",children:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"peticionLenta()"})," tarda ",(0,r.jsx)(n.strong,{children:"entre 2 y 5 segundos"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"crearTimeout(3000)"})," se ",(0,r.jsx)(n.strong,{children:"rechaza"})," si pasan m\xe1s de ",(0,r.jsx)(n.strong,{children:"3 segundos"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.race()"})," ",(0,r.jsx)(n.strong,{children:"espera la primera promesa que termine"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Si la petici\xf3n termina antes de 3s \u2192 ",(0,r.jsx)(n.code,{children:".then()"})]}),"\n",(0,r.jsxs)(n.li,{children:["Si tarda m\xe1s \u2192 gana el timeout \u2192 ",(0,r.jsx)(n.code,{children:".catch()"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-posibles-resultados",children:"\ud83d\udce6 Posibles resultados:"}),"\n",(0,r.jsx)(n.h3,{id:"si-la-petici\xf3n-fue-r\xe1pida-menos-de-3s",children:"Si la petici\xf3n fue r\xe1pida (menos de 3s):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\ude80 Iniciando petici\xf3n...\n\u2705 Respuesta recibida en 2481ms\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"si-fue-lenta-m\xe1s-de-3s",children:"Si fue lenta (m\xe1s de 3s):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\ude80 Iniciando petici\xf3n...\n\u274c Error: \u23f0 Tiempo de espera excedido: 3000ms\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-por-qu\xe9-es-\xfatil-esta-t\xe9cnica",children:"\u2705 \xbfPor qu\xe9 es \xfatil esta t\xe9cnica?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Para evitar que la app se quede esperando eternamente."}),"\n",(0,r.jsxs)(n.li,{children:["Para mejorar la ",(0,r.jsx)(n.strong,{children:"experiencia del usuario"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Para evitar errores o congelamientos por ",(0,r.jsx)(n.strong,{children:"APIs lentas o sin respuesta"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"callbacks-en-m\xe9todos-de-arrays",children:"Callbacks en m\xe9todos de arrays"}),"\n",(0,r.jsxs)(n.p,{children:["Vamos a ver c\xf3mo se usan los ",(0,r.jsx)(n.strong,{children:"callbacks en los m\xe9todos de arrays"})," m\xe1s comunes en JavaScript: ",(0,r.jsx)(n.code,{children:"forEach"}),", ",(0,r.jsx)(n.code,{children:"map"}),", ",(0,r.jsx)(n.code,{children:"filter"})," y ",(0,r.jsx)(n.code,{children:"reduce"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-es-un-callback-en-este-contexto",children:"\ud83e\udde0 \xbfQu\xe9 es un callback en este contexto?"}),"\n",(0,r.jsxs)(n.p,{children:["Cuando usas m\xe9todos como ",(0,r.jsx)(n.code,{children:".map()"}),", ",(0,r.jsx)(n.code,{children:".filter()"}),", etc., ",(0,r.jsx)(n.strong,{children:"le pasas una funci\xf3n como argumento"}),". Esa funci\xf3n es el ",(0,r.jsx)(n.strong,{children:"callback"}),", y el array ",(0,r.jsx)(n.strong,{children:"la ejecuta autom\xe1ticamente"})," para cada elemento."]}),"\n",(0,r.jsxs)(n.h2,{id:"-1-foreach--recorrer-un-array-y-hacer-algo-con-cada-elemento",children:["\u2705 1. ",(0,r.jsx)(n.code,{children:".forEach()"})," \u2013 Recorrer un array y hacer algo con cada elemento"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const frutas = ["manzana", "pl\xe1tano", "naranja"];\n\n// Recorremos cada fruta usando un callback\nfrutas.forEach((fruta, indice) => {\n  console.log(`${indice + 1}. ${fruta}`);\n});\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed-1",children:"\ud83d\udd0d Qu\xe9 pasa aqu\xed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".forEach()"})," ",(0,r.jsx)(n.strong,{children:"no devuelve nada"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Solo ejecuta el ",(0,r.jsx)(n.strong,{children:"callback"})," una vez por cada elemento."]}),"\n",(0,r.jsxs)(n.li,{children:["Puedes acceder al ",(0,r.jsx)(n.strong,{children:"valor"})," y al ",(0,r.jsx)(n.strong,{children:"\xedndice"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-2-map--crear-un-nuevo-array-a-partir-del-original",children:["\u2705 2. ",(0,r.jsx)(n.code,{children:".map()"})," \u2013 Crear un nuevo array a partir del original"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const numeros = [1, 2, 3, 4];\n\n// Usamos map para duplicar cada n\xfamero\nconst duplicados = numeros.map((num) => {\n  return num * 2;\n});\n\nconsole.log(duplicados); // [2, 4, 6, 8]\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"-qu\xe9-hace-map",children:["\ud83d\udd0d Qu\xe9 hace ",(0,r.jsx)(n.code,{children:".map()"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Devuelve un ",(0,r.jsx)(n.strong,{children:"nuevo array"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["El ",(0,r.jsx)(n.strong,{children:"callback devuelve el valor transformado"})," de cada elemento."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-3-filter--crear-un-nuevo-array-con-elementos-que-cumplen-una-condici\xf3n",children:["\u2705 3. ",(0,r.jsx)(n.code,{children:".filter()"})," \u2013 Crear un nuevo array con elementos que cumplen una condici\xf3n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const edades = [12, 18, 25, 8, 30];\n\n// Filtramos solo mayores de edad\nconst mayores = edades.filter((edad) => {\n  return edad >= 18;\n});\n\nconsole.log(mayores); // [18, 25, 30]\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"-qu\xe9-hace-filter",children:["\ud83d\udd0d Qu\xe9 hace ",(0,r.jsx)(n.code,{children:".filter()"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Devuelve un nuevo array ",(0,r.jsx)(n.strong,{children:"solo con los elementos que cumplen la condici\xf3n"})," (el callback debe retornar ",(0,r.jsx)(n.code,{children:"true"})," o ",(0,r.jsx)(n.code,{children:"false"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-4-reduce--reducir-un-array-a-un-solo-valor-acumulador",children:["\u2705 4. ",(0,r.jsx)(n.code,{children:".reduce()"})," \u2013 Reducir un array a un solo valor (acumulador)"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"const precios = [10, 20, 15];\n\n// Sumamos todos los precios\nconst total = precios.reduce((acumulador, precio) => {\n  return acumulador + precio;\n}, 0); // 0 es el valor inicial\n\nconsole.log(`Total: ${total} \u20ac`);\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"-qu\xe9-hace-reduce",children:["\ud83d\udd0d Qu\xe9 hace ",(0,r.jsx)(n.code,{children:".reduce()"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Recorre el array acumulando un valor."}),"\n",(0,r.jsxs)(n.li,{children:["En cada paso:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"acumulador"})," guarda el resultado parcial."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"precio"})," es el valor actual."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Devuelve ",(0,r.jsx)(n.strong,{children:"un \xfanico valor final"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-resumen-visual",children:"\ud83d\udce6 Resumen visual:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"M\xe9todo"}),(0,r.jsx)(n.th,{children:"Devuelve"}),(0,r.jsx)(n.th,{children:"Usos comunes"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"forEach"})}),(0,r.jsx)(n.td,{children:"Nada"}),(0,r.jsx)(n.td,{children:"Mostrar cosas en consola, DOM, etc."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"map"})}),(0,r.jsx)(n.td,{children:"Nuevo array"}),(0,r.jsx)(n.td,{children:"Transformar valores"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"filter"})}),(0,r.jsx)(n.td,{children:"Nuevo array"}),(0,r.jsx)(n.td,{children:"Eliminar/seleccionar elementos"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"reduce"})}),(0,r.jsx)(n.td,{children:"Un solo valor"}),(0,r.jsx)(n.td,{children:"Totales, sumas, objetos acumulados"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"ejemplos-pr\xe1cticos-reales",children:"Ejemplos pr\xe1cticos reales:"}),"\n",(0,r.jsxs)(n.h2,{id:"-parte-1-calcular-estad\xedsticas-de-usuarios-con-filter-map-y-reduce",children:["\u2705 Parte 1: Calcular estad\xedsticas de usuarios (con ",(0,r.jsx)(n.code,{children:"filter"}),", ",(0,r.jsx)(n.code,{children:"map"})," y ",(0,r.jsx)(n.code,{children:"reduce"}),")"]}),"\n",(0,r.jsx)(n.h3,{id:"-supuesto-tenemos-una-lista-de-usuarios-con-edad-y-queremos",children:"\ud83e\uddfe Supuesto: tenemos una lista de usuarios con edad, y queremos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Filtrar los mayores de edad."}),"\n",(0,r.jsx)(n.li,{children:"Obtener sus nombres."}),"\n",(0,r.jsx)(n.li,{children:"Calcular la edad promedio."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-c\xf3digo-comentado-paso-por-paso",children:"\ud83d\udce6 C\xf3digo comentado paso por paso:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Lista de usuarios con nombre y edad\nconst usuarios = [\n  { nombre: "Ana", edad: 17 },\n  { nombre: "Luis", edad: 22 },\n  { nombre: "Carlos", edad: 30 },\n  { nombre: "Marta", edad: 15 },\n  { nombre: "Luc\xeda", edad: 25 }\n];\n\n// 1. Filtramos solo los mayores de edad (edad >= 18)\nconst mayores = usuarios.filter(usuario => usuario.edad >= 18);\n\nconsole.log("\ud83d\udc64 Usuarios mayores de edad:");\nmayores.forEach(usuario => console.log(`- ${usuario.nombre}, ${usuario.edad} a\xf1os`));\n\n// 2. Creamos un array con solo los nombres\nconst nombres = mayores.map(usuario => usuario.nombre);\n\nconsole.log("\\n\ud83d\udccb Nombres de mayores:", nombres);\n\n// 3. Calculamos la edad promedio con reduce\nconst totalEdad = mayores.reduce((acum, usuario) => acum + usuario.edad, 0);\nconst promedioEdad = (totalEdad / mayores.length).toFixed(1);\n\nconsole.log(`\\n\ud83d\udcca Edad promedio: ${promedioEdad} a\xf1os`);\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-salida-esperada",children:"\u2705 Salida esperada:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\udc64 Usuarios mayores de edad:\n- Luis, 22 a\xf1os\n- Carlos, 30 a\xf1os\n- Luc\xeda, 25 a\xf1os\n\n\ud83d\udccb Nombres de mayores: [ 'Luis', 'Carlos', 'Luc\xeda' ]\n\n\ud83d\udcca Edad promedio: 25.7 a\xf1os\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"qu\xe9-aprendiste-aqu\xed",children:"\xbfQu\xe9 aprendiste aqu\xed?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"filter()"})," para seleccionar usuarios."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"map()"})," para extraer valores."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"reduce()"})," para sumar y calcular promedio."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, continuamos con la ",(0,r.jsx)(n.strong,{children:"Parte 2: Transformar una lista de productos"}),", aplicando ",(0,r.jsx)(n.code,{children:"map()"})," para ",(0,r.jsx)(n.strong,{children:"crear un nuevo array con precios con IVA"})," y otra presentaci\xf3n ",(0,r.jsx)(n.strong,{children:"m\xe1s legible para mostrar en pantalla o carrito"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-supuesto-tenemos-una-lista-de-productos-con-nombre-y-precio-base-sin-impuestos-y-queremos",children:"\ud83e\uddfe Supuesto: tenemos una lista de productos con nombre y precio base (sin impuestos), y queremos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Calcular el ",(0,r.jsx)(n.strong,{children:"precio con IVA (21%)"})]}),"\n",(0,r.jsx)(n.li,{children:"Formatear los datos para mostrarlos como en una factura o carrito"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3digo-completo-y-comentado-l\xednea-por-l\xednea",children:"\u2705 C\xf3digo completo y comentado l\xednea por l\xednea:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Lista de productos con nombre y precio sin IVA\nconst productos = [\n  { nombre: "Teclado", precio: 25 },\n  { nombre: "Rat\xf3n", precio: 15 },\n  { nombre: "Monitor", precio: 120 },\n  { nombre: "Auriculares", precio: 45 }\n];\n\n// 1. Creamos un nuevo array con precio con IVA (21%) usando map()\nconst productosConIVA = productos.map(producto => {\n  const precioConIVA = (producto.precio * 1.21).toFixed(2); // 21% de IVA\n  return {\n    ...producto, // copiamos las propiedades originales\n    precioConIVA: parseFloat(precioConIVA) // a\xf1adimos nueva propiedad\n  };\n});\n\nconsole.log("\ud83d\uded2 Productos con IVA:");\nproductosConIVA.forEach(p => {\n  console.log(`- ${p.nombre}: ${p.precio}\u20ac + IVA = ${p.precioConIVA}\u20ac`);\n});\n\n// 2. Creamos una representaci\xf3n para ticket o pantalla de compra\nconst formatoTicket = productosConIVA.map(p => {\n  return `${p.nombre.padEnd(15)} ......... ${p.precioConIVA} \u20ac`;\n});\n\nconsole.log("\\n\ud83e\uddfe Formato para ticket:");\nformatoTicket.forEach(linea => console.log(linea));\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-salida-esperada-1",children:"\u2705 Salida esperada:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\uded2 Productos con IVA:\n- Teclado: 25\u20ac + IVA = 30.25\u20ac\n- Rat\xf3n: 15\u20ac + IVA = 18.15\u20ac\n- Monitor: 120\u20ac + IVA = 145.20\u20ac\n- Auriculares: 45\u20ac + IVA = 54.45\u20ac\n\n\ud83e\uddfe Formato para ticket:\nTeclado         ......... 30.25 \u20ac\nRat\xf3n           ......... 18.15 \u20ac\nMonitor         ......... 145.2 \u20ac\nAuriculares     ......... 54.45 \u20ac\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-aprendiste-aqu\xed",children:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A usar ",(0,r.jsx)(n.code,{children:".map()"})," para ",(0,r.jsx)(n.strong,{children:"crear un nuevo array transformado"})," sin modificar el original."]}),"\n",(0,r.jsxs)(n.li,{children:["A usar ",(0,r.jsx)(n.code,{children:"padEnd()"})," y ",(0,r.jsx)(n.code,{children:"toFixed()"})," para mejorar la presentaci\xf3n."]}),"\n",(0,r.jsx)(n.li,{children:"A formatear objetos para distintos fines (c\xe1lculo + visualizaci\xf3n)."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos ahora con la ",(0,r.jsx)(n.strong,{children:"Parte 3"}),", donde usaremos ",(0,r.jsx)(n.code,{children:".reduce()"})," para ",(0,r.jsx)(n.strong,{children:"agrupar productos por categor\xeda"})," y ",(0,r.jsx)(n.strong,{children:"contar cu\xe1ntos hay de cada tipo"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-supuesto-real",children:"\ud83e\uddfe Supuesto real:"}),"\n",(0,r.jsx)(n.p,{children:"Tenemos un array de productos, cada uno con un nombre y una categor\xeda."}),"\n",(0,r.jsx)(n.p,{children:"Queremos:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Agruparlos por categor\xeda (como si fueran secciones de una tienda)."}),"\n",(0,r.jsx)(n.li,{children:"Contar cu\xe1ntos productos hay en cada categor\xeda."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3digo-completo-comentado-paso-por-paso",children:"\u2705 C\xf3digo completo comentado paso por paso:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Lista de productos con categor\xedas\nconst productos = [\n  { nombre: "Teclado", categoria: "Perif\xe9ricos" },\n  { nombre: "Rat\xf3n", categoria: "Perif\xe9ricos" },\n  { nombre: "Monitor", categoria: "Pantallas" },\n  { nombre: "Auriculares", categoria: "Audio" },\n  { nombre: "Altavoces", categoria: "Audio" },\n  { nombre: "Micr\xf3fono", categoria: "Audio" },\n  { nombre: "Tablet", categoria: "Pantallas" }\n];\n\n// 1. Agrupamos productos por categor\xeda usando reduce\nconst agrupados = productos.reduce((resultado, producto) => {\n  const { categoria, nombre } = producto;\n\n  // Si no existe la categor\xeda, la inicializamos como array vac\xedo\n  if (!resultado[categoria]) {\n    resultado[categoria] = [];\n  }\n\n  // A\xf1adimos el producto al array correspondiente\n  resultado[categoria].push(nombre);\n\n  return resultado; // Devolvemos el acumulador\n}, {}); // Valor inicial: objeto vac\xedo\n\nconsole.log("\ud83d\udce6 Productos agrupados por categor\xeda:\\n");\nfor (const categoria in agrupados) {\n  console.log(`\ud83d\udcc2 ${categoria}:`);\n  agrupados[categoria].forEach(producto => {\n    console.log(`   - ${producto}`);\n  });\n}\n\n// 2. Contamos cu\xe1ntos hay por categor\xeda\nconst conteo = productos.reduce((contador, producto) => {\n  const cat = producto.categoria;\n  contador[cat] = (contador[cat] || 0) + 1;\n  return contador;\n}, {});\n\nconsole.log("\\n\ud83d\udcca Cantidad de productos por categor\xeda:\\n", conteo);\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-salida-esperada-2",children:"\u2705 Salida esperada:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\udce6 Productos agrupados por categor\xeda:\n\n\ud83d\udcc2 Perif\xe9ricos:\n   - Teclado\n   - Rat\xf3n\n\ud83d\udcc2 Pantallas:\n   - Monitor\n   - Tablet\n\ud83d\udcc2 Audio:\n   - Auriculares\n   - Altavoces\n   - Micr\xf3fono\n\n\ud83d\udcca Cantidad de productos por categor\xeda:\n{\n  Perif\xe9ricos: 2,\n  Pantallas: 2,\n  Audio: 3\n}\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-aprendiste-aqu\xed-1",children:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".reduce()"})," no solo sirve para sumar n\xfameros: tambi\xe9n puedes construir ",(0,r.jsx)(n.strong,{children:"estructuras complejas como objetos agrupados"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Puedes usarlo para ",(0,r.jsx)(n.strong,{children:"agrupar elementos por categor\xeda"}),", ",(0,r.jsx)(n.strong,{children:"contar ocurrencias"}),", etc."]}),"\n",(0,r.jsx)(n.li,{children:"Esta t\xe9cnica es muy usada en dashboards, reportes, e-commerce y filtros avanzados."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"callbacks-y-manejo-de-errores",children:"Callbacks y manejo de Errores"}),"\n",(0,r.jsxs)(n.p,{children:["A diferencia de ",(0,r.jsx)(n.code,{children:"try...catch"})," en c\xf3digo s\xedncrono, los ",(0,r.jsx)(n.strong,{children:"callbacks suelen manejar errores usando el primer par\xe1metro"})," de la funci\xf3n: si hay error, ese argumento no es ",(0,r.jsx)(n.code,{children:"null"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"-concepto-b\xe1sico",children:"\ud83e\udde0 Concepto b\xe1sico:"}),"\n",(0,r.jsx)(n.p,{children:"Cuando usas callbacks en funciones asincr\xf3nicas, es com\xfan seguir el patr\xf3n:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"callback(error, resultado);\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Si ",(0,r.jsx)(n.strong,{children:"ocurre un error"}),", el primer argumento (",(0,r.jsx)(n.code,{children:"error"}),") es un objeto o mensaje."]}),"\n",(0,r.jsxs)(n.p,{children:["Si ",(0,r.jsx)(n.strong,{children:"no hay error"}),", ese valor es ",(0,r.jsx)(n.code,{children:"null"}),", y el segundo par\xe1metro tiene el resultado."]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-simulado-leer-un-archivo-simulado-con-settimeout",children:"\u2705 Ejemplo real simulado: leer un archivo (simulado con setTimeout)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos una funci\xf3n asincr\xf3nica que "lee un archivo"\nfunction leerArchivo(nombre, callback) {\n  setTimeout(() => {\n    // Simulamos un error si el archivo no existe\n    if (nombre !== "datos.txt") {\n      // El primer par\xe1metro representa el error\n      return callback("\u274c Archivo no encontrado", null);\n    }\n\n    // Si todo va bien, el error es null y enviamos el contenido\n    const contenido = "Este es el contenido del archivo";\n    callback(null, contenido);\n  }, 1000); // Simula retraso de 1 segundo\n}\n\n// Usamos el callback para manejar resultado o error\nleerArchivo("datos.txt", (error, resultado) => {\n  if (error) {\n    // Si hay error, lo mostramos\n    console.error("Error:", error);\n    return;\n  }\n\n  // Si todo va bien, mostramos el contenido\n  console.log("\u2705 Archivo le\xeddo correctamente:");\n  console.log(resultado);\n});\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hace-este-ejemplo",children:"\u2705 \xbfQu\xe9 hace este ejemplo?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simula una funci\xf3n que lee un archivo."}),"\n",(0,r.jsxs)(n.li,{children:["Si el nombre del archivo ",(0,r.jsx)(n.strong,{children:"no es el esperado"}),", lanza un error (",(0,r.jsx)(n.code,{children:"error \u2260 null"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["El ",(0,r.jsx)(n.strong,{children:"callback decide qu\xe9 hacer"})," dependiendo si ",(0,r.jsx)(n.code,{children:"error"})," existe o no."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-resultado-en-consola",children:"\ud83d\udccc Resultado en consola:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u2705 Archivo le\xeddo correctamente:\nEste es el contenido del archivo\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["...o, si pruebas con ",(0,r.jsx)(n.code,{children:'"otro.txt"'}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: \u274c Archivo no encontrado\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"funciones-de-retry",children:"Funciones de Retry"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-retry",children:["\ud83e\udde0 \xbfQu\xe9 es ",(0,r.jsx)(n.code,{children:"retry()"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["Es una funci\xf3n que ",(0,r.jsx)(n.strong,{children:"reintenta autom\xe1ticamente"})," una operaci\xf3n fallida, por ejemplo, hasta 3 veces, con cierto intervalo de tiempo."]}),"\n",(0,r.jsxs)(n.p,{children:["Esto es \xfatil cuando trabajamos con ",(0,r.jsx)(n.strong,{children:"errores intermitentes"}),", como en conexiones de red o lectura de archivos."]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-pr\xe1ctico-reintentar-leer-un-archivo-con-callback",children:"\u2705 Ejemplo pr\xe1ctico: Reintentar leer un archivo con callback"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Simulamos una funci\xf3n que a veces falla al leer un archivo\nfunction leerArchivo(nombre, callback) {\n  setTimeout(() => {\n    const falloAleatorio = Math.random() < 0.5; // 50% de fallar\n\n    if (falloAleatorio || nombre !== "datos.txt") {\n      return callback("\u274c Error al leer el archivo", null);\n    }\n\n    const contenido = "\ud83d\udcc4 Contenido del archivo le\xeddo correctamente";\n    callback(null, contenido);\n  }, 500); // Simula retardo\n}\n\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-creamos-la-funci\xf3n-retry",children:["\u2705 Creamos la funci\xf3n ",(0,r.jsx)(n.code,{children:"retry"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function retry(fn, maxIntentos, delay, callback) {\n  let intentos = 0;\n\n  function intentar() {\n    intentos++;\n\n    fn((error, resultado) => {\n      if (!error) {\n        // Si no hay error, devolvemos el resultado\n        return callback(null, resultado);\n      }\n\n      if (intentos >= maxIntentos) {\n        // Si se exceden los intentos, devolvemos el error final\n        return callback(`\u274c Fall\xf3 tras ${intentos} intentos: ${error}`, null);\n      }\n\n      console.warn(`\u26a0\ufe0f Intento ${intentos} fallido. Reintentando en ${delay}ms...`);\n      setTimeout(intentar, delay); // Reintenta despu\xe9s del delay\n    });\n  }\n\n  intentar(); // Inicia el primer intento\n}\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"-usamos-retry-para-ejecutar-leerarchivo",children:["\u2705 Usamos ",(0,r.jsx)(n.code,{children:"retry()"})," para ejecutar ",(0,r.jsx)(n.code,{children:"leerArchivo"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Empaquetamos la funci\xf3n original para adaptarla a retry\nfunction tarea(callback) {\n  leerArchivo("datos.txt", callback);\n}\n\n// Reintentamos hasta 3 veces con 1 segundo de espera entre intentos\nretry(tarea, 3, 1000, (error, resultado) => {\n  if (error) {\n    console.error(error); // Error final tras reintentos\n    return;\n  }\n\n  console.log("\u2705 \xc9xito:", resultado);\n});\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-posible-salida-dependiendo-del-azar",children:"\ud83e\uddea Posible salida (dependiendo del azar):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u26a0\ufe0f Intento 1 fallido. Reintentando en 1000ms...\n\u26a0\ufe0f Intento 2 fallido. Reintentando en 1000ms...\n\u2705 \xc9xito: \ud83d\udcc4 Contenido del archivo le\xeddo correctamente\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"o..."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\u26a0\ufe0f Intento 1 fallido. Reintentando en 1000ms...\n\u26a0\ufe0f Intento 2 fallido. Reintentando en 1000ms...\n\u26a0\ufe0f Intento 3 fallido. Reintentando en 1000ms...\n\u274c Fall\xf3 tras 3 intentos: \u274c Error al leer el archivo\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-aprendiste-aqu\xed-2",children:"\u2705 \xbfQu\xe9 aprendiste aqu\xed?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A implementar ",(0,r.jsx)(n.code,{children:"retry()"})," en funciones basadas en ",(0,r.jsx)(n.strong,{children:"callbacks"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"A manejar errores intermitentes de forma elegante y controlada."}),"\n",(0,r.jsx)(n.li,{children:"A separar la l\xf3gica de reintento de la l\xf3gica de la tarea."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"paralelismo-controlado",children:"Paralelismo controlado"}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-es-el-paralelismo-controlado",children:"\ud83e\udde0 \xbfQu\xe9 es el paralelismo controlado?"}),"\n",(0,r.jsxs)(n.p,{children:["JavaScript permite ejecutar tareas ",(0,r.jsx)(n.strong,{children:"en paralelo"})," (por ejemplo, m\xfaltiples peticiones fetch al mismo tiempo)."]}),"\n",(0,r.jsxs)(n.p,{children:["Sin embargo, lanzar ",(0,r.jsx)(n.strong,{children:"demasiadas al mismo tiempo puede saturar la red o el servidor"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.strong,{children:"paralelismo controlado"})," significa:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Ejecutar ",(0,r.jsx)(n.strong,{children:"un n\xfamero limitado de tareas a la vez"}),"."]}),"\n",(0,r.jsx)(n.li,{children:'Esperar a que se libere un "slot" para lanzar la siguiente tarea.'}),"\n",(0,r.jsxs)(n.li,{children:["Controlar errores y aplicar ",(0,r.jsx)(n.code,{children:"retry()"})," si algo falla."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Esto es muy \xfatil, por ejemplo, en:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Descarga de muchos archivos."}),"\n",(0,r.jsx)(n.li,{children:"Llamadas API masivas."}),"\n",(0,r.jsxs)(n.li,{children:["Procesos asincr\xf3nicos como ",(0,r.jsx)(n.code,{children:"fetch"}),", lectura de archivos, etc."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-descargar-5-archivos-m\xe1ximo-2-en-paralelo-con-retry",children:"\u2705 Ejemplo real: Descargar 5 archivos, m\xe1ximo 2 en paralelo, con retry"}),"\n",(0,r.jsx)(n.h3,{id:"paso-1-funci\xf3n-simulada-de-descarga-con-fallo-aleatorio",children:"Paso 1: funci\xf3n simulada de descarga con fallo aleatorio"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"function descargarArchivo(id) {\n  return new Promise((resolve, reject) => {\n    const tiempo = Math.floor(Math.random() * 2000) + 500;\n\n    setTimeout(() => {\n      if (Math.random() < 0.3) {\n        // 30% de fallar\n        reject(`\u274c Fall\xf3 descarga del archivo ${id}`);\n      } else {\n        resolve(`\u2705 Archivo ${id} descargado en ${tiempo}ms`);\n      }\n    }, tiempo);\n  });\n}\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"paso-2-funci\xf3n-retry-para-promesas",children:"Paso 2: funci\xf3n retry para promesas"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'async function retryPromesa(fn, intentos = 3, delay = 1000) {\n  for (let i = 0; i < intentos; i++) {\n    try {\n      return await fn();\n    } catch (error) {\n      console.warn(`\u26a0\ufe0f Intento ${i + 1} fallido: ${error}`);\n      if (i < intentos - 1) await new Promise(r => setTimeout(r, delay));\n    }\n  }\n  throw new Error("\u274c Todos los intentos fallaron");\n}\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"paso-3-ejecuci\xf3n-con-paralelismo-controlado-m\xe1ximo-2-a-la-vez",children:"Paso 3: ejecuci\xf3n con paralelismo controlado (m\xe1ximo 2 a la vez)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'async function ejecutarConParalelismo(tareas, limite = 2) {\n  const resultados = [];\n  let index = 0;\n\n  // Ejecuta una tarea, y cuando termina, lanza la siguiente\n  async function ejecutarSiguiente() {\n    if (index >= tareas.length) return;\n\n    const actual = index++;\n    try {\n      const resultado = await tareas[actual]();\n      resultados[actual] = resultado;\n    } catch (error) {\n      resultados[actual] = error.message || String(error);\n    }\n\n    // Ejecuta la siguiente en cola\n    await ejecutarSiguiente();\n  }\n\n  // Iniciamos "limite" tareas paralelas\n  const procesos = [];\n  for (let i = 0; i < limite; i++) {\n    procesos.push(ejecutarSiguiente());\n  }\n\n  await Promise.all(procesos);\n  return resultados;\n}\n\n'})}),"\n",(0,r.jsx)(n.h3,{id:"paso-4-definimos-tareas-y-lanzamos-todo",children:"Paso 4: definimos tareas y lanzamos todo"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'(async () => {\n  const tareas = [];\n\n  for (let i = 1; i <= 5; i++) {\n    // Cada tarea se envuelve en retry\n    tareas.push(() => retryPromesa(() => descargarArchivo(i)));\n  }\n\n  console.log("\ud83d\udce6 Descargando archivos con m\xe1ximo 2 en paralelo...\\n");\n\n  const resultados = await ejecutarConParalelismo(tareas, 2);\n\n  resultados.forEach((res, i) => {\n    console.log(`Archivo ${i + 1}:`, res);\n  });\n})();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-aprendiste",children:"\ud83e\udde0 \xbfQu\xe9 aprendiste?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Puedes ",(0,r.jsxs)(n.strong,{children:["combinar ",(0,r.jsx)(n.code,{children:"retry()"})," con ejecuci\xf3n paralela"]}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Puedes ",(0,r.jsx)(n.strong,{children:"limitar el n\xfamero de tareas en paralelo"})," para evitar cuellos de botella."]}),"\n",(0,r.jsxs)(n.li,{children:["Aprendiste a ",(0,r.jsx)(n.strong,{children:"encolar tareas y controlar errores as\xedncronos"})," de forma profesional."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"practica-mini-app-de-descarga-masiva",children:"Practica mini APP de descarga masiva"}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos a construir una ",(0,r.jsx)(n.strong,{children:"mini app en JavaScript puro"})," que simula la descarga masiva de im\xe1genes desde URLs, utilizando:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.code,{children:"Promise.all"})," y paralelismo controlado (m\xe1ximo 3 im\xe1genes a la vez)."]}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Retry autom\xe1tico en caso de fallo de descarga."}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Renderizado visual de las im\xe1genes en pantalla."}),"\n",(0,r.jsx)(n.li,{children:"\u2705 Comentarios l\xednea por l\xednea para entenderlo todo."}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-paso-1-html-b\xe1sico-indexhtml",children:["\ud83e\uddf1 Paso 1: HTML b\xe1sico (",(0,r.jsx)(n.code,{children:"index.html"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n<head>\n  <meta charset="UTF-8" />\n  <title>Descarga Masiva de Im\xe1genes</title>\n  <style>\n    .galeria img {\n      width: 150px;\n      height: 150px;\n      object-fit: cover;\n      margin: 10px;\n      border: 2px solid #ccc;\n    }\n    .status {\n      font-family: monospace;\n      margin-top: 10px;\n    }\n  </style>\n</head>\n<body>\n  <h1>\ud83d\uddbc\ufe0f Descarga Masiva de Im\xe1genes</h1>\n  <div class="galeria" id="galeria"></div>\n  <div class="status" id="estado"></div>\n\n  <script src="main.js"><\/script>\n</body>\n</html>\n\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-paso-2-javascript-con-control-de-paralelismo-y-retry-mainjs",children:["\ud83e\udde0 Paso 2: JavaScript con control de paralelismo y retry (",(0,r.jsx)(n.code,{children:"main.js"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'// Lista de URLs de im\xe1genes simuladas (algunas fallar\xe1n)\nconst urls = [\n  "https://picsum.photos/id/10/300",\n  "https://picsum.photos/id/20/300",\n  "https://picsum.photos/id/30/300",\n  "https://picsum.photos/id/999/300", // esta probablemente falla\n  "https://picsum.photos/id/50/300",\n  "https://picsum.photos/id/60/300"\n];\n\n// Simula descarga con posible error (30% de fallo aleatorio)\nfunction descargarImagen(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url + "?rand=" + Math.random(); // evitar cache\n\n    img.onload = () => resolve(img);\n    img.onerror = () => reject(`\u274c Error al cargar: ${url}`);\n  });\n}\n\n// Retry autom\xe1tico: reintenta hasta 3 veces con espera entre intentos\nasync function retry(fn, intentos = 3, delay = 1000) {\n  for (let i = 0; i < intentos; i++) {\n    try {\n      return await fn();\n    } catch (err) {\n      console.warn(`\u26a0\ufe0f Reintento ${i + 1} fallido`);\n      if (i < intentos - 1) await new Promise(r => setTimeout(r, delay));\n    }\n  }\n  throw new Error("\u274c Todos los intentos fallaron");\n}\n\n// L\xf3gica de paralelismo controlado\nasync function procesarEnParalelo(tareas, limite = 3) {\n  const resultados = [];\n  let index = 0;\n\n  async function ejecutarSiguiente() {\n    if (index >= tareas.length) return;\n\n    const actual = index++;\n    try {\n      resultados[actual] = await tareas[actual]();\n    } catch (err) {\n      resultados[actual] = err;\n    }\n\n    await ejecutarSiguiente(); // Lanzar el siguiente\n  }\n\n  // Lanzamos hasta \'limite\' tareas simult\xe1neas\n  const lotes = [];\n  for (let i = 0; i < limite; i++) {\n    lotes.push(ejecutarSiguiente());\n  }\n\n  await Promise.all(lotes);\n  return resultados;\n}\n\n// Funci\xf3n principal\n(async () => {\n  const galeria = document.getElementById("galeria");\n  const estado = document.getElementById("estado");\n\n  // Creamos tareas: cada una intenta descargar y mostrar una imagen\n  const tareas = urls.map((url, i) => async () => {\n    estado.textContent = `\u23f3 Descargando imagen ${i + 1} de ${urls.length}...`;\n\n    const img = await retry(() => descargarImagen(url));\n    galeria.appendChild(img);\n\n    return `\u2705 Imagen ${i + 1} cargada`;\n  });\n\n  try {\n    const resultados = await procesarEnParalelo(tareas, 3);\n    estado.textContent = "\u2705 Todas las im\xe1genes procesadas";\n    resultados.forEach((r, i) => console.log(`Imagen ${i + 1}:`, r));\n  } catch (e) {\n    estado.textContent = "\u274c Error en la descarga masiva";\n    console.error(e);\n  }\n})();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-ver\xe1s-al-ejecutar",children:"\ud83e\uddea \xbfQu\xe9 ver\xe1s al ejecutar?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Se descargan hasta ",(0,r.jsx)(n.strong,{children:"3 im\xe1genes en paralelo"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cada imagen puede fallar, y en ese caso ",(0,r.jsx)(n.strong,{children:"se reintenta hasta 3 veces"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Si alguna falla despu\xe9s de todos los intentos, se captura y se contin\xfaa con las dem\xe1s."}),"\n",(0,r.jsx)(n.li,{children:"Las im\xe1genes exitosas se muestran en pantalla."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-aprendiste-1",children:"\u2705 \xbfQu\xe9 aprendiste?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["C\xf3mo aplicar ",(0,r.jsx)(n.strong,{children:"retry autom\xe1tico"})," en operaciones reales."]}),"\n",(0,r.jsxs)(n.li,{children:["C\xf3mo controlar el ",(0,r.jsx)(n.strong,{children:"paralelismo"})," en descargas masivas."]}),"\n",(0,r.jsxs)(n.li,{children:["C\xf3mo integrar todo en una ",(0,r.jsx)(n.strong,{children:"mini app real y visual"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos a ",(0,r.jsx)(n.strong,{children:"mejorar la mini app de descarga masiva de im\xe1genes"})," con:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Una ",(0,r.jsx)(n.strong,{children:"barra de progreso global"})," para ver el avance en tiempo real."]}),"\n",(0,r.jsxs)(n.li,{children:["\u274c Mensajes de ",(0,r.jsx)(n.strong,{children:"error individuales"})," si una imagen no se puede cargar, incluso despu\xe9s de los reintentos."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-paso-1-a\xf1adir-la-barra-de-progreso-al-html",children:"\ud83e\uddf1 Paso 1: A\xf1adir la barra de progreso al HTML"}),"\n",(0,r.jsxs)(n.p,{children:["Modifica el archivo ",(0,r.jsx)(n.code,{children:"index.html"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<body>\n  <h1>\ud83d\uddbc\ufe0f Descarga Masiva de Im\xe1genes</h1>\n\n  \x3c!-- Barra de progreso --\x3e\n  <progress id="progreso" max="100" value="0" style="width: 100%; height: 20px;"></progress>\n  <div class="status" id="estado"></div>\n\n  <div class="galeria" id="galeria"></div>\n  <script src="main.js"><\/script>\n</body>\n\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-paso-2-javascript-mejorado-en-mainjs",children:["\ud83e\udde0 Paso 2: JavaScript mejorado en ",(0,r.jsx)(n.code,{children:"main.js"})]}),"\n",(0,r.jsx)(n.p,{children:"Aqu\xed est\xe1 el c\xf3digo actualizado y comentado l\xednea por l\xednea:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const urls = [\n  "https://picsum.photos/id/10/300",\n  "https://picsum.photos/id/20/300",\n  "https://picsum.photos/id/30/300",\n  "https://picsum.photos/id/999/300", // Fallar\xe1\n  "https://picsum.photos/id/50/300",\n  "https://picsum.photos/id/60/300"\n];\n\nfunction descargarImagen(url) {\n  return new Promise((resolve, reject) => {\n    const img = new Image();\n    img.src = url + "?rand=" + Math.random();\n\n    img.onload = () => resolve(img);\n    img.onerror = () => reject(`\u274c Error al cargar: ${url}`);\n  });\n}\n\nasync function retry(fn, intentos = 3, delay = 1000) {\n  for (let i = 0; i < intentos; i++) {\n    try {\n      return await fn();\n    } catch (err) {\n      if (i < intentos - 1) {\n        console.warn(`\u26a0\ufe0f Reintento ${i + 1}...`);\n        await new Promise(r => setTimeout(r, delay));\n      }\n    }\n  }\n  throw new Error("\u274c Todos los intentos fallaron");\n}\n\nasync function procesarEnParalelo(tareas, limite = 3) {\n  const resultados = [];\n  let index = 0;\n\n  async function ejecutarSiguiente() {\n    if (index >= tareas.length) return;\n\n    const actual = index++;\n    try {\n      resultados[actual] = await tareas[actual](actual);\n    } catch (err) {\n      resultados[actual] = err;\n    }\n\n    await ejecutarSiguiente();\n  }\n\n  const lotes = [];\n  for (let i = 0; i < limite; i++) {\n    lotes.push(ejecutarSiguiente());\n  }\n\n  await Promise.all(lotes);\n  return resultados;\n}\n\n// Funci\xf3n principal con barra de progreso\n(async () => {\n  const galeria = document.getElementById("galeria");\n  const estado = document.getElementById("estado");\n  const progreso = document.getElementById("progreso");\n\n  let completadas = 0;\n  const total = urls.length;\n\n  const tareas = urls.map((url, i) => async (i) => {\n    estado.textContent = `\ud83d\udd04 Procesando imagen ${i + 1} de ${total}...`;\n\n    try {\n      const img = await retry(() => descargarImagen(url));\n      galeria.appendChild(img);\n      console.log(`\u2705 Imagen ${i + 1} descargada`);\n    } catch (error) {\n      const errorMsg = document.createElement("div");\n      errorMsg.textContent = `\u274c Imagen ${i + 1} fall\xf3: ${error.message}`;\n      errorMsg.style.color = "red";\n      galeria.appendChild(errorMsg);\n      console.error(error.message);\n    }\n\n    completadas++;\n    progreso.value = (completadas / total) * 100;\n  });\n\n  await procesarEnParalelo(tareas, 3);\n  estado.textContent = "\u2705 Descarga completa";\n})();\n\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-ver\xe1s-ahora",children:"\ud83e\uddea \xbfQu\xe9 ver\xe1s ahora?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Una ",(0,r.jsx)(n.strong,{children:"barra de progreso"})," que avanza a medida que se descargan im\xe1genes."]}),"\n",(0,r.jsx)(n.li,{children:"Si alguna imagen falla tras 3 intentos, aparece un mensaje de error en rojo en la galer\xeda."}),"\n",(0,r.jsx)(n.li,{children:"Consola con logs detallados para desarrolladores."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var o=a(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);