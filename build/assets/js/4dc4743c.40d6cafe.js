"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[9549],{5840:(e,a,o)=>{o.r(a),o.d(a,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>t});const n=JSON.parse('{"id":"js/proxies","title":"Proxies","description":"En el mundo de la programaci\xf3n avanzada en JavaScript, los Proxies son una caracter\xedstica poderosa que permite interceptar y personalizar el comportamiento fundamental de los objetos.","source":"@site/docs/js/proxies.md","sourceDirName":"js","slug":"/js/proxies","permalink":"/docuQuest/docs/js/proxies","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/js/proxies.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Generators","permalink":"/docuQuest/docs/js/generators"},"next":{"title":"Introducci\xf3n","permalink":"/docuQuest/docs/js/api/introduccion"}}');var r=o(4848),s=o(8453);const i={},c="Proxies",l={},t=[{value:"<strong>Introducci\xf3n a los Proxies en JavaScript</strong>",id:"introducci\xf3n-a-los-proxies-en-javascript",level:2},{value:"<strong>Caracter\xedsticas Principales de los Proxies</strong>",id:"caracter\xedsticas-principales-de-los-proxies",level:3},{value:"<strong>Creaci\xf3n de un Proxy en JavaScript</strong>",id:"creaci\xf3n-de-un-proxy-en-javascript",level:3},{value:"<strong>Interceptaci\xf3n de Operaciones con Proxies</strong>",id:"interceptaci\xf3n-de-operaciones-con-proxies",level:3},{value:"<strong>Creaci\xf3n de Propiedades Virtuales con Proxies</strong>",id:"creaci\xf3n-de-propiedades-virtuales-con-proxies",level:3},{value:"<strong>Ejemplo pr\xe1ctico Proxies en JavaScript</strong>",id:"ejemplo-pr\xe1ctico-proxies-en-javascript",level:2},{value:"<strong>Conclusiones y Consideraciones Finales</strong>",id:"conclusiones-y-consideraciones-finales",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"proxies",children:"Proxies"})}),"\n",(0,r.jsx)(a.h1,{id:"conceptos-avanzados-en-javascript-proxies",children:(0,r.jsx)(a.strong,{children:"Conceptos Avanzados en JavaScript: Proxies"})}),"\n",(0,r.jsx)(a.p,{children:"En el mundo de la programaci\xf3n avanzada en JavaScript, los Proxies son una caracter\xedstica poderosa que permite interceptar y personalizar el comportamiento fundamental de los objetos."}),"\n",(0,r.jsx)(a.h2,{id:"introducci\xf3n-a-los-proxies-en-javascript",children:(0,r.jsx)(a.strong,{children:"Introducci\xf3n a los Proxies en JavaScript"})}),"\n",(0,r.jsx)(a.p,{children:"Los Proxies son objetos especiales que permiten definir un comportamiento personalizado para operaciones fundamentales en otros objetos, como la lectura, escritura y eliminaci\xf3n de propiedades. Esto significa que podemos interceptar y controlar el acceso a un objeto y modificar su comportamiento seg\xfan nuestras necesidades espec\xedficas."}),"\n",(0,r.jsx)(a.h3,{id:"caracter\xedsticas-principales-de-los-proxies",children:(0,r.jsx)(a.strong,{children:"Caracter\xedsticas Principales de los Proxies"})}),"\n",(0,r.jsx)(a.p,{children:"Antes de profundizar en c\xf3mo funcionan los Proxies en JavaScript, es importante comprender algunas de sus caracter\xedsticas clave:"}),"\n",(0,r.jsxs)(a.ul,{children:["\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Interceptaci\xf3n de Operaciones"}),": Los Proxies permiten interceptar y personalizar el comportamiento de las operaciones fundamentales en un objeto, como la lectura, escritura y eliminaci\xf3n de propiedades."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Flexibilidad"}),": Los Proxies son extremadamente flexibles y pueden utilizarse para implementar una amplia variedad de patrones y t\xe9cnicas avanzadas en JavaScript."]}),"\n",(0,r.jsxs)(a.li,{children:[(0,r.jsx)(a.strong,{children:"Transparencia"}),": A pesar de que un Proxy puede modificar el comportamiento de un objeto, esta modificaci\xf3n es transparente para el c\xf3digo que interact\xfaa con el objeto."]}),"\n"]}),"\n",(0,r.jsx)(a.h3,{id:"creaci\xf3n-de-un-proxy-en-javascript",children:(0,r.jsx)(a.strong,{children:"Creaci\xf3n de un Proxy en JavaScript"})}),"\n",(0,r.jsxs)(a.p,{children:["Veamos c\xf3mo se puede crear un Proxy en JavaScript utilizando la funci\xf3n constructora\xa0",(0,r.jsx)(a.code,{children:"Proxy"}),":"]}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-jsx",children:'// Objeto original\nconst objetivo = {\n  nombre: "Juan",\n  edad: 30,\n};\n\n// Crear un Proxy para el objeto original\nconst manejador = {\n  get: function (obj, propiedad) {\n    console.log(`Accediendo a la propiedad "${propiedad}"`);\n    return obj[propiedad];\n  },\n};\n\nconst proxy = new Proxy(objetivo, manejador);\n\n// Acceder a una propiedad del Proxy\nconsole.log(proxy.nombre); // Imprime: "Accediendo a la propiedad "nombre"" y luego "Juan"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["En este ejemplo, creamos un objeto llamado\xa0",(0,r.jsx)(a.code,{children:"objetivo"}),"\xa0y luego creamos un Proxy para este objeto utilizando la funci\xf3n constructora\xa0",(0,r.jsx)(a.code,{children:"Proxy"}),". Definimos un\xa0",(0,r.jsx)(a.code,{children:"manejador"}),"\xa0que contiene una funci\xf3n\xa0",(0,r.jsx)(a.code,{children:"get"}),"\xa0para interceptar y personalizar la lectura de propiedades en el objeto. Cuando se accede a una propiedad del Proxy, el m\xe9todo\xa0",(0,r.jsx)(a.code,{children:"get"}),"\xa0del manejador se ejecuta, lo que nos permite personalizar el comportamiento de la operaci\xf3n de lectura."]}),"\n",(0,r.jsx)(a.h3,{id:"interceptaci\xf3n-de-operaciones-con-proxies",children:(0,r.jsx)(a.strong,{children:"Interceptaci\xf3n de Operaciones con Proxies"})}),"\n",(0,r.jsx)(a.p,{children:"Los Proxies permiten interceptar y personalizar varias operaciones fundamentales en un objeto, como la lectura, escritura y eliminaci\xf3n de propiedades. Veamos un ejemplo de c\xf3mo se puede utilizar un Proxy para implementar la validaci\xf3n de datos en un objeto:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-jsx",children:'// Objeto original\nconst usuario = {\n  nombre: "",\n  edad: 0,\n};\n\n// Crear un Proxy para el objeto original\nconst manejadorValidacion = {\n  set: function (obj, propiedad, valor) {\n    if (propiedad === "nombre" && typeof valor !== "string") {\n      throw new TypeError("El nombre debe ser una cadena de texto");\n    }\n    if (propiedad === "edad" && typeof valor !== "number") {\n      throw new TypeError("La edad debe ser un n\xfamero");\n    }\n    // Si las validaciones pasan, se establece el valor en el objeto original\n    obj[propiedad] = valor;\n    return true;\n  },\n};\n\nconst proxyUsuario = new Proxy(usuario, manejadorValidacion);\n\n// Intentar establecer valores inv\xe1lidos\ntry {\n  proxyUsuario.nombre = 123; // Error: El nombre debe ser una cadena de texto\n} catch (error) {\n  console.error(error.message);\n}\n\ntry {\n  proxyUsuario.edad = "treinta"; // Error: La edad debe ser un n\xfamero\n} catch (error) {\n  console.error(error.message);\n}\n'})}),"\n",(0,r.jsxs)(a.p,{children:["En este ejemplo, creamos un Proxy para un objeto\xa0",(0,r.jsx)(a.code,{children:"usuario"}),"\xa0y definimos un\xa0",(0,r.jsx)(a.code,{children:"manejadorValidacion"}),"\xa0que contiene una funci\xf3n\xa0",(0,r.jsx)(a.code,{children:"set"}),"\xa0para interceptar y personalizar la escritura de propiedades en el objeto. Utilizamos esta funci\xf3n para validar los valores asignados a las propiedades\xa0",(0,r.jsx)(a.code,{children:"nombre"}),"\xa0y\xa0",(0,r.jsx)(a.code,{children:"edad"}),", lanzando un error si los valores no cumplen con los criterios de validaci\xf3n especificados."]}),"\n",(0,r.jsx)(a.h3,{id:"creaci\xf3n-de-propiedades-virtuales-con-proxies",children:(0,r.jsx)(a.strong,{children:"Creaci\xf3n de Propiedades Virtuales con Proxies"})}),"\n",(0,r.jsx)(a.p,{children:"Los Proxies tambi\xe9n pueden utilizarse para crear propiedades virtuales en un objeto, es decir, propiedades que no est\xe1n presentes en el objeto original pero que se calculan din\xe1micamente seg\xfan sea necesario. Veamos un ejemplo de c\xf3mo se puede utilizar un Proxy para implementar propiedades virtuales en un objeto:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-jsx",children:'// Objeto original\nconst persona = {\n  nombre: "Juan",\n  apellido: "P\xe9rez",\n};\n\n// Crear un Proxy para el objeto original\nconst manejadorPropiedadesVirtuales = {\n  get: function (obj, propiedad) {\n    if (propiedad === "nombreCompleto") {\n      return `${obj.nombre} ${obj.apellido}`;\n    }\n    return obj[propiedad];\n  },\n};\n\nconst proxyPersona = new Proxy(persona, manejadorPropiedadesVirtuales);\n\n// Acceder a una propiedad virtual\nconsole.log(proxyPersona.nombreCompleto); // Imprime: "Juan P\xe9rez"\n'})}),"\n",(0,r.jsxs)(a.p,{children:["En este ejemplo, creamos un Proxy para un objeto\xa0",(0,r.jsx)(a.code,{children:"persona"}),"\xa0y definimos un\xa0",(0,r.jsx)(a.code,{children:"manejadorPropiedadesVirtuales"}),"\xa0que contiene una funci\xf3n\xa0",(0,r.jsx)(a.code,{children:"get"}),"\xa0para interceptar y personalizar la lectura de propiedades en el objeto. Utilizamos esta funci\xf3n para crear una propiedad virtual llamada\xa0",(0,r.jsx)(a.code,{children:"nombreCompleto"}),", que concatena las propiedades\xa0",(0,r.jsx)(a.code,{children:"nombre"}),"\xa0y\xa0",(0,r.jsx)(a.code,{children:"apellido"}),"\xa0para formar el nombre completo de la persona."]}),"\n",(0,r.jsx)(a.h2,{id:"ejemplo-pr\xe1ctico-proxies-en-javascript",children:(0,r.jsx)(a.strong,{children:"Ejemplo pr\xe1ctico Proxies en JavaScript"})}),"\n",(0,r.jsx)(a.p,{children:"Supongamos que queremos crear un objeto que act\xfae como una cach\xe9 para almacenar el resultado de ciertas operaciones costosas. Utilizaremos un Proxy para interceptar las llamadas a propiedades inexistentes y calcular el resultado de la operaci\xf3n correspondiente, almacen\xe1ndolo en la cach\xe9 para futuras referencias."}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-jsx",children:"// Creamos una funci\xf3n para simular una operaci\xf3n costosa\nfunction operacionCostosa(numero) {\n  console.log(`Realizando operaci\xf3n costosa para el n\xfamero ${numero}...`);\n  // Simulamos una operaci\xf3n costosa, como c\xe1lculos intensivos\n  return numero * numero;\n}\n\n// Creamos un objeto Proxy para actuar como una cach\xe9\nconst cache = new Proxy(\n  {},\n  {\n    get: function (target, propiedad) {\n      if (!target[propiedad]) {\n        // Si la propiedad no existe en la cach\xe9, realizamos la operaci\xf3n y la almacenamos\n        target[propiedad] = operacionCostosa(Number(propiedad));\n      }\n      return target[propiedad];\n    },\n  }\n);\n\n// Probamos el funcionamiento de la cach\xe9\nconsole.log(cache[5]); // Realiza la operaci\xf3n costosa para el n\xfamero 5 y devuelve 25\nconsole.log(cache[5]); // Devuelve el resultado almacenado en la cach\xe9 (25), sin realizar la operaci\xf3n costosa nuevamente\nconsole.log(cache[8]); // Realiza la operaci\xf3n costosa para el n\xfamero 8 y devuelve 64\nconsole.log(cache[8]); // Devuelve el resultado almacenado en la cach\xe9 (64), sin realizar la operaci\xf3n costosa nuevamente\n"})}),"\n",(0,r.jsx)(a.p,{children:"En este ejemplo, creamos un Proxy que act\xfaa como una cach\xe9 para almacenar el resultado de operaciones costosas. Cuando se accede a una propiedad del objeto Proxy y esa propiedad no existe en la cach\xe9, el Proxy intercepta la llamada y realiza la operaci\xf3n correspondiente, almacenando el resultado en la cach\xe9. Si la propiedad ya existe en la cach\xe9, el Proxy devuelve el resultado almacenado sin necesidad de realizar la operaci\xf3n nuevamente."}),"\n",(0,r.jsx)(a.p,{children:"Este ejemplo ilustra c\xf3mo los Proxies pueden utilizarse para agregar funcionalidades adicionales a los objetos, como la implementaci\xf3n de cach\xe9s, la validaci\xf3n de datos, el registro de operaciones, entre otros. Los Proxies ofrecen una manera poderosa y flexible de modificar el comportamiento de los objetos en JavaScript."}),"\n",(0,r.jsx)(a.h2,{id:"conclusiones-y-consideraciones-finales",children:(0,r.jsx)(a.strong,{children:"Conclusiones y Consideraciones Finales"})}),"\n",(0,r.jsx)(a.p,{children:"En resumen, los Proxies son una caracter\xedstica poderosa en JavaScript que permite interceptar y personalizar el comportamiento fundamental de los objetos. Permiten definir un comportamiento personalizado para operaciones como la lectura, escritura y eliminaci\xf3n de propiedades, lo que proporciona una gran flexibilidad y control sobre el acceso y la manipulaci\xf3n de los datos."}),"\n",(0,r.jsx)(a.p,{children:"Al comprender y utilizar correctamente los Proxies en JavaScript, los desarrolladores pueden mejorar la modularidad, la seguridad y la eficiencia de sus aplicaciones, proporcionando una forma m\xe1s flexible y controlada de interactuar con los objetos."}),"\n",(0,r.jsx)(a.p,{children:"Espero que este texto haya proporcionado una comprensi\xf3n profunda de los Proxies en"}),"\n",(0,r.jsx)(a.p,{children:"JavaScript y c\xf3mo se pueden utilizar para interceptar y personalizar el comportamiento de los objetos de manera efectiva. Con este conocimiento, podr\xe1s dise\xf1ar y desarrollar aplicaciones m\xe1s avanzadas y robustas en JavaScript."})]})}function p(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,o)=>{o.d(a,{R:()=>i,x:()=>c});var n=o(6540);const r={},s=n.createContext(r);function i(e){const a=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function c(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);