"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[3876],{7037:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>t,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"formularios/method","title":"Atributo Method","description":"Los formularios HTML son elementos fundamentales en el desarrollo web, permitiendo la interacci\xf3n entre los usuarios y los sitios web. Uno de los atributos m\xe1s importantes en la construcci\xf3n de formularios es el atributo \\"method\\", que determina c\xf3mo se enviar\xe1n los datos del formulario al servidor web. En este texto, exploraremos en detalle qu\xe9 es y c\xf3mo funciona el atributo \\"method\\" en los formularios web, analizando su significado, su funcionamiento interno y proporcionando ejemplos ilustrativos.","source":"@site/docs/formularios/method.md","sourceDirName":"formularios","slug":"/formularios/method","permalink":"/docuQuest/docs/formularios/method","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/formularios/method.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Atributo Target","permalink":"/docuQuest/docs/formularios/target"},"next":{"title":"Atributo Autocomplete","permalink":"/docuQuest/docs/formularios/autocomplete"}}');var r=n(4848),a=n(8453);const l={},i="Atributo Method",t={},d=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Definici\xf3n y Significado del Atributo &quot;method&quot;",id:"definici\xf3n-y-significado-del-atributo-method",level:2},{value:"Funcionamiento Interno del Atributo &quot;method&quot;",id:"funcionamiento-interno-del-atributo-method",level:3},{value:"Ejemplos de Uso del Atributo &quot;method&quot;",id:"ejemplos-de-uso-del-atributo-method",level:3},{value:"Ejemplo 1: M\xe9todo GET",id:"ejemplo-1-m\xe9todo-get",level:3},{value:"Ejemplo 2: M\xe9todo POST",id:"ejemplo-2-m\xe9todo-post",level:3},{value:"Conclusiones",id:"conclusiones",level:2},{value:"Notas sobre el m\xe9todo GET",id:"notas-sobre-el-m\xe9todo-get",level:3},{value:"Notas sobre el m\xe9todos POST",id:"notas-sobre-el-m\xe9todos-post",level:2}];function c(e){const o={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(o.header,{children:(0,r.jsx)(o.h1,{id:"atributo-method",children:"Atributo Method"})}),"\n",(0,r.jsx)(o.h1,{id:"el-atributo-method-en-los-formularios-html-conceptos-y-funcionamiento",children:'El Atributo "method" en los Formularios HTML: Conceptos y Funcionamiento'}),"\n",(0,r.jsx)(o.p,{children:'Los formularios HTML son elementos fundamentales en el desarrollo web, permitiendo la interacci\xf3n entre los usuarios y los sitios web. Uno de los atributos m\xe1s importantes en la construcci\xf3n de formularios es el atributo "method", que determina c\xf3mo se enviar\xe1n los datos del formulario al servidor web. En este texto, exploraremos en detalle qu\xe9 es y c\xf3mo funciona el atributo "method" en los formularios web, analizando su significado, su funcionamiento interno y proporcionando ejemplos ilustrativos.'}),"\n",(0,r.jsx)(o.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,r.jsx)(o.p,{children:'El atributo "method" en un elemento de formulario HTML especifica el m\xe9todo de env\xedo de los datos del formulario al servidor. Puede tener dos valores posibles: "GET" y "POST". Comprender la diferencia entre estos m\xe9todos es esencial para controlar c\xf3mo se manejan y procesan los datos ingresados por los usuarios.'}),"\n",(0,r.jsx)(o.h2,{id:"definici\xf3n-y-significado-del-atributo-method",children:'Definici\xf3n y Significado del Atributo "method"'}),"\n",(0,r.jsx)(o.p,{children:'El atributo "method" en un formulario HTML especifica el m\xe9todo HTTP utilizado para enviar los datos del formulario al servidor. Los dos valores posibles para este atributo son:'}),"\n",(0,r.jsxs)(o.ul,{children:["\n",(0,r.jsx)(o.li,{children:'"GET": Indica que los datos del formulario se adjuntar\xe1n a la URL de la acci\xf3n del formulario como par\xe1metros de consulta. Este m\xe9todo es adecuado para formularios con datos no sensibles y cuando se desea que los datos sean visibles en la URL.'}),"\n",(0,r.jsx)(o.li,{children:'"POST": Indica que los datos del formulario se enviar\xe1n en el cuerpo de la solicitud HTTP. Este m\xe9todo es adecuado para formularios con datos sensibles y cuando se desea ocultar los datos de la URL.'}),"\n"]}),"\n",(0,r.jsx)(o.h3,{id:"funcionamiento-interno-del-atributo-method",children:'Funcionamiento Interno del Atributo "method"'}),"\n",(0,r.jsx)(o.p,{children:'El atributo "method" funciona de la siguiente manera:'}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Usuario Completa el Formulario"}),": El usuario completa los campos del formulario con la informaci\xf3n requerida, como nombre, direcci\xf3n de correo electr\xf3nico, comentarios, etc."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Env\xedo del Formulario"}),': Una vez que el usuario ha completado el formulario, hace clic en el bot\xf3n de env\xedo. Esto activa un evento en el navegador que recopila los datos del formulario y los env\xeda al servidor especificado en el atributo "action".']}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Selecci\xf3n del M\xe9todo de Env\xedo"}),': Antes de enviar los datos del formulario, el navegador determina qu\xe9 m\xe9todo utilizar\xe1 para enviar los datos al servidor, seg\xfan el valor especificado en el atributo "method".']}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Transmisi\xf3n de los Datos al Servidor"}),": Una vez seleccionado el m\xe9todo de env\xedo, el navegador env\xeda la solicitud HTTP al servidor, incluyendo los datos del formulario seg\xfan corresponda al m\xe9todo seleccionado."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Procesamiento en el Servidor"}),": El servidor web recibe la solicitud y procesa los datos del formulario seg\xfan corresponda al m\xe9todo seleccionado. Esto puede implicar la validaci\xf3n de datos, el almacenamiento en una base de datos, el env\xedo de correos electr\xf3nicos, entre otras acciones."]}),"\n",(0,r.jsxs)(o.li,{children:[(0,r.jsx)(o.strong,{children:"Generaci\xf3n de una Respuesta"}),": Despu\xe9s de procesar los datos del formulario, el servidor genera una respuesta que puede ser una nueva p\xe1gina web, un mensaje de confirmaci\xf3n, una redirecci\xf3n a otra URL, entre otros."]}),"\n"]}),"\n",(0,r.jsx)(o.h3,{id:"ejemplos-de-uso-del-atributo-method",children:'Ejemplos de Uso del Atributo "method"'}),"\n",(0,r.jsx)(o.p,{children:'A continuaci\xf3n, se presentan algunos ejemplos que ilustran c\xf3mo se utiliza el atributo "method" en los formularios HTML:'}),"\n",(0,r.jsx)(o.h3,{id:"ejemplo-1-m\xe9todo-get",children:"Ejemplo 1: M\xe9todo GET"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-html",children:'<form action="procesar.php" method="get">\n  \x3c!-- Campos del formulario --\x3e\n  <button type="submit">Enviar</button>\n</form>\n\n'})}),"\n",(0,r.jsx)(o.p,{children:"En este ejemplo, los datos del formulario se enviar\xe1n al servidor utilizando el m\xe9todo GET. Esto significa que los datos del formulario se adjuntar\xe1n a la URL de la acci\xf3n del formulario como par\xe1metros de consulta."}),"\n",(0,r.jsx)(o.h3,{id:"ejemplo-2-m\xe9todo-post",children:"Ejemplo 2: M\xe9todo POST"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{className:"language-html",children:'<form action="procesar.php" method="post">\n  \x3c!-- Campos del formulario --\x3e\n  <button type="submit">Enviar</button>\n</form>\n\n'})}),"\n",(0,r.jsx)(o.p,{children:"En este ejemplo, los datos del formulario se enviar\xe1n al servidor utilizando el m\xe9todo POST. Esto significa que los datos del formulario se enviar\xe1n en el cuerpo de la solicitud HTTP, en lugar de adjuntarse a la URL."}),"\n",(0,r.jsx)(o.h2,{id:"conclusiones",children:"Conclusiones"}),"\n",(0,r.jsx)(o.p,{children:'En resumen, el atributo "method" en los formularios HTML es esencial para controlar c\xf3mo se enviar\xe1n los datos del formulario al servidor. Al comprender la diferencia entre los m\xe9todos GET y POST, los desarrolladores web pueden elegir el m\xe9todo m\xe1s adecuado seg\xfan la naturaleza de los datos y los requisitos de seguridad de la aplicaci\xf3n web. Esto contribuye a la creaci\xf3n de experiencias de usuario efectivas y funcionales en la web.'}),"\n",(0,r.jsx)(o.h3,{id:"notas-sobre-el-m\xe9todo-get",children:"Notas sobre el m\xe9todo GET"}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsx)(o.li,{children:"Agrega los datos del formulario a la URL, en pares de nombre/valor."}),"\n",(0,r.jsx)(o.li,{children:"\xa1NUNCA utilices GET para enviar datos confidenciales! (\xa1Los datos del formulario enviado son visibles en la URL!)."}),"\n",(0,r.jsx)(o.li,{children:"La longitud de una URL es limitada (2048 caracteres)."}),"\n",(0,r.jsx)(o.li,{children:"\xdatil para env\xedos de formularios donde un usuario desea marcar el resultado como favorito."}),"\n",(0,r.jsx)(o.li,{children:"GET es bueno para datos no seguros, como cadenas de consulta en Google."}),"\n"]}),"\n",(0,r.jsx)(o.h2,{id:"notas-sobre-el-m\xe9todos-post",children:"Notas sobre el m\xe9todos POST"}),"\n",(0,r.jsxs)(o.ol,{children:["\n",(0,r.jsx)(o.li,{children:"Agrega los datos del formulario dentro del cuerpo de la solicitud HTTP (los datos del formulario enviado no se muestran en la URL)"}),"\n",(0,r.jsx)(o.li,{children:"POST no tiene limitaciones de tama\xf1o y puede usarse para enviar grandes cantidades de datos."}),"\n",(0,r.jsx)(o.li,{children:"Los env\xedos de formularios con POST no se pueden marcar como favoritos"}),"\n"]})]})}function u(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>l,x:()=>i});var s=n(6540);const r={},a=s.createContext(r);function l(e){const o=s.useContext(a);return s.useMemo(function(){return"function"==typeof e?e(o):{...o,...e}},[o,e])}function i(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),s.createElement(a.Provider,{value:o},e.children)}}}]);