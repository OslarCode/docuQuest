{
  "id": "js/asincronia/asincronia",
  "title": "Asincronía",
  "description": "La asincronía en JavaScript permite ejecutar tareas sin bloquear el flujo principal del programa, lo que es esencial para manejar operaciones como peticiones a servidores, lectura de archivos o temporizadores. Gracias a mecanismos como callbacks, promesas y async/await, JavaScript puede responder a eventos o procesar datos externos sin detener la interacción del usuario con la página. Esta capacidad hace que las aplicaciones web sean más rápidas, reactivas y eficientes.",
  "source": "@site/docs/js/asincronia/asincronia.md",
  "sourceDirName": "js/asincronia",
  "slug": "/js/asincronia/",
  "permalink": "/docuQuest/docs/js/asincronia/",
  "draft": false,
  "unlisted": false,
  "editUrl": "https://github.com/OslarCode/OslarCode/docs/js/asincronia/asincronia.md",
  "tags": [],
  "version": "current",
  "frontMatter": {},
  "sidebar": "tutorialSidebar",
  "previous": {
    "title": "Depuración del código",
    "permalink": "/docuQuest/docs/js/depuracionCodigo"
  },
  "next": {
    "title": "Introducción",
    "permalink": "/docuQuest/docs/js/asincronia/introduccion"
  }
}