"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[2119],{6161:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"backend/databases/Modulo34_Replicacion_y_lectura_pesada","title":"Modulo 34. Replicaci\xf3n y lectura pesada","description":"\ud83e\udded 34.1. Por qu\xe9 replicar una base de datos","source":"@site/docs/backend/databases/Modulo34_Replicacion_y_lectura_pesada.md","sourceDirName":"backend/databases","slug":"/backend/databases/Modulo34_Replicacion_y_lectura_pesada","permalink":"/docuQuest/docs/backend/databases/Modulo34_Replicacion_y_lectura_pesada","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/Modulo34_Replicacion_y_lectura_pesada.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Modulo 33. Particionamiento y distribuci\xf3n","permalink":"/docuQuest/docs/backend/databases/Modulo33_Particionamiento_y_distribucion"},"next":{"title":"Modulo 35. Cach\xe9s y colas","permalink":"/docuQuest/docs/backend/databases/Modulo35_Caches_y_colas"}}');var i=s(4848),r=s(8453);const l={},c="Modulo 34. Replicaci\xf3n y lectura pesada",o={},d=[{value:"\ud83e\udded 34.1. Por qu\xe9 replicar una base de datos",id:"-341-por-qu\xe9-replicar-una-base-de-datos",level:2},{value:"\ud83e\udde0 34.2. Arquitectura b\xe1sica primario/secundario",id:"-342-arquitectura-b\xe1sica-primariosecundario",level:2},{value:"\ud83e\udded 34.3. Ejemplo sencillo \u2014 PostgreSQL streaming replication",id:"-343-ejemplo-sencillo--postgresql-streaming-replication",level:2},{value:"\ud83e\udde0 34.4. Lecturas escaladas \u2014 distribuir carga",id:"-344-lecturas-escaladas--distribuir-carga",level:2},{value:"\ud83e\udded 34.5. Consistencia eventual \u2014 concepto clave",id:"-345-consistencia-eventual--concepto-clave",level:2},{value:"\ud83e\udde0 34.6. Ejemplo real de inconsistencia temporal",id:"-346-ejemplo-real-de-inconsistencia-temporal",level:2},{value:"Soluciones t\xedpicas:",id:"soluciones-t\xedpicas",level:3},{value:"\ud83e\udded 34.7. Replicaci\xf3n s\xedncrona vs as\xedncrona",id:"-347-replicaci\xf3n-s\xedncrona-vs-as\xedncrona",level:2},{value:"\ud83e\udde0 34.8. Failover y alta disponibilidad",id:"-348-failover-y-alta-disponibilidad",level:2},{value:"\ud83e\udded 34.9. Replicaci\xf3n + particionamiento = escalabilidad real",id:"-349-replicaci\xf3n--particionamiento--escalabilidad-real",level:2},{value:"\ud83e\udde0 34.10. Buenas pr\xe1cticas en entornos con replicaci\xf3n",id:"-3410-buenas-pr\xe1cticas-en-entornos-con-replicaci\xf3n",level:2},{value:"\ud83d\udea8 34.11. Errores comunes",id:"-3411-errores-comunes",level:2}];function t(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"modulo-34-replicaci\xf3n-y-lectura-pesada",children:"Modulo 34. Replicaci\xf3n y lectura pesada"})}),"\n",(0,i.jsx)(n.h2,{id:"-341-por-qu\xe9-replicar-una-base-de-datos",children:"\ud83e\udded 34.1. Por qu\xe9 replicar una base de datos"}),"\n",(0,i.jsx)(n.p,{children:"Cuando una base de datos crece:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Las lecturas se multiplican (dashboards, APIs, informes, consultas de usuarios\u2026),"}),"\n",(0,i.jsxs)(n.li,{children:["Pero ",(0,i.jsx)(n.strong,{children:"no todas esas lecturas tienen que ir al mismo servidor"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Al replicar la base:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Mantienes ",(0,i.jsx)(n.strong,{children:"un nodo primario"})," para escrituras,"]}),"\n",(0,i.jsxs)(n.li,{children:["Y ",(0,i.jsx)(n.strong,{children:"uno o varios nodos secundarios"})," que reciben copias de los datos para lecturas."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Ventajas pr\xe1cticas:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\ud83d\ude80 Escalas lecturas sin saturar el nodo principal."}),"\n",(0,i.jsx)(n.li,{children:"\ud83e\uddef Tienes redundancia en caso de fallo del primario."}),"\n",(0,i.jsx)(n.li,{children:"\ud83d\udcca Puedes usar los secundarios para reporting, backups o tareas pesadas sin afectar la producci\xf3n."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-342-arquitectura-b\xe1sica-primariosecundario",children:"\ud83e\udde0 34.2. Arquitectura b\xe1sica primario/secundario"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"        \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n        \u2502 Aplicaci\xf3n\u2502\n        \u2514\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             \u2502\n \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n \u2502 Servidor Primario (write) \u2502\n \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n             \u2502\n   \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n   \u2502 Nodo Secundario 1 \u2502\n   \u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\n   \u2502 Nodo Secundario 2 \u2502\n   \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["El ",(0,i.jsx)(n.strong,{children:"primario"})," acepta INSERT, UPDATE y DELETE."]}),"\n",(0,i.jsxs)(n.li,{children:["Los ",(0,i.jsx)(n.strong,{children:"secundarios"})," replican esos cambios autom\xe1ticamente."]}),"\n",(0,i.jsxs)(n.li,{children:["La aplicaci\xf3n puede ",(0,i.jsx)(n.strong,{children:"dirigir las lecturas"})," a los secundarios."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Este patr\xf3n se llama ",(0,i.jsx)(n.em,{children:"asynchronous replication"})," (replicaci\xf3n as\xedncrona) cuando los secundarios no bloquean las escrituras del primario."]}),"\n",(0,i.jsx)(n.h2,{id:"-343-ejemplo-sencillo--postgresql-streaming-replication",children:"\ud83e\udded 34.3. Ejemplo sencillo \u2014 PostgreSQL streaming replication"}),"\n",(0,i.jsx)(n.p,{children:"Sup\xf3n que tienes dos servidores:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"db1"})," (primario)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"db2"})," (secundario)"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["En ",(0,i.jsx)(n.code,{children:"db1"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"# postgresql.conf\nwal_level = replica\nmax_wal_senders = 5\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["En ",(0,i.jsx)(n.code,{children:"db2"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"primary_conninfo = 'host=db1 user=replicador password=xxxx'\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Luego inicializas la r\xe9plica:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pg_basebackup -h db1 -D /var/lib/postgresql/data -U replicador -P --wal-method=stream\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 A partir de ah\xed, ",(0,i.jsx)(n.code,{children:"db2"})," recibir\xe1 en tiempo real los cambios de ",(0,i.jsx)(n.code,{children:"db1"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc No necesitas que la aplicaci\xf3n cambie nada en la l\xf3gica de escritura."}),"\n",(0,i.jsx)(n.p,{children:"Solo decides a qu\xe9 nodo va cada consulta de lectura."}),"\n",(0,i.jsx)(n.h2,{id:"-344-lecturas-escaladas--distribuir-carga",children:"\ud83e\udde0 34.4. Lecturas escaladas \u2014 distribuir carga"}),"\n",(0,i.jsx)(n.p,{children:"Un patr\xf3n com\xfan:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Todas las ",(0,i.jsx)(n.strong,{children:"escrituras"})," (INSERT/UPDATE/DELETE) \u2192 van al ",(0,i.jsx)(n.strong,{children:"primario"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Las ",(0,i.jsx)(n.strong,{children:"lecturas pesadas o repetitivas"})," \u2192 se env\xedan a ",(0,i.jsx)(n.strong,{children:"uno o varios secundarios"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo con un balanceador simple:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"function getReadConnection() {\n  // Balanceo simple round-robin entre r\xe9plicas\n  const replicas = [dbReplica1, dbReplica2];\n  return replicas[Math.floor(Math.random() * replicas.length)];\n}\n\nfunction getWriteConnection() {\n  return dbPrimary;\n}\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 As\xed reduces la presi\xf3n sobre el primario, evitando cuellos de botella."}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Muy usado en aplicaciones con muchas lecturas (ecommerce, SaaS, APIs p\xfablicas\u2026)."}),"\n",(0,i.jsx)(n.h2,{id:"-345-consistencia-eventual--concepto-clave",children:"\ud83e\udded 34.5. Consistencia eventual \u2014 concepto clave"}),"\n",(0,i.jsxs)(n.p,{children:["La replicaci\xf3n ",(0,i.jsx)(n.strong,{children:"no es instant\xe1nea"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Existe un peque\xf1o retraso entre:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Escribir en el primario,"}),"\n",(0,i.jsx)(n.li,{children:"Y ver ese cambio reflejado en un secundario."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"INSERT en primario a las 12:00:00"}),"\n",(0,i.jsx)(n.li,{children:"SELECT en secundario a las 12:00:00.010 \u2192 todav\xeda no aparece."}),"\n",(0,i.jsx)(n.li,{children:"SELECT en secundario a las 12:00:00.050 \u2192 ahora s\xed aparece."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Este retraso (replication lag) puede ser:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Imperceptible (milisegundos), o"}),"\n",(0,i.jsx)(n.li,{children:"Notable (segundos o minutos) si el sistema est\xe1 bajo carga."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Esto se llama ",(0,i.jsx)(n.strong,{children:"consistencia eventual"}),":"]}),"\n",(0,i.jsxs)(n.p,{children:["Los datos ",(0,i.jsx)(n.strong,{children:"terminan siendo consistentes"}),", pero no ",(0,i.jsx)(n.strong,{children:"instant\xe1neamente consistentes"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"-346-ejemplo-real-de-inconsistencia-temporal",children:"\ud83e\udde0 34.6. Ejemplo real de inconsistencia temporal"}),"\n",(0,i.jsx)(n.p,{children:"Imagina que un usuario crea un pedido:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"await dbPrimary.query('INSERT INTO pedidos ...');\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Y justo despu\xe9s la app lo consulta para mostrarlo en su panel:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"const result = await dbReplica.query('SELECT * FROM pedidos WHERE id = ...');\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Si la consulta de lectura va a una r\xe9plica que ",(0,i.jsx)(n.strong,{children:"a\xfan no recibi\xf3 la actualizaci\xf3n"}),","]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 la app mostrar\xe1 \u201cno hay pedidos\u201d."}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc Este es un ",(0,i.jsx)(n.strong,{children:"problema com\xfan"})," en sistemas con r\xe9plicas."]}),"\n",(0,i.jsx)(n.h3,{id:"soluciones-t\xedpicas",children:"Soluciones t\xedpicas:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Para operaciones sensibles: ",(0,i.jsx)(n.strong,{children:"leer del primario"})," inmediatamente despu\xe9s de escribir."]}),"\n",(0,i.jsx)(n.li,{children:"O usar mecanismos de sincronizaci\xf3n (por ejemplo, esperar confirmaci\xf3n de replicaci\xf3n en algunos motores)."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-347-replicaci\xf3n-s\xedncrona-vs-as\xedncrona",children:"\ud83e\udded 34.7. Replicaci\xf3n s\xedncrona vs as\xedncrona"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Tipo"}),(0,i.jsx)(n.th,{children:"Caracter\xedsticas"}),(0,i.jsx)(n.th,{children:"Ventajas"}),(0,i.jsx)(n.th,{children:"Desventajas"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"As\xedncrona"})," (la m\xe1s com\xfan)"]}),(0,i.jsx)(n.td,{children:"El primario no espera a los secundarios"}),(0,i.jsx)(n.td,{children:"R\xe1pida, escalable, sin bloquear escrituras"}),(0,i.jsx)(n.td,{children:"Peque\xf1o retraso entre nodos"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:(0,i.jsx)(n.strong,{children:"S\xedncrona"})}),(0,i.jsx)(n.td,{children:"El primario espera confirmaci\xf3n de al menos un secundario"}),(0,i.jsx)(n.td,{children:"Cero lag (consistencia fuerte)"}),(0,i.jsx)(n.td,{children:"Menor rendimiento, m\xe1s latencia en escritura"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 En la pr\xe1ctica:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"As\xedncrona se usa para escalabilidad de lecturas."}),"\n",(0,i.jsx)(n.li,{children:"S\xedncrona se usa cuando no se puede perder ni un solo dato."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Plataforma de streaming \u2192 as\xedncrona."}),"\n",(0,i.jsx)(n.li,{children:"Sistema bancario \u2192 s\xedncrona."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-348-failover-y-alta-disponibilidad",children:"\ud83e\udde0 34.8. Failover y alta disponibilidad"}),"\n",(0,i.jsx)(n.p,{children:"Otro beneficio de la replicaci\xf3n:"}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Si el nodo primario falla, ",(0,i.jsx)(n.strong,{children:"uno de los secundarios puede asumir su rol"}),"."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failover manual"})," \u2192 un administrador promueve un nodo secundario."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Failover autom\xe1tico"})," \u2192 herramientas como Patroni, Stolon, Orchestrator o RDS lo hacen de forma controlada."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo en PostgreSQL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"pg_ctl promote\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 El nodo replica pasa a ser primario."}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Esto mejora la disponibilidad sin requerir copias manuales de \xfaltima hora."}),"\n",(0,i.jsx)(n.h2,{id:"-349-replicaci\xf3n--particionamiento--escalabilidad-real",children:"\ud83e\udded 34.9. Replicaci\xf3n + particionamiento = escalabilidad real"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El particionamiento (M\xf3dulo 33) divide grandes tablas en pedazos manejables dentro de un nodo."}),"\n",(0,i.jsxs)(n.li,{children:["La replicaci\xf3n (M\xf3dulo 34) permite ",(0,i.jsx)(n.strong,{children:"multiplicar nodos para distribuir carga"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Combinarlos da lugar a arquitecturas muy potentes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Primario particionado, con m\xfaltiples r\xe9plicas por shard."}),"\n",(0,i.jsx)(n.li,{children:"Lecturas distribuidas geogr\xe1ficamente."}),"\n",(0,i.jsx)(n.li,{children:"Alta disponibilidad con failover automatizado."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Ejemplo real: muchas plataformas globales (Netflix, GitHub, Shopify) usan este patr\xf3n h\xedbrido."}),"\n",(0,i.jsx)(n.h2,{id:"-3410-buenas-pr\xe1cticas-en-entornos-con-replicaci\xf3n",children:"\ud83e\udde0 34.10. Buenas pr\xe1cticas en entornos con replicaci\xf3n"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Define qu\xe9 consultas pueden ir a r\xe9plicas (solo lecturas no cr\xedticas)."}),"\n",(0,i.jsxs)(n.li,{children:["Mide y monitorea el ",(0,i.jsx)(n.strong,{children:"replication lag"})," constantemente."]}),"\n",(0,i.jsxs)(n.li,{children:["Para operaciones sensibles, ",(0,i.jsx)(n.strong,{children:"forzar lectura al primario"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Automatiza failover para evitar downtime prolongado."}),"\n",(0,i.jsx)(n.li,{children:"Documenta c\xf3mo se maneja cada escenario (falla del primario, recuperaci\xf3n, etc.)."}),"\n",(0,i.jsxs)(n.li,{children:["No uses r\xe9plicas solo como \u201cbackup\u201d: su prop\xf3sito es ",(0,i.jsx)(n.strong,{children:"distribuir carga"})," y ",(0,i.jsx)(n.strong,{children:"mejorar disponibilidad"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-3411-errores-comunes",children:"\ud83d\udea8 34.11. Errores comunes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Leer datos reci\xe9n escritos desde una r\xe9plica \u2192 inconsistencias visibles."}),"\n",(0,i.jsx)(n.li,{children:"Asumir que la replicaci\xf3n es instant\xe1nea."}),"\n",(0,i.jsx)(n.li,{children:"No monitorear el lag \u2192 consultas lentas y datos desfasados."}),"\n",(0,i.jsx)(n.li,{children:"No probar el failover \u2192 caos cuando el primario se cae."}),"\n",(0,i.jsx)(n.li,{children:"Pensar que tener r\xe9plicas reemplaza a los backups (\u26a0\ufe0f no lo hace)."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var a=s(6540);const i={},r=a.createContext(i);function l(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);