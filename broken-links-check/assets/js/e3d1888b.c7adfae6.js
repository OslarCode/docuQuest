"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[8396],{7306:(r,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"backend/JSON/manipularJSON","title":"Manipular JSON desde formularios HTML con Node.js","description":"Qu\xe9 vas a aprender","source":"@site/docs/backend/JSON/manipularJSON.md","sourceDirName":"backend/JSON","slug":"/backend/JSON/manipularJSON","permalink":"/docuQuest/docs/backend/JSON/manipularJSON","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/JSON/manipularJSON.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Guardar y leer datos de un archivo JSON en Node.js","permalink":"/docuQuest/docs/backend/JSON/guardarLeer"},"next":{"title":"Consumir JSON con fetch()","permalink":"/docuQuest/docs/backend/JSON/consumirJSON"}}');var a=n(4848),t=n(8453);const o={},i="Manipular JSON desde formularios HTML con Node.js",d={},l=[{value:"Qu\xe9 vas a aprender",id:"qu\xe9-vas-a-aprender",level:2},{value:"Estructura del proyecto",id:"estructura-del-proyecto",level:2},{value:"Paso 1: <code>public/index.html</code> (formulario + render de la tabla)",id:"paso-1-publicindexhtml-formulario--render-de-la-tabla",level:2},{value:"Paso 2: <code>server.js</code> (servidor HTTP nativo + guardado en JSON)",id:"paso-2-serverjs-servidor-http-nativo--guardado-en-json",level:2},{value:"C\xf3mo ejecutar",id:"c\xf3mo-ejecutar",level:2},{value:"Resultado",id:"resultado",level:2},{value:"T\xe9cnicas aplicadas",id:"t\xe9cnicas-aplicadas",level:2},{value:"Mejoras posibles",id:"mejoras-posibles",level:2}];function c(r){const e={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...r.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"manipular-json-desde-formularios-html-con-nodejs",children:"Manipular JSON desde formularios HTML con Node.js"})}),"\n",(0,a.jsx)(e.h2,{id:"qu\xe9-vas-a-aprender",children:"Qu\xe9 vas a aprender"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Enviar datos desde un formulario HTML."}),"\n",(0,a.jsx)(e.li,{children:"Guardarlos en un archivo JSON local."}),"\n",(0,a.jsx)(e.li,{children:"Listarlos en la web."}),"\n",(0,a.jsx)(e.li,{children:"Todo sin base de datos ni frameworks (Node.js nativo)."}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"estructura-del-proyecto",children:"Estructura del proyecto"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"form-json/\r\n\u251c\u2500\u2500 public/\r\n\u2502   \u2514\u2500\u2500 index.html          \u2190 Formulario + listado (renderiza con fetch)\r\n\u251c\u2500\u2500 usuarios.json           \u2190 \u201cBase de datos\u201d simulada (se crea al guardar)\r\n\u2514\u2500\u2500 server.js               \u2190 Servidor HTTP nativo Node\r\n\n"})}),"\n",(0,a.jsxs)(e.h2,{id:"paso-1-publicindexhtml-formulario--render-de-la-tabla",children:["Paso 1: ",(0,a.jsx)(e.code,{children:"public/index.html"})," (formulario + render de la tabla)"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Archivo est\xe1tico. Env\xeda el formulario a /guardar y pinta la tabla consultando /usuarios v\xeda fetch."}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="es">\r\n  <head>\r\n    <meta charset="UTF-8" />\r\n    <title>Registro de Usuarios (JSON + Node)</title>\r\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\r\n    <link\r\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"\r\n      rel="stylesheet"\r\n    />\r\n  </head>\r\n  <body>\r\n    <div class="container py-5">\r\n      <h1 class="text-primary mb-4">Registro de Usuarios</h1>\r\n\r\n      <form action="/guardar" method="POST" class="mb-5 row g-2">\r\n        <div class="col-md-4">\r\n          <input\r\n            class="form-control"\r\n            name="nombre"\r\n            placeholder="Nombre"\r\n            required\r\n          />\r\n        </div>\r\n        <div class="col-md-4">\r\n          <input\r\n            class="form-control"\r\n            name="email"\r\n            type="email"\r\n            placeholder="Correo electr\xf3nico"\r\n            required\r\n          />\r\n        </div>\r\n        <div class="col-md-2">\r\n          <input\r\n            class="form-control"\r\n            name="edad"\r\n            type="number"\r\n            placeholder="Edad"\r\n            min="0"\r\n            required\r\n          />\r\n        </div>\r\n        <div class="col-md-2">\r\n          <button class="btn btn-success w-100">Registrar</button>\r\n        </div>\r\n      </form>\r\n\r\n      <h2>Usuarios registrados</h2>\r\n      <table class="table table-bordered" id="tabla">\r\n        <thead>\r\n          <tr>\r\n            <th>Nombre</th>\r\n            <th>Email</th>\r\n            <th>Edad</th>\r\n            <th>Registrado</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody id="tbody">\r\n          \x3c!-- Se rellena con fetch --\x3e\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <script>\r\n      async function cargarUsuarios() {\r\n        try {\r\n          const res = await fetch("/usuarios"); // devuelve JSON\r\n          if (!res.ok) throw new Error("Error al cargar");\r\n          const usuarios = await res.json(); // array\r\n          const tbody = document.getElementById("tbody");\r\n          tbody.innerHTML = usuarios\r\n            .map(\r\n              (u) => `\r\n          <tr>\r\n            <td>${escapeHtml(u.nombre)}</td>\r\n            <td>${escapeHtml(u.email)}</td>\r\n            <td>${Number(u.edad)}</td>\r\n            <td>${u.fecha}</td>\r\n          </tr>\r\n        `\r\n            )\r\n            .join("");\r\n        } catch (e) {\r\n          console.error(e);\r\n        }\r\n      }\r\n\r\n      // Saneado b\xe1sico para prevenir inyecci\xf3n en la tabla\r\n      function escapeHtml(str) {\r\n        return String(str)\r\n          .replaceAll("&", "&amp;")\r\n          .replaceAll("<", "&lt;")\r\n          .replaceAll(">", "&gt;")\r\n          .replaceAll(\'"\', "&quot;")\r\n          .replaceAll("\'", "&#039;");\r\n      }\r\n\r\n      cargarUsuarios();\r\n    <\/script>\r\n  </body>\r\n</html>\n'})}),"\n",(0,a.jsxs)(e.h2,{id:"paso-2-serverjs-servidor-http-nativo--guardado-en-json",children:["Paso 2: ",(0,a.jsx)(e.code,{children:"server.js"})," (servidor HTTP nativo + guardado en JSON)"]}),"\n",(0,a.jsxs)(e.blockquote,{children:["\n",(0,a.jsx)(e.p,{children:"Sin Express. Maneja GET / y /usuarios, y POST /guardar. Guarda en usuarios.json con indentaci\xf3n legible."}),"\n"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-jsx",children:'// server.js\r\nimport http from "node:http";\r\nimport { readFile, writeFile, access } from "node:fs/promises";\r\nimport { constants, createReadStream } from "node:fs";\r\nimport path from "node:path";\r\nimport { fileURLToPath } from "node:url";\r\n\r\nconst __filename = fileURLToPath(import.meta.url);\r\nconst __dirname = path.dirname(__filename);\r\n\r\nconst PORT = 3000;\r\nconst PUBLIC_DIR = path.join(__dirname, "public");\r\nconst DATA_FILE = path.join(__dirname, "usuarios.json");\r\n\r\n// Utilidad: comprueba si existe el archivo\r\nasync function exists(p) {\r\n  try {\r\n    await access(p, constants.F_OK);\r\n    return true;\r\n  } catch {\r\n    return false;\r\n  }\r\n}\r\n\r\n// Lectura segura de usuarios.json\r\nasync function leerUsuarios() {\r\n  if (!(await exists(DATA_FILE))) return [];\r\n  const txt = await readFile(DATA_FILE, "utf8");\r\n  if (!txt.trim()) return [];\r\n  try {\r\n    return JSON.parse(txt);\r\n  } catch {\r\n    return [];\r\n  }\r\n}\r\n\r\n// Escritura segura de usuarios.json\r\nasync function guardarUsuarios(arr) {\r\n  const json = JSON.stringify(arr, null, 2);\r\n  await writeFile(DATA_FILE, json, "utf8");\r\n}\r\n\r\n// Servir archivo est\xe1tico simple (solo index.html en este caso)\r\nfunction serveIndex(res) {\r\n  const filePath = path.join(PUBLIC_DIR, "index.html");\r\n  res.writeHead(200, { "Content-Type": "text/html; charset=utf-8" });\r\n  createReadStream(filePath).pipe(res);\r\n}\r\n\r\n// Parseo de body x-www-form-urlencoded\r\nasync function parseFormBody(req) {\r\n  const chunks = [];\r\n  for await (const chunk of req) chunks.push(chunk);\r\n  const body = Buffer.concat(chunks).toString("utf8");\r\n  const params = new URLSearchParams(body);\r\n  const obj = {};\r\n  for (const [k, v] of params.entries()) obj[k] = v;\r\n  return obj;\r\n}\r\n\r\nconst server = http.createServer(async (req, res) => {\r\n  try {\r\n    const url = new URL(req.url, `http://${req.headers.host}`);\r\n    // GET /\r\n    if (req.method === "GET" && url.pathname === "/") {\r\n      return serveIndex(res);\r\n    }\r\n\r\n    // GET /usuarios -> JSON de usuarios\r\n    if (req.method === "GET" && url.pathname === "/usuarios") {\r\n      const usuarios = await leerUsuarios();\r\n      res.writeHead(200, { "Content-Type": "application/json; charset=utf-8" });\r\n      return res.end(JSON.stringify(usuarios));\r\n    }\r\n\r\n    // POST /guardar -> procesa formulario y guarda en JSON\r\n    if (req.method === "POST" && url.pathname === "/guardar") {\r\n      const data = await parseFormBody(req);\r\n      const { nombre, email, edad } = data;\r\n\r\n      // Validaci\xf3n b\xe1sica\r\n      if (!nombre || !email || !edad || Number.isNaN(Number(edad))) {\r\n        res.writeHead(302, { Location: "/" });\r\n        return res.end();\r\n      }\r\n\r\n      const usuarios = await leerUsuarios();\r\n      usuarios.push({\r\n        nombre: String(nombre).trim(),\r\n        email: String(email).trim(),\r\n        edad: Number(edad),\r\n        fecha: new Date().toISOString().replace("T", " ").slice(0, 16),\r\n      });\r\n      await guardarUsuarios(usuarios);\r\n\r\n      // Redirige de vuelta a la portada\r\n      res.writeHead(302, { Location: "/" });\r\n      return res.end();\r\n    }\r\n\r\n    // Cualquier otro recurso est\xe1tico bajo /public si lo necesitas\r\n    // (opcional) ejemplo: servir Bootstrap local, im\xe1genes, etc.\r\n\r\n    // 404 por defecto\r\n    res.writeHead(404, { "Content-Type": "text/plain; charset=utf-8" });\r\n    res.end("No encontrado");\r\n  } catch (err) {\r\n    console.error(err);\r\n    res.writeHead(500, { "Content-Type": "text/plain; charset=utf-8" });\r\n    res.end("Error interno del servidor");\r\n  }\r\n});\r\n\r\nserver.listen(PORT, () => {\r\n  console.log(`Servidor en http://localhost:${PORT}`);\r\n});\n'})}),"\n",(0,a.jsx)(e.h2,{id:"c\xf3mo-ejecutar",children:"C\xf3mo ejecutar"}),"\n",(0,a.jsxs)(e.ol,{children:["\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Crea la estructura de carpetas y archivos tal cual."}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Ejecuta:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"node server.js\r\n\n"})}),"\n"]}),"\n",(0,a.jsxs)(e.li,{children:["\n",(0,a.jsx)(e.p,{children:"Abre en el navegador:"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"http://localhost:3000\r\n\n"})}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"resultado",children:"Resultado"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Los usuarios se registran con el formulario HTML."}),"\n",(0,a.jsxs)(e.li,{children:["El servidor guarda cada registro en ",(0,a.jsx)(e.code,{children:"usuarios.json"})," sin borrar los anteriores."]}),"\n",(0,a.jsxs)(e.li,{children:["El listado se pinta en la tabla con un ",(0,a.jsx)(e.code,{children:"fetch"})," a ",(0,a.jsx)(e.code,{children:"/usuarios"}),"."]}),"\n",(0,a.jsx)(e.li,{children:"Todo funciona con Node.js nativo y un archivo JSON local."}),"\n"]}),"\n",(0,a.jsx)(e.h2,{id:"t\xe9cnicas-aplicadas",children:"T\xe9cnicas aplicadas"}),"\n",(0,a.jsxs)(e.table,{children:[(0,a.jsx)(e.thead,{children:(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.th,{children:"Acci\xf3n"}),(0,a.jsx)(e.th,{children:"Tecnolog\xeda usada en Node.js"})]})}),(0,a.jsxs)(e.tbody,{children:[(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Servir la p\xe1gina"}),(0,a.jsxs)(e.td,{children:["M\xf3dulo ",(0,a.jsx)(e.code,{children:"http"})," + archivo est\xe1tico"]})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Recibir formulario POST"}),(0,a.jsxs)(e.td,{children:[(0,a.jsx)(e.code,{children:"application/x-www-form-urlencoded"})," + ",(0,a.jsx)(e.code,{children:"URLSearchParams"})]})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Guardar datos como JSON"}),(0,a.jsxs)(e.td,{children:[(0,a.jsx)(e.code,{children:"JSON.stringify(..., null, 2)"})," + ",(0,a.jsx)(e.code,{children:"fs/promises.writeFile"})]})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Leer datos JSON"}),(0,a.jsxs)(e.td,{children:[(0,a.jsx)(e.code,{children:"fs/promises.readFile"})," + ",(0,a.jsx)(e.code,{children:"JSON.parse()"})]})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Render del listado"}),(0,a.jsxs)(e.td,{children:[(0,a.jsx)(e.code,{children:"fetch('/usuarios')"})," + DOM en el cliente"]})]}),(0,a.jsxs)(e.tr,{children:[(0,a.jsx)(e.td,{children:"Saneado b\xe1sico en cliente"}),(0,a.jsxs)(e.td,{children:["Funci\xf3n ",(0,a.jsx)(e.code,{children:"escapeHtml"})," en ",(0,a.jsx)(e.code,{children:"index.html"})]})]})]})]}),"\n",(0,a.jsx)(e.h2,{id:"mejoras-posibles",children:"Mejoras posibles"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:"Validaci\xf3n m\xe1s estricta del email y rangos de edad."}),"\n",(0,a.jsx)(e.li,{children:"Editar y eliminar usuarios."}),"\n",(0,a.jsx)(e.li,{children:"Paginaci\xf3n o ordenaci\xf3n por fecha."}),"\n",(0,a.jsxs)(e.li,{children:["Sustituir el render con ",(0,a.jsx)(e.code,{children:"fetch"})," por una plantilla server-side si prefieres no usar JS en el cliente."]}),"\n"]})]})}function u(r={}){const{wrapper:e}={...(0,t.R)(),...r.components};return e?(0,a.jsx)(e,{...r,children:(0,a.jsx)(c,{...r})}):c(r)}},8453:(r,e,n)=>{n.d(e,{R:()=>o,x:()=>i});var s=n(6540);const a={},t=s.createContext(a);function o(r){const e=s.useContext(t);return s.useMemo(function(){return"function"==typeof r?r(e):{...e,...r}},[e,r])}function i(r){let e;return e=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:o(r.components),s.createElement(t.Provider,{value:e},r.children)}}}]);