"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[2612],{4099:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"backend/JSON/clienteHTTP","title":"Cliente HTML minimo para la API","description":"Objetivo","source":"@site/docs/backend/JSON/clienteHTTP.md","sourceDirName":"backend/JSON","slug":"/backend/JSON/clienteHTTP","permalink":"/docuQuest/docs/backend/JSON/clienteHTTP","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/JSON/clienteHTTP.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"CRUD HTTP nativo con Node.js","permalink":"/docuQuest/docs/backend/JSON/crud"},"next":{"title":"Paginaci\xf3n, filtros, orden de b\xfasqueda en API usuarios","permalink":"/docuQuest/docs/backend/JSON/paginacion"}}');var a=e(4848),s=e(8453);const i={},o="Cliente HTML minimo para la API",l={},c=[{value:"Objetivo",id:"objetivo",level:2},{value:"Estructura sugerida",id:"estructura-sugerida",level:2},{value:"<code>public/index.html</code>",id:"publicindexhtml",level:2},{value:"<code>public/app.js</code>",id:"publicappjs",level:2},{value:"C\xf3mo ejecutar",id:"c\xf3mo-ejecutar",level:2},{value:"Qu\xe9 has cubierto con este m\xf3dulo",id:"qu\xe9-has-cubierto-con-este-m\xf3dulo",level:2}];function d(r){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...r.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cliente-html-minimo-para-la-api",children:"Cliente HTML minimo para la API"})}),"\n",(0,a.jsx)(n.h2,{id:"objetivo",children:"Objetivo"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Listar usuarios desde ",(0,a.jsx)(n.code,{children:"GET /api/usuarios"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Crear usuarios con ",(0,a.jsx)(n.code,{children:"POST /api/usuarios"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Seleccionar un usuario de la tabla y actualizarlo con ",(0,a.jsx)(n.code,{children:"PUT /api/usuarios/:id"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["Eliminar usuarios con ",(0,a.jsx)(n.code,{children:"DELETE /api/usuarios/:id"}),"."]}),"\n",(0,a.jsx)(n.li,{children:"Manejo b\xe1sico de errores."}),"\n"]}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsxs)(n.p,{children:["Requisito: tener corriendo el servidor del M\xf3dulo 11 en ",(0,a.jsx)(n.a,{href:"http://localhost:3000",children:"http://localhost:3000"})," (ya expone CORS b\xe1sico, as\xed que se puede consumir desde un index.html local)."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"estructura-sugerida",children:"Estructura sugerida"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"json-crud-client/\r\n\u2514\u2500\u2500 public/\r\n    \u251c\u2500\u2500 index.html\r\n    \u2514\u2500\u2500 app.js\r\n\n"})}),"\n",(0,a.jsx)(n.h2,{id:"publicindexhtml",children:(0,a.jsx)(n.code,{children:"public/index.html"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"Interfaz m\xednima con dos formularios: crear y actualizar. La tabla permite seleccionar un usuario y eliminarlo."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html lang="es">\r\n  <head>\r\n    <meta charset="utf-8" />\r\n    <title>Cliente m\xednimo API JSON (Node.js)</title>\r\n    <meta name="viewport" content="width=device-width, initial-scale=1" />\r\n    <link\r\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"\r\n      rel="stylesheet"\r\n    />\r\n    <style>\r\n      .clickable {\r\n        cursor: pointer;\r\n      }\r\n      .small-muted {\r\n        font-size: 0.9rem;\r\n        color: #6c757d;\r\n      }\r\n      .loading {\r\n        opacity: 0.6;\r\n        pointer-events: none;\r\n      }\r\n    </style>\r\n  </head>\r\n  <body>\r\n    <div class="container py-4">\r\n      <h1 class="mb-4">Cliente m\xednimo para API de usuarios</h1>\r\n\r\n      \x3c!-- Estado --\x3e\r\n      <div id="msg" class="mb-3"></div>\r\n\r\n      \x3c!-- Crear --\x3e\r\n      <section class="mb-4">\r\n        <h2 class="h5">Crear usuario</h2>\r\n        <form id="form-create" class="row g-2">\r\n          <div class="col-md-4">\r\n            <input\r\n              class="form-control"\r\n              name="nombre"\r\n              placeholder="Nombre"\r\n              required\r\n            />\r\n          </div>\r\n          <div class="col-md-4">\r\n            <input\r\n              class="form-control"\r\n              name="email"\r\n              type="email"\r\n              placeholder="Email"\r\n              required\r\n            />\r\n          </div>\r\n          <div class="col-md-2">\r\n            <input\r\n              class="form-control"\r\n              name="edad"\r\n              type="number"\r\n              placeholder="Edad"\r\n              min="0"\r\n              required\r\n            />\r\n          </div>\r\n          <div class="col-md-2">\r\n            <button class="btn btn-success w-100">Crear</button>\r\n          </div>\r\n        </form>\r\n        <p class="small-muted mt-2">\r\n          Tras crear, se refresca el listado autom\xe1ticamente.\r\n        </p>\r\n      </section>\r\n\r\n      \x3c!-- Actualizar --\x3e\r\n      <section class="mb-4">\r\n        <h2 class="h5">Actualizar usuario</h2>\r\n        <form id="form-update" class="row g-2">\r\n          <input type="hidden" name="id" />\r\n          <div class="col-md-3">\r\n            <input\r\n              class="form-control"\r\n              name="nombre"\r\n              placeholder="Nuevo nombre"\r\n            />\r\n          </div>\r\n          <div class="col-md-3">\r\n            <input\r\n              class="form-control"\r\n              name="email"\r\n              type="email"\r\n              placeholder="Nuevo email"\r\n            />\r\n          </div>\r\n          <div class="col-md-2">\r\n            <input\r\n              class="form-control"\r\n              name="edad"\r\n              type="number"\r\n              placeholder="Nueva edad"\r\n              min="0"\r\n            />\r\n          </div>\r\n          <div class="col-md-2">\r\n            <button class="btn btn-primary w-100">Actualizar</button>\r\n          </div>\r\n          <div class="col-md-2">\r\n            <button\r\n              type="button"\r\n              id="btn-update-cancel"\r\n              class="btn btn-secondary w-100"\r\n            >\r\n              Cancelar\r\n            </button>\r\n          </div>\r\n        </form>\r\n        <p class="small-muted mt-2">\r\n          Selecciona un usuario de la tabla para cargar sus datos aqu\xed. Solo se\r\n          env\xedan los campos que rellenes.\r\n        </p>\r\n      </section>\r\n\r\n      \x3c!-- Listado --\x3e\r\n      <section>\r\n        <div class="d-flex align-items-center mb-2">\r\n          <h2 class="h5 mb-0">Usuarios</h2>\r\n          <button\r\n            id="btn-refresh"\r\n            class="btn btn-outline-secondary btn-sm ms-3"\r\n          >\r\n            Recargar\r\n          </button>\r\n        </div>\r\n        <div class="table-responsive">\r\n          <table class="table table-hover align-middle" id="tabla-usuarios">\r\n            <thead>\r\n              <tr>\r\n                <th style="width:90px;">ID</th>\r\n                <th>Nombre</th>\r\n                <th>Email</th>\r\n                <th style="width:120px;">Edad</th>\r\n                <th style="width:160px;">Fecha</th>\r\n                <th style="width:120px;">Acciones</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody id="tbody-usuarios"></tbody>\r\n          </table>\r\n        </div>\r\n      </section>\r\n    </div>\r\n\r\n    <script src="./app.js" type="module"><\/script>\r\n  </body>\r\n</html>\n'})}),"\n",(0,a.jsx)(n.h2,{id:"publicappjs",children:(0,a.jsx)(n.code,{children:"public/app.js"})}),"\n",(0,a.jsxs)(n.blockquote,{children:["\n",(0,a.jsx)(n.p,{children:"L\xf3gica m\xednima: cargar, crear, seleccionar para actualizar, actualizar parcial, eliminar. Manejo de mensajes y bloqueos simples para evitar dobles clics."}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-jsx",children:'const API_BASE = "http://localhost:3000/api/usuarios";\r\n\r\nconst $msg = document.getElementById("msg");\r\nconst $tbody = document.getElementById("tbody-usuarios");\r\nconst $btnRefresh = document.getElementById("btn-refresh");\r\n\r\nconst $formCreate = document.getElementById("form-create");\r\nconst $formUpdate = document.getElementById("form-update");\r\nconst $btnCancelUpdate = document.getElementById("btn-update-cancel");\r\n\r\nfunction showMsg(texto, tipo = "success") {\r\n  $msg.innerHTML = `<div class="alert alert-${tipo}">${escapeHtml(\r\n    texto\r\n  )}</div>`;\r\n  setTimeout(() => ($msg.innerHTML = ""), 3000);\r\n}\r\n\r\nfunction setBusy(busy) {\r\n  document.body.classList.toggle("loading", busy);\r\n}\r\n\r\nfunction escapeHtml(str) {\r\n  return String(str)\r\n    .replaceAll("&", "&amp;")\r\n    .replaceAll("<", "&lt;")\r\n    .replaceAll(">", "&gt;")\r\n    .replaceAll(\'"\', "&quot;")\r\n    .replaceAll("\'", "&#039;");\r\n}\r\n\r\nasync function loadUsers() {\r\n  setBusy(true);\r\n  try {\r\n    const res = await fetch(API_BASE);\r\n    if (!res.ok) throw new Error("Error al cargar usuarios");\r\n    const data = await res.json();\r\n    renderUsers(data);\r\n  } catch (err) {\r\n    showMsg(err.message || "Fallo al cargar", "danger");\r\n    $tbody.innerHTML = "";\r\n  } finally {\r\n    setBusy(false);\r\n  }\r\n}\r\n\r\nfunction renderUsers(list) {\r\n  $tbody.innerHTML = list\r\n    .map(\r\n      (u) => `\r\n    <tr data-id="${u.id}">\r\n      <td>${u.id}</td>\r\n      <td class="clickable" data-action="pick">${escapeHtml(\r\n        u.nombre ?? ""\r\n      )}</td>\r\n      <td>${escapeHtml(u.email ?? "")}</td>\r\n      <td>${Number.isFinite(u.edad) ? u.edad : ""}</td>\r\n      <td>${escapeHtml(u.fecha ?? "")}</td>\r\n      <td>\r\n        <button class="btn btn-sm btn-outline-primary me-2" data-action="pick">Editar</button>\r\n        <button class="btn btn-sm btn-outline-danger" data-action="del">Eliminar</button>\r\n      </td>\r\n    </tr>\r\n  `\r\n    )\r\n    .join("");\r\n}\r\n\r\n$btnRefresh.addEventListener("click", loadUsers);\r\n\r\n// Crear\r\n$formCreate.addEventListener("submit", async (e) => {\r\n  e.preventDefault();\r\n  const fd = new FormData($formCreate);\r\n  const payload = {\r\n    nombre: fd.get("nombre")?.trim(),\r\n    email: fd.get("email")?.trim(),\r\n    edad: Number(fd.get("edad")),\r\n  };\r\n  setBusy(true);\r\n  try {\r\n    const res = await fetch(API_BASE, {\r\n      method: "POST",\r\n      headers: { "Content-Type": "application/json" },\r\n      body: JSON.stringify(payload),\r\n    });\r\n    const data = await res.json().catch(() => ({}));\r\n    if (!res.ok) throw new Error(data.error || "No se pudo crear");\r\n    showMsg(`Creado id=${data.id}`);\r\n    $formCreate.reset();\r\n    await loadUsers();\r\n  } catch (err) {\r\n    showMsg(err.message || "Error al crear", "danger");\r\n  } finally {\r\n    setBusy(false);\r\n  }\r\n});\r\n\r\n// Seleccionar fila (para editar o eliminar)\r\n$tbody.addEventListener("click", async (e) => {\r\n  const btn = e.target.closest("[data-action]");\r\n  if (!btn) return;\r\n  const tr = e.target.closest("tr");\r\n  const id = Number(tr?.dataset?.id);\r\n  if (!Number.isInteger(id)) return;\r\n\r\n  const action = btn.dataset.action;\r\n  if (action === "pick") {\r\n    // Cargar datos en el formulario de update\r\n    try {\r\n      const res = await fetch(`${API_BASE}/${id}`);\r\n      const user = await res.json();\r\n      if (!res.ok) throw new Error(user.error || "No encontrado");\r\n      $formUpdate.elements.id.value = user.id;\r\n      $formUpdate.elements.nombre.value = user.nombre ?? "";\r\n      $formUpdate.elements.email.value = user.email ?? "";\r\n      $formUpdate.elements.edad.value = Number.isFinite(user.edad)\r\n        ? user.edad\r\n        : "";\r\n      showMsg(`Editando id=${user.id}`, "secondary");\r\n    } catch (err) {\r\n      showMsg(err.message || "Error al obtener usuario", "danger");\r\n    }\r\n  }\r\n\r\n  if (action === "del") {\r\n    if (!confirm(`\xbfEliminar usuario ${id}?`)) return;\r\n    setBusy(true);\r\n    try {\r\n      const res = await fetch(`${API_BASE}/${id}`, { method: "DELETE" });\r\n      if (!res.ok && res.status !== 204) {\r\n        const data = await res.json().catch(() => ({}));\r\n        throw new Error(data.error || "No se pudo eliminar");\r\n      }\r\n      showMsg(`Eliminado id=${id}`);\r\n      if ($formUpdate.elements.id.value === String(id)) {\r\n        $formUpdate.reset();\r\n      }\r\n      await loadUsers();\r\n    } catch (err) {\r\n      showMsg(err.message || "Error al eliminar", "danger");\r\n    } finally {\r\n      setBusy(false);\r\n    }\r\n  }\r\n});\r\n\r\n// Actualizar\r\n$formUpdate.addEventListener("submit", async (e) => {\r\n  e.preventDefault();\r\n  const id = Number($formUpdate.elements.id.value);\r\n  if (!Number.isInteger(id)) {\r\n    showMsg("Selecciona antes un usuario de la tabla", "warning");\r\n    return;\r\n  }\r\n  // Enviar solo los campos rellenados (patch parcial con PUT)\r\n  const nombre = $formUpdate.elements.nombre.value.trim();\r\n  const email = $formUpdate.elements.email.value.trim();\r\n  const edadStr = $formUpdate.elements.edad.value;\r\n  const patch = {};\r\n  if (nombre) patch.nombre = nombre;\r\n  if (email) patch.email = email;\r\n  if (edadStr !== "") patch.edad = Number(edadStr);\r\n\r\n  if (Object.keys(patch).length === 0) {\r\n    showMsg("No hay cambios para enviar", "warning");\r\n    return;\r\n  }\r\n\r\n  setBusy(true);\r\n  try {\r\n    const res = await fetch(`${API_BASE}/${id}`, {\r\n      method: "PUT",\r\n      headers: { "Content-Type": "application/json" },\r\n      body: JSON.stringify(patch),\r\n    });\r\n    const data = await res.json().catch(() => ({}));\r\n    if (!res.ok) throw new Error(data.error || "No se pudo actualizar");\r\n    showMsg(`Actualizado id=${id}`);\r\n    $formUpdate.reset();\r\n    await loadUsers();\r\n  } catch (err) {\r\n    showMsg(err.message || "Error al actualizar", "danger");\r\n  } finally {\r\n    setBusy(false);\r\n  }\r\n});\r\n\r\n$btnCancelUpdate.addEventListener("click", () => {\r\n  $formUpdate.reset();\r\n  showMsg("Edici\xf3n cancelada", "secondary");\r\n});\r\n\r\n// Inicio\r\nloadUsers();\n'})}),"\n",(0,a.jsx)(n.h2,{id:"c\xf3mo-ejecutar",children:"C\xf3mo ejecutar"}),"\n",(0,a.jsx)(n.p,{children:"Opci\xf3n A (sencilla):"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Aseg\xfarate de que el servidor del ",(0,a.jsx)(n.strong,{children:"M\xf3dulo 11"})," est\xe1 corriendo en ",(0,a.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n"]}),"\n",(0,a.jsxs)(n.li,{children:["\n",(0,a.jsxs)(n.p,{children:["Abre ",(0,a.jsx)(n.code,{children:"public/index.html"})," con tu navegador (doble clic)."]}),"\n",(0,a.jsxs)(n.p,{children:["La API ya permite CORS, as\xed que ",(0,a.jsx)(n.code,{children:"fetch"})," deber\xeda funcionar desde un archivo local."]}),"\n"]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Opci\xf3n B (sirviendo ",(0,a.jsx)(n.code,{children:"public/"}),"):"]}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsx)(n.li,{children:"Instala una extensi\xf3n de servidor est\xe1tico en VSCode (por ejemplo \u201cLive Server\u201d) o usa cualquier servidor est\xe1tico."}),"\n",(0,a.jsxs)(n.li,{children:["Sirve la carpeta ",(0,a.jsx)(n.code,{children:"public/"})," y navega a ",(0,a.jsx)(n.code,{children:"http://localhost:5500"})," (o el puerto que te d\xe9)."]}),"\n",(0,a.jsxs)(n.li,{children:["Mant\xe9n el M\xf3dulo 11 activo en ",(0,a.jsx)(n.code,{children:"http://localhost:3000"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"qu\xe9-has-cubierto-con-este-m\xf3dulo",children:"Qu\xe9 has cubierto con este m\xf3dulo"}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{children:"Operaci\xf3n"}),(0,a.jsx)(n.th,{children:"Acci\xf3n en el cliente"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"GET /api/usuarios"}),(0,a.jsx)(n.td,{children:"Bot\xf3n \u201cRecargar\u201d e inicio autom\xe1tico"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:["GET /api/usuarios/",":id"]}),(0,a.jsx)(n.td,{children:"Cargar datos en el formulario de actualizaci\xf3n al \u201cEditar\u201d o click en el nombre"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{children:"POST /api/usuarios"}),(0,a.jsx)(n.td,{children:"Formulario \u201cCrear usuario\u201d"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:["PUT /api/usuarios/",":id"]}),(0,a.jsx)(n.td,{children:"Formulario \u201cActualizar usuario\u201d (env\xeda solo campos rellenados)"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsxs)(n.td,{children:["DELETE /api/usuarios/",":id"]}),(0,a.jsx)(n.td,{children:"Bot\xf3n \u201cEliminar\u201d por fila"})]})]})]})]})}function u(r={}){const{wrapper:n}={...(0,s.R)(),...r.components};return n?(0,a.jsx)(n,{...r,children:(0,a.jsx)(d,{...r})}):d(r)}},8453:(r,n,e)=>{e.d(n,{R:()=>i,x:()=>o});var t=e(6540);const a={},s=t.createContext(a);function i(r){const n=t.useContext(s);return t.useMemo(function(){return"function"==typeof r?r(n):{...n,...r}},[n,r])}function o(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(a):r.components||a:i(r.components),t.createElement(s.Provider,{value:n},r.children)}}}]);