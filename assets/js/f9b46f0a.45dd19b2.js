"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[4111],{5560:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"backend/Node.js/seguridadBuenasPracticas","title":"Seguridad, despliegue y buenas pr\xe1cticas","description":"Despliegue y buenas pr\xe1cticas en aplicaciones Node.js","source":"@site/docs/backend/Node.js/seguridadBuenasPracticas.md","sourceDirName":"backend/Node.js","slug":"/backend/Node.js/seguridadBuenasPracticas","permalink":"/docuQuest/docs/backend/Node.js/seguridadBuenasPracticas","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/Node.js/seguridadBuenasPracticas.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Conexi\xf3n a base de datos real con MongoDB y Mongoose","permalink":"/docuQuest/docs/backend/Node.js/mongoDBMongoose"},"next":{"title":"\xbfQu\xe9 es JSON? Sintaxis y estructura b\xe1sica","permalink":"/docuQuest/docs/backend/JSON/queEsJSON"}}');var o=s(4848),a=s(8453);const i={},c="Seguridad, despliegue y buenas pr\xe1cticas",d={},t=[{value:"Despliegue y buenas pr\xe1cticas en aplicaciones Node.js",id:"despliegue-y-buenas-pr\xe1cticas-en-aplicaciones-nodejs",level:2},{value:"Preparaci\xf3n para producci\xf3n",id:"preparaci\xf3n-para-producci\xf3n",level:3},{value:"Desplegar con Render, Railway o Vercel (sin complicarte)",id:"desplegar-con-render-railway-o-vercel-sin-complicarte",level:3},{value:"Ejemplo con Render:",id:"ejemplo-con-render",level:3},{value:"Seguridad b\xe1sica en Node.js",id:"seguridad-b\xe1sica-en-nodejs",level:3},{value:"Buenas pr\xe1cticas de estructura y mantenimiento",id:"buenas-pr\xe1cticas-de-estructura-y-mantenimiento",level:3},{value:"Testing y monitoreo",id:"testing-y-monitoreo",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:3},{value:"NUEVA SECCI\xd3N DEL M\xd3DULO 8",id:"nueva-secci\xf3n-del-m\xf3dulo-8",level:2},{value:"Seguridad real: Login, JWT, Bcrypt y Roles",id:"seguridad-real-login-jwt-bcrypt-y-roles",level:3},{value:"Estructura del proyecto",id:"estructura-del-proyecto",level:2},{value:"Paso 1: Instalaci\xf3n",id:"paso-1-instalaci\xf3n",level:2},{value:"Paso 2: Configura <code>.env</code>",id:"paso-2-configura-env",level:2},{value:"Paso 3: Modelo <code>Usuario</code>",id:"paso-3-modelo-usuario",level:2},{value:"Paso 4: Middleware para proteger rutas",id:"paso-4-middleware-para-proteger-rutas",level:2},{value:"Paso 5: Rutas de autenticaci\xf3n",id:"paso-5-rutas-de-autenticaci\xf3n",level:2},{value:"Paso 6: <code>server.js</code>",id:"paso-6-serverjs",level:2},{value:"Pruebas con Postman",id:"pruebas-con-postman",level:2},{value:"\xbfQu\xe9 has aprendido aqu\xed?",id:"qu\xe9-has-aprendido-aqu\xed",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 sigue?",id:"-qu\xe9-sigue",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"seguridad-despliegue-y-buenas-pr\xe1cticas",children:"Seguridad, despliegue y buenas pr\xe1cticas"})}),"\n",(0,o.jsx)(n.h2,{id:"despliegue-y-buenas-pr\xe1cticas-en-aplicaciones-nodejs",children:"Despliegue y buenas pr\xe1cticas en aplicaciones Node.js"}),"\n",(0,o.jsx)(n.p,{children:"Hasta ahora hemos construido aplicaciones funcionales, conectadas a bases de datos, con rutas bien organizadas y un frontend que interact\xfaa con la API. Pero ning\xfan proyecto est\xe1 realmente completo hasta que puede vivir en internet, escalar, ser mantenido y, sobre todo, sobrevivir sin fallos graves. Este m\xf3dulo se encarga de todo eso."}),"\n",(0,o.jsx)(n.h3,{id:"preparaci\xf3n-para-producci\xf3n",children:"Preparaci\xf3n para producci\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"Antes de pensar en subir la app a un servidor, es importante dejarla lista internamente. \xbfQu\xe9 significa esto? B\xe1sicamente, asegurarte de que no est\xe1s subiendo nada innecesario, que tus variables sensibles est\xe1n protegidas, y que tu c\xf3digo no tiene errores no controlados."}),"\n",(0,o.jsxs)(n.p,{children:["Un primer paso esencial es usar archivos ",(0,o.jsx)(n.code,{children:".env"})," correctamente para separar los datos sensibles (como las URLs de conexi\xf3n a la base de datos o claves secretas) del c\xf3digo fuente. Este archivo nunca deber\xeda estar subido al repositorio. Por eso, en tu ",(0,o.jsx)(n.code,{children:".gitignore"}),", debes asegurarte de incluir:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:".env\nnode_modules/\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Tambi\xe9n es buena pr\xe1ctica organizar tu servidor Express en archivos separados: modelos, rutas, controladores, y middlewares. Si tu ",(0,o.jsx)(n.code,{children:"server.js"})," mide m\xe1s de 100 l\xedneas, probablemente est\xe1s haciendo demasiado ah\xed. Piensa siempre en separar responsabilidades."]}),"\n",(0,o.jsx)(n.h3,{id:"desplegar-con-render-railway-o-vercel-sin-complicarte",children:"Desplegar con Render, Railway o Vercel (sin complicarte)"}),"\n",(0,o.jsxs)(n.p,{children:["Hay varias plataformas para desplegar una app Node.js gratis o con bajo coste. Las m\xe1s amigables para principiantes son ",(0,o.jsx)(n.strong,{children:"Render"})," y ",(0,o.jsx)(n.strong,{children:"Railway"}),". No necesitas configurar un servidor desde cero, y el panel de control es visual."]}),"\n",(0,o.jsx)(n.h3,{id:"ejemplo-con-render",children:"Ejemplo con Render:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Crea una cuenta en ",(0,o.jsx)(n.a,{href:"https://render.com/",children:"https://render.com"})]}),"\n",(0,o.jsx)(n.li,{children:"Conecta tu repositorio de GitHub."}),"\n",(0,o.jsxs)(n.li,{children:['Selecciona "Web Service", elige el repositorio y configura:',"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Runtime: Node"}),"\n",(0,o.jsxs)(n.li,{children:["Build command: ",(0,o.jsx)(n.code,{children:"npm install"})]}),"\n",(0,o.jsxs)(n.li,{children:["Start command: ",(0,o.jsx)(n.code,{children:"npm start"})," o ",(0,o.jsx)(n.code,{children:"node server.js"})]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:['En la secci\xf3n de "Environment", a\xf1ade tus variables ',(0,o.jsx)(n.code,{children:".env"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Render construir\xe1 y ejecutar\xe1 tu app en una URL p\xfablica como ",(0,o.jsx)(n.code,{children:"https://midiario.onrender.com"})]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Lo importante aqu\xed es que ",(0,o.jsx)(n.strong,{children:"tu backend est\xe9 preparado para usar el puerto din\xe1mico que Render asigna"}),". As\xed que en ",(0,o.jsx)(n.code,{children:"server.js"}),", deber\xedas tener algo como esto:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"const PORT = process.env.PORT || 3000;\napp.listen(PORT, () => {\n  console.log(`Servidor funcionando en puerto ${PORT}`);\n});\n"})}),"\n",(0,o.jsx)(n.p,{children:"Railway funciona de forma similar, pero tiene una mejor integraci\xf3n con bases de datos como MongoDB o PostgreSQL, lo cual puede ser \xfatil si quieres todo en una misma plataforma."}),"\n",(0,o.jsx)(n.h3,{id:"seguridad-b\xe1sica-en-nodejs",children:"Seguridad b\xe1sica en Node.js"}),"\n",(0,o.jsx)(n.p,{children:"No es necesario complicarse demasiado, pero s\xed aplicar medidas m\xednimas:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Evita imprimir contrase\xf1as o URLs"})," en consola."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Valida y sanitiza los datos"})," del usuario en cada ruta. Librer\xedas como ",(0,o.jsx)(n.code,{children:"express-validator"})," o ",(0,o.jsx)(n.code,{children:"validator"})," son muy recomendables."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Controla errores de forma global"}),", con un middleware que capture todo lo que no se maneje expl\xedcitamente."]}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'app.use((err, req, res, next) => {\n  console.error("Error general:", err);\n  res.status(500).json({ mensaje: "Error interno del servidor" });\n});\n'})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Si usas sesiones o autenticaci\xf3n, aseg\xfarate de usar HTTPS, tokens firmados y librer\xedas actualizadas."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"buenas-pr\xe1cticas-de-estructura-y-mantenimiento",children:"Buenas pr\xe1cticas de estructura y mantenimiento"}),"\n",(0,o.jsx)(n.p,{children:"En proyectos m\xe1s grandes, se recomienda seguir una estructura m\xe1s ordenada como esta:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"src/\n\u251c\u2500\u2500 controllers/\n\u251c\u2500\u2500 models/\n\u251c\u2500\u2500 routes/\n\u251c\u2500\u2500 middlewares/\n\u251c\u2500\u2500 services/\n\u251c\u2500\u2500 utils/\n\u2514\u2500\u2500 index.js\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Esto facilita el mantenimiento, la colaboraci\xf3n en equipo y el testeo. Adem\xe1s, deber\xedas incluir un buen ",(0,o.jsx)(n.code,{children:"README.md"})," donde expliques c\xf3mo levantar la app localmente, qu\xe9 rutas expone, y c\xf3mo conectarse a la base de datos si fuese necesario."]}),"\n",(0,o.jsx)(n.p,{children:"Tambi\xe9n es ideal incluir scripts como:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'"scripts": {\n  "start": "node server.js",\n  "dev": "nodemon server.js"\n}\n\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Y aseg\xfarate de tener siempre actualizado tu archivo ",(0,o.jsx)(n.code,{children:"package.json"})," con solo las dependencias que uses realmente."]}),"\n",(0,o.jsx)(n.h3,{id:"testing-y-monitoreo",children:"Testing y monitoreo"}),"\n",(0,o.jsxs)(n.p,{children:["Aunque no entraremos a fondo en pruebas automatizadas en este curso, es importante que sepas que existen librer\xedas como ",(0,o.jsx)(n.code,{children:"Jest"}),", ",(0,o.jsx)(n.code,{children:"Supertest"})," o ",(0,o.jsx)(n.code,{children:"Mocha"})," para testear tu backend de forma seria."]}),"\n",(0,o.jsxs)(n.p,{children:["Para monitorear errores, puedes usar servicios como ",(0,o.jsx)(n.strong,{children:"LogRocket"}),", ",(0,o.jsx)(n.strong,{children:"Sentry"}),", o simplemente logs bien organizados con ",(0,o.jsx)(n.code,{children:"winston"})," o ",(0,o.jsx)(n.code,{children:"morgan"}),"."]}),"\n",(0,o.jsx)(n.h3,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,o.jsx)(n.p,{children:"Publicar tu proyecto en internet y aplicar estas buenas pr\xe1cticas no solo lo hace m\xe1s profesional, sino tambi\xe9n m\xe1s seguro, estable y f\xe1cil de mantener. Es como terminar de pintar una casa despu\xe9s de construirla: puede estar bien por dentro, pero necesitas que luzca y funcione por fuera tambi\xe9n."}),"\n",(0,o.jsx)(n.p,{children:"Ahora que has llegado hasta aqu\xed, tienes todas las bases necesarias para desarrollar proyectos reales con Node.js, desde un simple diario personal hasta un backend completo para una aplicaci\xf3n moderna. Lo que viene despu\xe9s depende de ti: puedes a\xf1adir autenticaci\xf3n, roles de usuario, almacenamiento en la nube o conectarte con frontend hechos en React, Vue o Svelte."}),"\n",(0,o.jsx)(n.h2,{id:"nueva-secci\xf3n-del-m\xf3dulo-8",children:"NUEVA SECCI\xd3N DEL M\xd3DULO 8"}),"\n",(0,o.jsx)(n.h3,{id:"seguridad-real-login-jwt-bcrypt-y-roles",children:"Seguridad real: Login, JWT, Bcrypt y Roles"}),"\n",(0,o.jsx)(n.h2,{id:"estructura-del-proyecto",children:"Estructura del proyecto"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"auth-api/\n\u251c\u2500\u2500 server.js               # Punto de entrada\n\u251c\u2500\u2500 routes/\n\u2502   \u2514\u2500\u2500 auth.js             # Rutas de login, registro, etc.\n\u251c\u2500\u2500 models/\n\u2502   \u2514\u2500\u2500 Usuario.js          # Modelo de usuario (Mongoose)\n\u251c\u2500\u2500 middleware/\n\u2502   \u2514\u2500\u2500 verificarToken.js   # Middleware de protecci\xf3n JWT\n\u251c\u2500\u2500 .env\n\u251c\u2500\u2500 package.json\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"paso-1-instalaci\xf3n",children:"Paso 1: Instalaci\xf3n"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"npm init -y\nnpm install express mongoose bcrypt jsonwebtoken dotenv\n\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"paso-2-configura-env",children:["Paso 2: Configura ",(0,o.jsx)(n.code,{children:".env"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"PORT=3000\nMONGO_URI=mongodb://localhost:27017/usuariosdb\nJWT_SECRET=CLAVESECRETA123\n\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"paso-3-modelo-usuario",children:["Paso 3: Modelo ",(0,o.jsx)(n.code,{children:"Usuario"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'// models/Usuario.js\nconst mongoose = require("mongoose");\n\nconst UsuarioSchema = new mongoose.Schema(\n  {\n    nombre: { type: String, required: true },\n    correo: { type: String, required: true, unique: true },\n    contrase\xf1a: { type: String, required: true },\n    rol: { type: String, enum: ["user", "admin"], default: "user" },\n  },\n  { timestamps: true }\n);\n\nmodule.exports = mongoose.model("Usuario", UsuarioSchema);\n'})}),"\n",(0,o.jsx)(n.h2,{id:"paso-4-middleware-para-proteger-rutas",children:"Paso 4: Middleware para proteger rutas"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'// middleware/verificarToken.js\nconst jwt = require("jsonwebtoken");\nconst JWT_SECRET = process.env.JWT_SECRET;\n\nfunction verificarToken(req, res, next) {\n  const token = req.headers.authorization?.split(" ")[1];\n  if (!token) return res.status(401).json({ mensaje: "Token requerido" });\n\n  try {\n    const decoded = jwt.verify(token, JWT_SECRET);\n    req.usuario = decoded;\n    next();\n  } catch (err) {\n    res.status(403).json({ mensaje: "Token inv\xe1lido" });\n  }\n}\n\nfunction soloAdmin(req, res, next) {\n  if (req.usuario.rol !== "admin") {\n    return res\n      .status(403)\n      .json({ mensaje: "Solo accesible para administradores" });\n  }\n  next();\n}\n\nmodule.exports = { verificarToken, soloAdmin };\n'})}),"\n",(0,o.jsx)(n.h2,{id:"paso-5-rutas-de-autenticaci\xf3n",children:"Paso 5: Rutas de autenticaci\xf3n"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'// routes/auth.js\nconst express = require("express");\nconst bcrypt = require("bcrypt");\nconst jwt = require("jsonwebtoken");\nconst Usuario = require("../models/Usuario");\nconst { verificarToken, soloAdmin } = require("../middleware/verificarToken");\nconst router = express.Router();\nconst JWT_SECRET = process.env.JWT_SECRET;\n\n// Registro\nrouter.post("/registro", async (req, res) => {\n  const { nombre, correo, contrase\xf1a, rol } = req.body;\n\n  try {\n    const hash = await bcrypt.hash(contrase\xf1a, 10);\n    const nuevoUsuario = new Usuario({ nombre, correo, contrase\xf1a: hash, rol });\n    await nuevoUsuario.save();\n    res.status(201).json({ mensaje: "Usuario creado" });\n  } catch (err) {\n    res.status(500).json({ mensaje: "Error al registrar", error: err.message });\n  }\n});\n\n// Login\nrouter.post("/login", async (req, res) => {\n  const { correo, contrase\xf1a } = req.body;\n\n  try {\n    const usuario = await Usuario.findOne({ correo });\n    if (!usuario)\n      return res.status(404).json({ mensaje: "Usuario no encontrado" });\n\n    const match = await bcrypt.compare(contrase\xf1a, usuario.contrase\xf1a);\n    if (!match)\n      return res.status(401).json({ mensaje: "Contrase\xf1a incorrecta" });\n\n    const token = jwt.sign({ id: usuario._id, rol: usuario.rol }, JWT_SECRET, {\n      expiresIn: "1h",\n    });\n\n    res.json({ mensaje: "Login correcto", token });\n  } catch (err) {\n    res.status(500).json({ mensaje: "Error en login", error: err.message });\n  }\n});\n\n// Ruta protegida\nrouter.get("/usuarios", verificarToken, soloAdmin, async (req, res) => {\n  const usuarios = await Usuario.find();\n  res.json(usuarios);\n});\n\nmodule.exports = router;\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"paso-6-serverjs",children:["Paso 6: ",(0,o.jsx)(n.code,{children:"server.js"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'// server.js\nrequire("dotenv").config();\nconst express = require("express");\nconst mongoose = require("mongoose");\nconst app = express();\nconst authRoutes = require("./routes/auth");\n\napp.use(express.json());\napp.use("/api", authRoutes);\n\nmongoose\n  .connect(process.env.MONGO_URI)\n  .then(() => {\n    console.log("\u2705 Conectado a MongoDB");\n    app.listen(process.env.PORT, () => {\n      console.log(`\ud83d\ude80 Servidor en puerto ${process.env.PORT}`);\n    });\n  })\n  .catch((err) => console.error("\u274c Error Mongo:", err.message));\n'})}),"\n",(0,o.jsx)(n.h2,{id:"pruebas-con-postman",children:"Pruebas con Postman"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"POST /api/registro"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "nombre": "\xd3scar",\n  "correo": "oscar@email.com",\n  "contrase\xf1a": "123456",\n  "rol": "admin"\n}\n'})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"POST /api/login"})}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-json",children:'{\n  "correo": "oscar@email.com",\n  "contrase\xf1a": "123456"\n}\n'})}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.strong,{children:"GET /api/usuarios"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Header: ",(0,o.jsx)(n.code,{children:"Authorization: Bearer TU_TOKEN_AQUI"})]}),"\n",(0,o.jsxs)(n.p,{children:["(Protegida, solo accesible por usuarios ",(0,o.jsx)(n.code,{children:"admin"}),")"]}),"\n",(0,o.jsx)(n.h2,{id:"qu\xe9-has-aprendido-aqu\xed",children:"\xbfQu\xe9 has aprendido aqu\xed?"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Uso real de ",(0,o.jsx)(n.strong,{children:"bcrypt"})," para proteger contrase\xf1as"]}),"\n",(0,o.jsxs)(n.li,{children:["Generaci\xf3n y verificaci\xf3n de ",(0,o.jsx)(n.strong,{children:"tokens JWT"})]}),"\n",(0,o.jsx)(n.li,{children:"Protecci\xf3n de rutas con middleware"}),"\n",(0,o.jsxs)(n.li,{children:["Uso de ",(0,o.jsx)(n.strong,{children:"roles"})," para restringir accesos"]}),"\n",(0,o.jsxs)(n.li,{children:["C\xf3mo dise\xf1ar una ",(0,o.jsx)(n.strong,{children:"API segura local"})]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"-qu\xe9-sigue",children:"\ud83e\udde0 \xbfQu\xe9 sigue?"}),"\n",(0,o.jsxs)(n.p,{children:["En el ",(0,o.jsx)(n.strong,{children:"M\xf3dulo 9"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Documentar esta API con Swagger"}),"\n",(0,o.jsx)(n.li,{children:"A\xf1adir testing con Jest"}),"\n",(0,o.jsx)(n.li,{children:"Mejor manejo de errores y logs"}),"\n",(0,o.jsx)(n.li,{children:"Validaciones con Joi"}),"\n",(0,o.jsx)(n.li,{children:"Crear un sistema completo de usuarios"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>c});var r=s(6540);const o={},a=r.createContext(o);function i(e){const n=r.useContext(a);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(a.Provider,{value:n},e.children)}}}]);