"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[7180],{4518:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"backend/databases/Control_de_cambios_del_esquema","title":"Control de cambios del esquema","description":"26.1. Por qu\xe9 versionar cambios en la base","source":"@site/docs/backend/databases/Control_de_cambios_del_esquema.md","sourceDirName":"backend/databases","slug":"/backend/databases/Control_de_cambios_del_esquema","permalink":"/docuQuest/docs/backend/databases/Control_de_cambios_del_esquema","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/Control_de_cambios_del_esquema.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Capas de acceso a datos","permalink":"/docuQuest/docs/backend/databases/Capas_de_acceso_a_datos"},"next":{"title":"Pruebas de bases de datos","permalink":"/docuQuest/docs/backend/databases/Pruebas_de_bases_de_datos"}}');var i=s(4848),r=s(8453);const o={},c="Control de cambios del esquema",l={},d=[{value:"26.1. Por qu\xe9 versionar cambios en la base",id:"261-por-qu\xe9-versionar-cambios-en-la-base",level:2},{value:"26.2. Qu\xe9 es una migraci\xf3n",id:"262-qu\xe9-es-una-migraci\xf3n",level:2},{value:"26.3. Migraciones ascendentes y descendentes",id:"263-migraciones-ascendentes-y-descendentes",level:2},{value:"26.4. Ejemplo pr\xe1ctico \u2014 a\xf1adir columna",id:"264-ejemplo-pr\xe1ctico--a\xf1adir-columna",level:2},{value:"26.5. Herramientas comunes para migraciones",id:"265-herramientas-comunes-para-migraciones",level:2},{value:"26.6. Migraciones autom\xe1ticas vs manuales",id:"266-migraciones-autom\xe1ticas-vs-manuales",level:2},{value:"26.7. Semillas (seeders) \u2014 poblar datos iniciales",id:"267-semillas-seeders--poblar-datos-iniciales",level:2},{value:"26.8. Data-migrations \u2014 cuando cambia la forma de los datos",id:"268-data-migrations--cuando-cambia-la-forma-de-los-datos",level:2},{value:"26.9. Buenas pr\xe1cticas con migraciones",id:"269-buenas-pr\xe1cticas-con-migraciones",level:2},{value:"26.10. Despliegues seguros con migraciones",id:"2610-despliegues-seguros-con-migraciones",level:2},{value:"26.11. Errores comunes",id:"2611-errores-comunes",level:2}];function t(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"control-de-cambios-del-esquema",children:"Control de cambios del esquema"})}),"\n",(0,i.jsx)(n.h2,{id:"261-por-qu\xe9-versionar-cambios-en-la-base",children:"26.1. Por qu\xe9 versionar cambios en la base"}),"\n",(0,i.jsx)(n.p,{children:"Cuando desarrollas una aplicaci\xf3n moderna:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El c\xf3digo est\xe1 versionado en Git,"}),"\n",(0,i.jsx)(n.li,{children:"El frontend evoluciona con commits y ramas,"}),"\n",(0,i.jsx)(n.li,{children:"Pero la base de datos\u2026 \xbfc\xf3mo controlas su evoluci\xf3n?"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"No puedes depender de \u201ccopiar y pegar scripts SQL a mano\u201d."}),"\n",(0,i.jsx)(n.p,{children:"Si dos desarrolladores hacen cambios en paralelo, sin control:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La base de datos puede quedar inconsistente."}),"\n",(0,i.jsx)(n.li,{children:"Desplegar a producci\xf3n se vuelve riesgoso."}),"\n",(0,i.jsx)(n.li,{children:"No hay forma de \u201cvolver atr\xe1s\u201d si algo sale mal."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Por eso usamos ",(0,i.jsx)(n.strong,{children:"migraciones"}),": scripts ordenados que describen c\xf3mo cambia la base a lo largo del tiempo."]}),"\n",(0,i.jsx)(n.h2,{id:"262-qu\xe9-es-una-migraci\xf3n",children:"26.2. Qu\xe9 es una migraci\xf3n"}),"\n",(0,i.jsxs)(n.p,{children:["Una ",(0,i.jsx)(n.strong,{children:"migraci\xf3n"})," es un archivo que contiene instrucciones para ",(0,i.jsx)(n.strong,{children:"modificar la estructura de la base"})," de forma ",(0,i.jsx)(n.strong,{children:"determin\xedstica y reversible"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo \u2014 crear tabla productos:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- 001_create_productos_up.sql\nCREATE TABLE productos (\n  id SERIAL PRIMARY KEY,\n  nombre VARCHAR(100) NOT NULL,\n  precio NUMERIC(10,2) NOT NULL,\n  creado_en TIMESTAMP DEFAULT NOW()\n);\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Y su reverso:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"-- 001_create_productos_down.sql\nDROP TABLE productos;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Up = aplicar cambios"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Down = revertir cambios"})}),"\n",(0,i.jsx)(n.p,{children:"Con esto puedes:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Crear la tabla en desarrollo, staging y producci\xf3n."}),"\n",(0,i.jsx)(n.li,{children:"Revertir si algo falla."}),"\n",(0,i.jsx)(n.li,{children:"Mantener un historial claro de cambios."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"263-migraciones-ascendentes-y-descendentes",children:"26.3. Migraciones ascendentes y descendentes"}),"\n",(0,i.jsxs)(n.p,{children:["Las migraciones se ",(0,i.jsx)(n.strong,{children:"aplican en orden"})," (ascendentes) o se ",(0,i.jsx)(n.strong,{children:"deshacen"})," (descendentes)."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"001_create_productos.sql\n002_add_stock_column.sql\n003_add_categoria_table.sql\n\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Migrar \u201chacia arriba\u201d \u2192 se aplican en orden 1, 2, 3."}),"\n",(0,i.jsx)(n.li,{children:"Migrar \u201chacia abajo\u201d \u2192 se revierten en orden 3, 2, 1."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Esto permite sincronizar la estructura de la base con cualquier versi\xf3n del c\xf3digo."}),"\n",(0,i.jsx)(n.h2,{id:"264-ejemplo-pr\xe1ctico--a\xf1adir-columna",children:"26.4. Ejemplo pr\xe1ctico \u2014 a\xf1adir columna"}),"\n",(0,i.jsx)(n.p,{children:"Up:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE productos ADD COLUMN stock INT DEFAULT 0;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Down:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE productos DROP COLUMN stock;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Peque\xf1o cambio, pero versionado y reversible."}),"\n",(0,i.jsx)(n.h2,{id:"265-herramientas-comunes-para-migraciones",children:"26.5. Herramientas comunes para migraciones"}),"\n",(0,i.jsx)(n.p,{children:"Dependiendo del stack, hay varias opciones populares:"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Herramienta"}),(0,i.jsx)(n.th,{children:"Lenguaje"}),(0,i.jsx)(n.th,{children:"Descripci\xf3n breve"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Flyway"}),(0,i.jsx)(n.td,{children:"SQL / Java"}),(0,i.jsx)(n.td,{children:"Muy usada en entornos empresariales"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Liquibase"}),(0,i.jsx)(n.td,{children:"SQL / XML / YAML"}),(0,i.jsx)(n.td,{children:"Ideal para equipos grandes"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Knex Migrations"}),(0,i.jsx)(n.td,{children:"JS"}),(0,i.jsx)(n.td,{children:"Muy usada en Node.js"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Prisma Migrate"}),(0,i.jsx)(n.td,{children:"JS/TS"}),(0,i.jsx)(n.td,{children:"ORM + migraciones"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Alembic"}),(0,i.jsx)(n.td,{children:"Python"}),(0,i.jsx)(n.td,{children:"Standard en ecosistemas Flask/FastAPI"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"Django Migrations"}),(0,i.jsx)(n.td,{children:"Python"}),(0,i.jsx)(n.td,{children:"Integrado al framework"})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Todas siguen el mismo patr\xf3n: scripts versionados, ordenados y reversibles."}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo Knex:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"npx knex migrate:make add_stock_column\nnpx knex migrate:latest\nnpx knex migrate:rollback\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"266-migraciones-autom\xe1ticas-vs-manuales",children:"26.6. Migraciones autom\xe1ticas vs manuales"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Manuales"})," \u2192 t\xfa escribes las instrucciones SQL a mano (m\xe1ximo control)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Autom\xe1ticas"})," \u2192 la herramienta las genera a partir de cambios en modelos (r\xe1pido, pero puede ser menos preciso)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Recomendaci\xf3n pr\xe1ctica:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usa autom\xe1ticas para cambios sencillos (agregar columnas, \xedndices)."}),"\n",(0,i.jsx)(n.li,{children:"Usa manuales para operaciones delicadas (mover datos, refactorizar claves, etc.)."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"267-semillas-seeders--poblar-datos-iniciales",children:"26.7. Semillas (seeders) \u2014 poblar datos iniciales"}),"\n",(0,i.jsx)(n.p,{children:"Adem\xe1s de migrar estructura, muchas apps necesitan:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usuarios iniciales,"}),"\n",(0,i.jsx)(n.li,{children:"Configuraciones por defecto,"}),"\n",(0,i.jsx)(n.li,{children:"Cat\xe1logos b\xe1sicos (pa\xedses, roles, categor\xedas\u2026)."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Para eso usamos ",(0,i.jsx)(n.strong,{children:"semillas"})," (seed data)."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo en SQL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"INSERT INTO roles (nombre) VALUES ('admin'), ('editor'), ('lector');\nINSERT INTO categorias (nombre) VALUES ('Electr\xf3nica'), ('Ropa'), ('Libros');\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo con Knex:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'exports.seed = async function (knex) {\n  await knex("roles").insert([\n    { nombre: "admin" },\n    { nombre: "editor" },\n    { nombre: "lector" },\n  ]);\n};\n'})}),"\n",(0,i.jsx)(n.p,{children:"Esto se ejecuta despu\xe9s de las migraciones iniciales, garantizando que la BD arranca con datos m\xednimos funcionales."}),"\n",(0,i.jsx)(n.h2,{id:"268-data-migrations--cuando-cambia-la-forma-de-los-datos",children:"26.8. Data-migrations \u2014 cuando cambia la forma de los datos"}),"\n",(0,i.jsx)(n.p,{children:"No todos los cambios son estructurales."}),"\n",(0,i.jsxs)(n.p,{children:["A veces debes ",(0,i.jsx)(n.strong,{children:"modificar el contenido existente"})," porque cambi\xf3 el modelo l\xf3gico."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Antes: ",(0,i.jsx)(n.code,{children:"nombre_completo"})," en un solo campo."]}),"\n",(0,i.jsxs)(n.li,{children:["Ahora: ",(0,i.jsx)(n.code,{children:"nombre"})," y ",(0,i.jsx)(n.code,{children:"apellido"})," separados."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Up:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE usuarios ADD COLUMN nombre TEXT;\nALTER TABLE usuarios ADD COLUMN apellido TEXT;\n\nUPDATE usuarios\nSET nombre = split_part(nombre_completo, ' ', 1),\n    apellido = split_part(nombre_completo, ' ', 2);\n\nALTER TABLE usuarios DROP COLUMN nombre_completo;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Down:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE usuarios ADD COLUMN nombre_completo TEXT;\nUPDATE usuarios\nSET nombre_completo = nombre || ' ' || apellido;\nALTER TABLE usuarios DROP COLUMN nombre;\nALTER TABLE usuarios DROP COLUMN apellido;\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Esto es una ",(0,i.jsx)(n.strong,{children:"data-migration"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cambia estructura + contenido."}),"\n",(0,i.jsx)(n.li,{children:"Debe ser tratada como una migraci\xf3n normal, versionada y reversible."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"269-buenas-pr\xe1cticas-con-migraciones",children:"26.9. Buenas pr\xe1cticas con migraciones"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Una migraci\xf3n debe ser ",(0,i.jsx)(n.strong,{children:"at\xf3mica"}),": hace un cambio l\xf3gico y nada m\xe1s."]}),"\n",(0,i.jsxs)(n.li,{children:["Usa nombres claros: ",(0,i.jsx)(n.code,{children:"001_add_stock_column.sql"}),", no ",(0,i.jsx)(n.code,{children:"mig1.sql"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Aseg\xfarate de que ",(0,i.jsx)(n.strong,{children:"todas las migraciones funcionan en orden limpio"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Mant\xe9n up y down sincronizados."}),"\n",(0,i.jsx)(n.li,{children:"Documenta por qu\xe9 se hizo cada cambio."}),"\n",(0,i.jsx)(n.li,{children:"Usa control de versiones (Git) para todo el historial."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2610-despliegues-seguros-con-migraciones",children:"26.10. Despliegues seguros con migraciones"}),"\n",(0,i.jsx)(n.p,{children:"En entornos reales:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Se ejecutan migraciones en staging antes que en producci\xf3n."}),"\n",(0,i.jsx)(n.li,{children:"Se automatizan con CI/CD."}),"\n",(0,i.jsx)(n.li,{children:"Se hacen backups previos si son cambios cr\xedticos."}),"\n",(0,i.jsx)(n.li,{children:"Se monitorean tiempos de ejecuci\xf3n para no bloquear la base."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo de pipeline t\xedpico:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git push main\n\u2192 CI corre tests\n\u2192 CI aplica migraciones\n\u2192 Despliegue en staging\n\u2192 QA\n\u2192 Despliegue en producci\xf3n\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"2611-errores-comunes",children:"26.11. Errores comunes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Editar directamente la base de datos \u201ca mano\u201d en producci\xf3n"}),"\n",(0,i.jsx)(n.li,{children:"No escribir migraciones de reversi\xf3n (down)."}),"\n",(0,i.jsx)(n.li,{children:"Hacer migraciones gigantes que mezclan 10 cambios distintos."}),"\n",(0,i.jsx)(n.li,{children:"No poblar datos iniciales con seeders \u2192 sistemas vac\xedos que fallan."}),"\n",(0,i.jsx)(n.li,{children:"No versionar migraciones \u2192 caos entre entornos."}),"\n",(0,i.jsx)(n.li,{children:"Confiar en migraciones autom\xe1ticas sin revisarlas."}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var a=s(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);