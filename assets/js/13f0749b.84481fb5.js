"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[4457],{6512:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"backend/databases/Modulo35_Caches_y_colas","title":"Modulo 35. Cach\xe9s y colas","description":"\ud83e\udded 35.1. El cuello de botella de la base de datos","source":"@site/docs/backend/databases/Modulo35_Caches_y_colas.md","sourceDirName":"backend/databases","slug":"/backend/databases/Modulo35_Caches_y_colas","permalink":"/docuQuest/docs/backend/databases/Modulo35_Caches_y_colas","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/Modulo35_Caches_y_colas.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Modulo 34. Replicaci\xf3n y lectura pesada","permalink":"/docuQuest/docs/backend/databases/Modulo34_Replicacion_y_lectura_pesada"},"next":{"title":"Modulo 36. Documentar para el futuro","permalink":"/docuQuest/docs/backend/databases/Modulo36_Documentar_para_el_futuro"}}');var i=s(4848),c=s(8453);const l={},o="Modulo 35. Cach\xe9s y colas",r={},d=[{value:"\ud83e\udded 35.1. El cuello de botella de la base de datos",id:"-351-el-cuello-de-botella-de-la-base-de-datos",level:2},{value:"\ud83e\udde0 35.2. Qu\xe9 es la cach\xe9 en este contexto",id:"-352-qu\xe9-es-la-cach\xe9-en-este-contexto",level:2},{value:"\ud83e\udded 35.3. Tipos de cach\xe9 m\xe1s comunes",id:"-353-tipos-de-cach\xe9-m\xe1s-comunes",level:2},{value:"\ud83e\udde0 35.4. Ejemplo b\xe1sico con Redis (cach\xe9 compartida)",id:"-354-ejemplo-b\xe1sico-con-redis-cach\xe9-compartida",level:2},{value:"\ud83e\udded 35.5. TTL y expiraci\xf3n: equilibrio entre velocidad y coherencia",id:"-355-ttl-y-expiraci\xf3n-equilibrio-entre-velocidad-y-coherencia",level:2},{value:"\ud83e\udde0 35.6. Estrategias de invalidaci\xf3n",id:"-356-estrategias-de-invalidaci\xf3n",level:2},{value:"\ud83e\udded 35.7. Cach\xe9s mal dise\xf1adas = incoherencias silenciosas \u26a0\ufe0f",id:"-357-cach\xe9s-mal-dise\xf1adas--incoherencias-silenciosas-\ufe0f",level:2},{value:"\ud83e\udde0 35.8. Cu\xe1ndo <strong>s\xed</strong> conviene cachear",id:"-358-cu\xe1ndo-s\xed-conviene-cachear",level:2},{value:"\ud83e\udded 35.9. Colas: aliviar carga <strong>diferida</strong>",id:"-359-colas-aliviar-carga-diferida",level:2},{value:"\ud83e\udde0 35.10. Ejemplo sencillo de cola (RabbitMQ / Redis)",id:"-3510-ejemplo-sencillo-de-cola-rabbitmq--redis",level:2},{value:"\ud83e\udded 35.11. Beneficios de usar colas",id:"-3511-beneficios-de-usar-colas",level:2},{value:"\ud83e\udde0 35.12. Riesgos si no se dise\xf1an bien",id:"-3512-riesgos-si-no-se-dise\xf1an-bien",level:2},{value:"\ud83e\udded 35.13. Cach\xe9 + colas: un combo poderoso",id:"-3513-cach\xe9--colas-un-combo-poderoso",level:2},{value:"\ud83e\udde0 35.14. Buenas pr\xe1cticas para cach\xe9s y colas",id:"-3514-buenas-pr\xe1cticas-para-cach\xe9s-y-colas",level:2},{value:"\ud83d\udea8 35.15. Errores comunes",id:"-3515-errores-comunes",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"modulo-35-cach\xe9s-y-colas",children:"Modulo 35. Cach\xe9s y colas"})}),"\n",(0,i.jsx)(n.h2,{id:"-351-el-cuello-de-botella-de-la-base-de-datos",children:"\ud83e\udded 35.1. El cuello de botella de la base de datos"}),"\n",(0,i.jsxs)(n.p,{children:["En sistemas grandes, ",(0,i.jsx)(n.strong,{children:"el 80\u201390 % del tr\xe1fico son lecturas repetitivas"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Consultas para dashboards,"}),"\n",(0,i.jsx)(n.li,{children:"Contadores de vistas,"}),"\n",(0,i.jsx)(n.li,{children:"Detalles de productos,"}),"\n",(0,i.jsx)(n.li,{children:"Informaci\xf3n que cambia poco o nada."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Si todas esas lecturas golpean directamente al primario o a las r\xe9plicas \u2192 te comes el rendimiento y subes costos."}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Ah\xed entra ",(0,i.jsx)(n.strong,{children:"la cach\xe9"}),": guardar respuestas calculadas para no repetir consultas innecesarias."]}),"\n",(0,i.jsx)(n.h2,{id:"-352-qu\xe9-es-la-cach\xe9-en-este-contexto",children:"\ud83e\udde0 35.2. Qu\xe9 es la cach\xe9 en este contexto"}),"\n",(0,i.jsxs)(n.p,{children:["La ",(0,i.jsx)(n.strong,{children:"cach\xe9"})," es una ",(0,i.jsx)(n.strong,{children:"copia temporal"})," de datos que ya fueron consultados o calculados."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Consulta a BD: producto 123 \u2192 tarda 80 ms\nCach\xe9: producto 123 \u2192 tarda 2 ms\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Si 10 000 usuarios piden lo mismo, lo resuelves una sola vez en la base\u2026"}),"\n",(0,i.jsx)(n.p,{children:"y 9 999 veces desde cach\xe9."}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Esto alivia carga, mejora tiempos de respuesta y abarata recursos."}),"\n",(0,i.jsx)(n.h2,{id:"-353-tipos-de-cach\xe9-m\xe1s-comunes",children:"\ud83e\udded 35.3. Tipos de cach\xe9 m\xe1s comunes"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cach\xe9 en memoria de la aplicaci\xf3n"})," (in-memory)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Guardar resultados directamente en RAM de cada instancia."}),"\n",(0,i.jsx)(n.li,{children:"R\xe1pida, pero local a un servidor."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cach\xe9 compartida (centralizada)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Redis, Memcached u otros."}),"\n",(0,i.jsx)(n.li,{children:"Accesible desde varias instancias."}),"\n",(0,i.jsx)(n.li,{children:"Ideal para escalabilidad horizontal."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Cach\xe9 en base de datos"})," (materialized views, summary tables\u2026)","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ya lo vimos en el M\xf3dulo 29."}),"\n",(0,i.jsx)(n.li,{children:"Menos flexible, pero estable y transaccional."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-354-ejemplo-b\xe1sico-con-redis-cach\xe9-compartida",children:"\ud83e\udde0 35.4. Ejemplo b\xe1sico con Redis (cach\xe9 compartida)"}),"\n",(0,i.jsx)(n.p,{children:"Supongamos una API que consulta productos:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"async function getProducto(id) {\n  const cacheKey = `producto:${id}`;\n  const cacheValue = await redis.get(cacheKey);\n\n  if (cacheValue) {\n    return JSON.parse(cacheValue); // \u26a1 lectura desde cach\xe9\n  }\n\n  const result = await db.query('SELECT * FROM producto WHERE id = $1', [id]);\n  const producto = result.rows[0];\n\n  await redis.set(cacheKey, JSON.stringify(producto), 'EX', 60); // TTL 60s\n  return producto;\n}\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 La primera consulta va a la base."}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Las siguientes van a Redis durante 60 segundos."}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Esto ",(0,i.jsx)(n.strong,{children:"reduce tr\xe1fico innecesario"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"-355-ttl-y-expiraci\xf3n-equilibrio-entre-velocidad-y-coherencia",children:"\ud83e\udded 35.5. TTL y expiraci\xf3n: equilibrio entre velocidad y coherencia"}),"\n",(0,i.jsxs)(n.p,{children:["La cach\xe9 ",(0,i.jsx)(n.strong,{children:"no es m\xe1gica"}),". Si los datos cambian en la base, la cach\xe9 puede quedar desactualizada."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usuario cambia el precio de un producto."}),"\n",(0,i.jsx)(n.li,{children:"Redis sigue sirviendo el precio viejo durante 60 segundos."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Para controlar esto:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"TTL (time to live) \u2192 define cu\xe1nto tiempo vive una entrada en cach\xe9."}),"\n",(0,i.jsx)(n.li,{children:"Invalidaci\xf3n \u2192 borrar o actualizar la entrada en cach\xe9 cuando cambia en la base."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo de invalidaci\xf3n al actualizar:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"await db.query('UPDATE producto SET precio = $1 WHERE id = $2', [nuevoPrecio, id]);\nawait redis.del(`producto:${id}`);\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 As\xed, la pr\xf3xima lectura se actualizar\xe1 autom\xe1ticamente."}),"\n",(0,i.jsx)(n.h2,{id:"-356-estrategias-de-invalidaci\xf3n",children:"\ud83e\udde0 35.6. Estrategias de invalidaci\xf3n"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Time-based (TTL)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Simple y f\xe1cil de implementar."}),"\n",(0,i.jsx)(n.li,{children:"Buena si los datos cambian poco."}),"\n",(0,i.jsx)(n.li,{children:"Riesgo: servir datos viejos temporalmente."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write-through"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Actualizas base y cach\xe9 ",(0,i.jsx)(n.strong,{children:"en la misma operaci\xf3n"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Asegura sincron\xeda, pero es m\xe1s costoso."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Write-behind"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Escribes primero en cach\xe9 y luego en la base (peligroso si no se dise\xf1a bien)."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Explicit invalidation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Borras o actualizas cach\xe9 cuando hay un cambio."}),"\n",(0,i.jsx)(n.li,{children:"Es m\xe1s predecible y confiable en la pr\xe1ctica."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc ",(0,i.jsx)(n.strong,{children:"Regla de oro:"})," la invalidaci\xf3n de cach\xe9 es m\xe1s importante que la cach\xe9 en s\xed."]}),"\n",(0,i.jsx)(n.h2,{id:"-357-cach\xe9s-mal-dise\xf1adas--incoherencias-silenciosas-\ufe0f",children:"\ud83e\udded 35.7. Cach\xe9s mal dise\xf1adas = incoherencias silenciosas \u26a0\ufe0f"}),"\n",(0,i.jsx)(n.p,{children:"Si no se invalida bien la cach\xe9:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El usuario puede ver datos viejos,"}),"\n",(0,i.jsx)(n.li,{children:"Informes pueden usar valores desactualizados,"}),"\n",(0,i.jsx)(n.li,{children:"Se pueden tomar decisiones de negocio con informaci\xf3n err\xf3nea."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo cl\xe1sico:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Un carrito de compras guarda stock en cach\xe9."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Dos usuarios compran el \xfaltimo \xedtem al mismo tiempo."}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Resultado: ",(0,i.jsx)(n.strong,{children:"overselling"}),"."]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc Por eso ",(0,i.jsx)(n.strong,{children:"no todos los datos deben cachearse"}),", especialmente si cambian r\xe1pido o tienen implicaciones transaccionales."]}),"\n",(0,i.jsxs)(n.h2,{id:"-358-cu\xe1ndo-s\xed-conviene-cachear",children:["\ud83e\udde0 35.8. Cu\xe1ndo ",(0,i.jsx)(n.strong,{children:"s\xed"})," conviene cachear"]}),"\n",(0,i.jsx)(n.p,{children:"\u2705 Ideal para:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cat\xe1logos de productos o servicios."}),"\n",(0,i.jsx)(n.li,{children:"Datos p\xfablicos o semi-est\xe1ticos (precios, textos, configuraci\xf3n)."}),"\n",(0,i.jsx)(n.li,{children:"Reportes precomputados."}),"\n",(0,i.jsx)(n.li,{children:"Resultados de consultas costosas que no cambian constantemente."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u274c No recomendable para:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Stocks en tiempo real."}),"\n",(0,i.jsx)(n.li,{children:"Saldos financieros."}),"\n",(0,i.jsx)(n.li,{children:"Datos cr\xedticos que deben estar siempre sincronizados."}),"\n",(0,i.jsx)(n.li,{children:"Transacciones en curso."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Cachea inteligentemente, no todo."}),"\n",(0,i.jsxs)(n.h2,{id:"-359-colas-aliviar-carga-diferida",children:["\ud83e\udded 35.9. Colas: aliviar carga ",(0,i.jsx)(n.strong,{children:"diferida"})]}),"\n",(0,i.jsxs)(n.p,{children:["A diferencia de la cach\xe9, las ",(0,i.jsx)(n.strong,{children:"colas no evitan lecturas"}),", sino que ",(0,i.jsx)(n.strong,{children:"desacoplan operaciones"})," que no necesitan hacerse al instante."]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Ejemplo:"}),"\n",(0,i.jsx)(n.p,{children:"Cuando un usuario hace una compra:"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Se guarda el pedido en la base (r\xe1pido)."}),"\n",(0,i.jsx)(n.li,{children:"Se encola un evento \u201cenviar email de confirmaci\xf3n\u201d."}),"\n",(0,i.jsx)(n.li,{children:"Un proceso en segundo plano procesa esa cola y env\xeda el correo."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc As\xed evitas sobrecargar la base o el servidor web en el momento cr\xedtico de la transacci\xf3n."}),"\n",(0,i.jsx)(n.h2,{id:"-3510-ejemplo-sencillo-de-cola-rabbitmq--redis",children:"\ud83e\udde0 35.10. Ejemplo sencillo de cola (RabbitMQ / Redis)"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"// productService.js\nawait db.query('INSERT INTO pedidos (...) VALUES (...)');\nawait queue.send('emails', { pedidoId });\n\n// worker.js\nqueue.consume('emails', async (msg) => {\n  const { pedidoId } = msg;\n  const pedido = await db.query('SELECT * FROM pedidos WHERE id = $1', [pedidoId]);\n  await enviarCorreo(pedido);\n});\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 El sistema no espera a que se env\xede el email para responder al usuario."}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udc49 Esto mejora ",(0,i.jsx)(n.strong,{children:"tiempos de respuesta"})," y ",(0,i.jsx)(n.strong,{children:"robustez"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"-3511-beneficios-de-usar-colas",children:"\ud83e\udded 35.11. Beneficios de usar colas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u2705 Evitas bloquear operaciones cr\xedticas con tareas lentas."}),"\n",(0,i.jsx)(n.li,{children:"\ud83d\udcca Controlas picos de carga (las colas absorben \u201colas\u201d de trabajo)."}),"\n",(0,i.jsx)(n.li,{children:"\ud83e\uddf0 Puedes reintentar operaciones fallidas."}),"\n",(0,i.jsx)(n.li,{children:"\ud83e\udde0 A\xedslas componentes: la base hace lo suyo, el worker hace lo suyo."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udccc Muy com\xfan en:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Env\xedo de correos,"}),"\n",(0,i.jsx)(n.li,{children:"Generaci\xf3n de reportes pesados,"}),"\n",(0,i.jsx)(n.li,{children:"Sincronizaciones con sistemas externos,"}),"\n",(0,i.jsx)(n.li,{children:"Notificaciones en segundo plano."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-3512-riesgos-si-no-se-dise\xf1an-bien",children:"\ud83e\udde0 35.12. Riesgos si no se dise\xf1an bien"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si la cola falla \u2192 tareas pendientes se pierden."}),"\n",(0,i.jsx)(n.li,{children:"Si no hay idempotencia \u2192 tareas duplicadas pueden generar inconsistencias."}),"\n",(0,i.jsx)(n.li,{children:"Si no se monitorea \u2192 la cola se llena silenciosamente y todo se frena."}),"\n",(0,i.jsx)(n.li,{children:"Si la l\xf3gica de negocio depende del worker para mantener coherencia \u2192 mala arquitectura."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\ud83d\udccc Una cola no debe contener ",(0,i.jsx)(n.strong,{children:"operaciones cr\xedticas sin fallback"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"-3513-cach\xe9--colas-un-combo-poderoso",children:"\ud83e\udded 35.13. Cach\xe9 + colas: un combo poderoso"}),"\n",(0,i.jsx)(n.p,{children:"Muchos sistemas modernos combinan ambos:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\ud83d\udce6 Cach\xe9 \u2192 reduce lecturas innecesarias."}),"\n",(0,i.jsx)(n.li,{children:"\ud83d\udce8 Colas \u2192 diferencian operaciones no urgentes."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo real:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usuario actualiza su perfil."}),"\n",(0,i.jsx)(n.li,{children:"Se invalida la cach\xe9 para que la app sirva los datos nuevos."}),"\n",(0,i.jsx)(n.li,{children:"Se encola una tarea para sincronizar ese cambio con otro sistema (por ejemplo, CRM)."}),"\n",(0,i.jsx)(n.li,{children:"La respuesta al usuario es inmediata."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\ud83d\udc49 Esto mejora rendimiento y resiliencia sin sacrificar coherencia cr\xedtica."}),"\n",(0,i.jsx)(n.h2,{id:"-3514-buenas-pr\xe1cticas-para-cach\xe9s-y-colas",children:"\ud83e\udde0 35.14. Buenas pr\xe1cticas para cach\xe9s y colas"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cachea solo lo que tiene sentido cachear."}),"\n",(0,i.jsx)(n.li,{children:"Define pol\xedticas claras de invalidaci\xf3n."}),"\n",(0,i.jsx)(n.li,{children:"Usa TTL razonables."}),"\n",(0,i.jsx)(n.li,{children:"Dise\xf1a colas para absorber carga, no para guardar l\xf3gica cr\xedtica."}),"\n",(0,i.jsx)(n.li,{children:"Haz que las tareas encoladas sean idempotentes."}),"\n",(0,i.jsx)(n.li,{children:"Monitorea m\xe9tricas: hit ratio en cach\xe9, tama\xf1o de la cola, tiempos de procesamiento."}),"\n",(0,i.jsx)(n.li,{children:"Documenta claramente qu\xe9 parte del sistema depende de qu\xe9."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"-3515-errores-comunes",children:"\ud83d\udea8 35.15. Errores comunes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Cachear datos que cambian r\xe1pido \u2192 incoherencias visibles."}),"\n",(0,i.jsx)(n.li,{children:"No invalidar cach\xe9s correctamente \u2192 bugs dif\xedciles de reproducir."}),"\n",(0,i.jsx)(n.li,{children:"Tratar la cola como base de datos persistente."}),"\n",(0,i.jsx)(n.li,{children:"No dise\xf1ar reintentos ni idempotencia."}),"\n",(0,i.jsx)(n.li,{children:"No monitorear \u2192 cuellos de botella invisibles."}),"\n",(0,i.jsx)(n.li,{children:"Asumir que \u201ccach\xe9 + colas = escalabilidad m\xe1gica\u201d."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var a=s(6540);const i={},c=a.createContext(i);function l(e){const n=a.useContext(c);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),a.createElement(c.Provider,{value:n},e.children)}}}]);