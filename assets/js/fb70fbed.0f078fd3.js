"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[6581],{2112:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>d,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"backend/Node.js/modulosGestionDependenciasNPM","title":"M\xf3dulos y gesti\xf3n de dependencias con NPM","description":"\xbfQu\xe9 es un m\xf3dulo en Node.js?","source":"@site/docs/backend/Node.js/modulosGestionDependenciasNPM.md","sourceDirName":"backend/Node.js","slug":"/backend/Node.js/modulosGestionDependenciasNPM","permalink":"/docuQuest/docs/backend/Node.js/modulosGestionDependenciasNPM","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/Node.js/modulosGestionDependenciasNPM.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentos de Node.js","permalink":"/docuQuest/docs/backend/Node.js/introduction"},"next":{"title":"Fundamentos de asincron\xeda en Node.js","permalink":"/docuQuest/docs/backend/Node.js/asincronia"}}');var s=o(4848),r=o(8453);const d={},i="M\xf3dulos y gesti\xf3n de dependencias con NPM",c={},l=[{value:"\xbfQu\xe9 es un m\xf3dulo en Node.js?",id:"qu\xe9-es-un-m\xf3dulo-en-nodejs",level:2},{value:"\xbfQu\xe9 es NPM y para qu\xe9 sirve?",id:"qu\xe9-es-npm-y-para-qu\xe9-sirve",level:2},{value:"Explorando el archivo package.json",id:"explorando-el-archivo-packagejson",level:2},{value:"Creando tus propios m\xf3dulos reutilizables",id:"creando-tus-propios-m\xf3dulos-reutilizables",level:2},{value:"\xbfQu\xe9 diferencia hay entre dependencias normales y de desarrollo?",id:"qu\xe9-diferencia-hay-entre-dependencias-normales-y-de-desarrollo",level:2},{value:"Proyecto pr\xe1ctico: Generador de notas con formato de colores",id:"proyecto-pr\xe1ctico-generador-de-notas-con-formato-de-colores",level:2},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"m\xf3dulos-y-gesti\xf3n-de-dependencias-con-npm",children:"M\xf3dulos y gesti\xf3n de dependencias con NPM"})}),"\n",(0,s.jsx)(n.h2,{id:"qu\xe9-es-un-m\xf3dulo-en-nodejs",children:"\xbfQu\xe9 es un m\xf3dulo en Node.js?"}),"\n",(0,s.jsx)(n.p,{children:"Cuando programas en Node.js, lo m\xe1s habitual no es escribir todo el c\xf3digo en un \xfanico archivo. A medida que los proyectos crecen, dividir tu l\xf3gica en partes reutilizables se vuelve imprescindible. A eso lo llamamos \u201cmodularizar\u201d. Node.js te permite trabajar f\xe1cilmente con m\xf3dulos, que no son m\xe1s que archivos de JavaScript que exportan y reutilizan funcionalidades."}),"\n",(0,s.jsxs)(n.p,{children:["Desde el principio, Node ha ofrecido soporte para m\xf3dulos mediante el sistema ",(0,s.jsx)(n.strong,{children:"CommonJS"}),", el cual usa funciones como ",(0,s.jsx)(n.code,{children:"require()"})," para importar y ",(0,s.jsx)(n.code,{children:"module.exports"})," para exportar. Si vienes de JavaScript moderno en el navegador, probablemente est\xe9s m\xe1s familiarizado con ",(0,s.jsx)(n.code,{children:"import"})," y ",(0,s.jsx)(n.code,{children:"export"}),". Node ahora tambi\xe9n soporta ",(0,s.jsx)(n.strong,{children:"ESModules"}),", aunque no por defecto en todos los casos, as\xed que por ahora, nos centraremos en la forma tradicional."]}),"\n",(0,s.jsxs)(n.p,{children:["Imagina que tienes un archivo llamado ",(0,s.jsx)(n.code,{children:"saludos.js"})," con una funci\xf3n para saludar:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// saludos.js\nfunction saludar(nombre) {\n  return `Hola, ${nombre}`;\n}\n\nmodule.exports = saludar;\n"})}),"\n",(0,s.jsx)(n.p,{children:"Ahora puedes reutilizarla desde otro archivo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'// app.js\nconst saludar = require("./saludos");\nconsole.log(saludar("Laura"));\n'})}),"\n",(0,s.jsx)(n.p,{children:"Este peque\xf1o paso te permite organizar tu c\xf3digo por funcionalidades y reutilizarlo sin copiar y pegar."}),"\n",(0,s.jsx)(n.h2,{id:"qu\xe9-es-npm-y-para-qu\xe9-sirve",children:"\xbfQu\xe9 es NPM y para qu\xe9 sirve?"}),"\n",(0,s.jsxs)(n.p,{children:["NPM es el ",(0,s.jsx)(n.strong,{children:"gestor de paquetes de Node.js"}),". Piensa en \xe9l como una biblioteca gigante donde otros desarrolladores han publicado funciones y herramientas que t\xfa puedes instalar y usar en tus proyectos. Si alguna vez has querido enviar un correo, generar PDFs, crear un servidor web o conectarte a una base de datos, probablemente exista un paquete en NPM que ya lo hace por ti."]}),"\n",(0,s.jsx)(n.p,{children:"Para comenzar a usar NPM en un proyecto, solo necesitas inicializarlo ejecutando este comando en la ra\xedz del directorio:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm init -y\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Esto crea un archivo ",(0,s.jsx)(n.code,{children:"package.json"}),", que act\xfaa como el \u201ccarnet de identidad\u201d de tu proyecto. All\xed se registran las dependencias, scripts y metadatos como el nombre o la versi\xf3n del proyecto."]}),"\n",(0,s.jsxs)(n.p,{children:["Por ejemplo, si quieres instalar una biblioteca como ",(0,s.jsx)(n.code,{children:"chalk"}),", que sirve para colorear textos en la terminal, puedes hacer esto:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install chalk\n"})}),"\n",(0,s.jsx)(n.p,{children:"Y luego usarla en tu archivo:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'const chalk = require("chalk");\nconsole.log(chalk.green("Texto en verde"));\n'})}),"\n",(0,s.jsx)(n.p,{children:"Esto convierte una simple l\xednea de texto en algo m\xe1s visual y agradable. Muy \xfatil para herramientas de consola."}),"\n",(0,s.jsx)(n.h2,{id:"explorando-el-archivo-packagejson",children:"Explorando el archivo package.json"}),"\n",(0,s.jsxs)(n.p,{children:["El ",(0,s.jsx)(n.code,{children:"package.json"}),' no solo lista los paquetes que usas, tambi\xe9n permite definir scripts personalizados para automatizar tareas. Por ejemplo, puedes a\xf1adir un script llamado "iniciar" que ejecute tu app principal:']}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'"scripts": {\n  "iniciar": "node app.js"\n}\n\n'})}),"\n",(0,s.jsx)(n.p,{children:"Luego, desde la terminal, puedes ejecutar:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm run iniciar\n"})}),"\n",(0,s.jsx)(n.p,{children:"Tambi\xe9n puedes definir scripts para pruebas, compilaciones, formateo de c\xf3digo, entre otros. Este archivo es esencial para mantener organizado tu entorno, sobre todo cuando trabajas en equipo."}),"\n",(0,s.jsx)(n.h2,{id:"creando-tus-propios-m\xf3dulos-reutilizables",children:"Creando tus propios m\xf3dulos reutilizables"}),"\n",(0,s.jsx)(n.p,{children:"No todo en NPM tiene que venir de fuera. Muchas veces, t\xfa mismo puedes crear tus propios m\xf3dulos locales para organizar tu c\xf3digo o compartirlo con otros proyectos."}),"\n",(0,s.jsxs)(n.p,{children:["Por ejemplo, supongamos que est\xe1s construyendo una peque\xf1a app de notas. Puedes crear un m\xf3dulo ",(0,s.jsx)(n.code,{children:"notas.js"})," que gestione las funciones principales:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"// notas.js\nfunction crearNota(titulo, contenido) {\n  return {\n    titulo,\n    contenido,\n    fecha: new Date().toISOString(),\n  };\n}\n\nmodule.exports = { crearNota };\n"})}),"\n",(0,s.jsx)(n.p,{children:"Y luego usarlo desde tu archivo principal:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'const { crearNota } = require("./notas");\nconst miNota = crearNota("Recordatorio", "Estudiar Node.js");\nconsole.log(miNota);\n'})}),"\n",(0,s.jsx)(n.p,{children:"Al dividir el c\xf3digo de esta forma, no solo lo haces m\xe1s limpio y legible, tambi\xe9n te facilitas mucho el mantenimiento a largo plazo."}),"\n",(0,s.jsx)(n.h2,{id:"qu\xe9-diferencia-hay-entre-dependencias-normales-y-de-desarrollo",children:"\xbfQu\xe9 diferencia hay entre dependencias normales y de desarrollo?"}),"\n",(0,s.jsxs)(n.p,{children:["Cuando instalas paquetes con NPM, puedes diferenciarlos en dos grupos. Por un lado, est\xe1n las ",(0,s.jsx)(n.strong,{children:"dependencias normales"}),", que tu app necesita para funcionar en producci\xf3n. Por otro, est\xe1n las ",(0,s.jsx)(n.strong,{children:"dependencias de desarrollo"}),", como herramientas para pruebas, formateo de c\xf3digo o compiladores."]}),"\n",(0,s.jsxs)(n.p,{children:["Para instalar una dependencia de desarrollo, simplemente agregas la bandera ",(0,s.jsx)(n.code,{children:"--save-dev"})," o ",(0,s.jsx)(n.code,{children:"-D"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install nodemon --save-dev\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Esto hace que el paquete se registre en la secci\xf3n ",(0,s.jsx)(n.code,{children:"devDependencies"})," del ",(0,s.jsx)(n.code,{children:"package.json"}),". As\xed, si despliegas tu proyecto en producci\xf3n, esos paquetes no se instalan si no son necesarios."]}),"\n",(0,s.jsx)(n.h2,{id:"proyecto-pr\xe1ctico-generador-de-notas-con-formato-de-colores",children:"Proyecto pr\xe1ctico: Generador de notas con formato de colores"}),"\n",(0,s.jsx)(n.p,{children:"Vamos a cerrar este m\xf3dulo con un proyecto sencillo que combine todo lo que hemos aprendido hasta ahora."}),"\n",(0,s.jsx)(n.p,{children:"La idea es crear un generador de notas desde consola que reciba un t\xedtulo y un contenido, y que devuelva la nota con colores."}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Crea una carpeta ",(0,s.jsx)(n.code,{children:"proyecto-notas/"})]}),"\n",(0,s.jsxs)(n.li,{children:["Ejecuta ",(0,s.jsx)(n.code,{children:"npm init -y"})]}),"\n",(0,s.jsxs)(n.li,{children:["Instala ",(0,s.jsx)(n.code,{children:"chalk"})," para los colores:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"npm install chalk\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Crea un archivo ",(0,s.jsx)(n.code,{children:"notas.js"})," con la l\xf3gica de creaci\xf3n:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:"function crearNota(titulo, contenido) {\n  return {\n    titulo,\n    contenido,\n    fecha: new Date().toLocaleString(),\n  };\n}\n\nmodule.exports = { crearNota };\n"})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["Luego, crea ",(0,s.jsx)(n.code,{children:"index.js"})," para ejecutar desde terminal:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jsx",children:'const chalk = require("chalk");\nconst { crearNota } = require("./notas");\n\nconst titulo = process.argv[2];\nconst contenido = process.argv[3];\n\nif (!titulo || !contenido) {\n  console.log(chalk.red("\u26a0\ufe0f Debes proporcionar un t\xedtulo y contenido"));\n  process.exit();\n}\n\nconst nota = crearNota(titulo, contenido);\nconsole.log(chalk.green.bold("\ud83d\udcd3 Nota creada:"));\nconsole.log(chalk.blue("T\xedtulo:"), nota.titulo);\nconsole.log(chalk.yellow("Contenido:"), nota.contenido);\nconsole.log(chalk.gray("Fecha:"), nota.fecha);\n'})}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsx)(n.li,{children:"Prueba el resultado:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'node index.js "Revisar c\xf3digo" "Terminar m\xf3dulo 2"\n'})}),"\n",(0,s.jsx)(n.p,{children:"Con este peque\xf1o script, ya est\xe1s trabajando con m\xf3dulos, argumentos desde consola, dependencias externas y generaci\xf3n din\xe1mica de contenido."}),"\n",(0,s.jsx)(n.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,s.jsx)(n.p,{children:"Al finalizar este m\xf3dulo ya tienes un dominio inicial del sistema de m\xf3dulos de Node.js y sabes c\xf3mo usar NPM para instalar y gestionar librer\xedas externas. Tambi\xe9n has aprendido a estructurar tu c\xf3digo para que sea modular, mantenible y profesional. Esto es un paso enorme para cualquier desarrollador backend moderno."}),"\n",(0,s.jsx)(n.p,{children:'A partir del pr\xf3ximo m\xf3dulo, exploraremos uno de los aspectos m\xe1s potentes de Node.js: la asincron\xeda y su modelo de ejecuci\xf3n no bloqueante. Prep\xe1rate para entender c\xf3mo manejar tareas en segundo plano, leer archivos sin bloquear el flujo, y dominar el famoso "callback hell"... para luego salir de \xe9l.'})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(t,{...e})}):t(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>i});var a=o(6540);const s={},r=a.createContext(s);function d(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);