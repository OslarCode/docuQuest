"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[7707],{5093:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>o});const r=JSON.parse('{"id":"backend/databases/Modulo10_Joins_agrupaciones_y_filtros_avanzados","title":"Modulo 10. Joins, agrupaciones y filtros avanzados","description":"\ud83e\udded 10.1. JOIN: de la teor\xeda al SQL","source":"@site/docs/backend/databases/Modulo10_Joins_agrupaciones_y_filtros_avanzados.md","sourceDirName":"backend/databases","slug":"/backend/databases/Modulo10_Joins_agrupaciones_y_filtros_avanzados","permalink":"/docuQuest/docs/backend/databases/Modulo10_Joins_agrupaciones_y_filtros_avanzados","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/Modulo10_Joins_agrupaciones_y_filtros_avanzados.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Modulo 9. \xc1lgebra relacional y pensamiento declarativo","permalink":"/docuQuest/docs/backend/databases/Modulo9_Algebra_relacional_y_pensamiento_declarativo"},"next":{"title":"Modulo 11. Vistas l\xf3gicas y composici\xf3n de consultas complejas","permalink":"/docuQuest/docs/backend/databases/Modulo11_Vistas_logicas_y_composicion_de_consulta"}}');var i=n(4848),c=n(8453);const a={},l="Modulo 10. Joins, agrupaciones y filtros avanzados",d={},o=[{value:"\ud83e\udded 10.1. JOIN: de la teor\xeda al SQL",id:"-101-join-de-la-teor\xeda-al-sql",level:2},{value:"Tipos principales de JOIN",id:"tipos-principales-de-join",level:3},{value:"\ud83e\uddf1 10.2. INNER JOIN \u2014 combinaci\xf3n directa",id:"-102-inner-join--combinaci\xf3n-directa",level:2},{value:"\ud83d\udfe1 10.3. LEFT JOIN \u2014 mantener \u201cpadres\u201d sin hijos",id:"-103-left-join--mantener-padres-sin-hijos",level:2},{value:"\ud83d\udfe2 10.4. SELF JOIN \u2014 cuando la tabla se relaciona consigo misma",id:"-104-self-join--cuando-la-tabla-se-relaciona-consigo-misma",level:2},{value:"\ud83e\uddee 10.5. CROSS JOIN \u2014 producto cartesiano controlado",id:"-105-cross-join--producto-cartesiano-controlado",level:2},{value:"\ud83e\udded 10.6. Filtros (WHERE y ON) \u2014 no es lo mismo",id:"-106-filtros-where-y-on--no-es-lo-mismo",level:2},{value:"\ud83d\udcca 10.7. GROUP BY y agregaciones \u2014 resumen de datos",id:"-107-group-by-y-agregaciones--resumen-de-datos",level:2},{value:"\ud83e\udded 10.8. HAVING \u2014 filtros sobre agregaciones",id:"-108-having--filtros-sobre-agregaciones",level:2},{value:"\ud83e\udde0 10.9. Agregaciones + JOIN \u2014 patrones comunes",id:"-109-agregaciones--join--patrones-comunes",level:2},{value:"\ud83e\uddee 10.10. Agregaciones m\xfaltiples",id:"-1010-agregaciones-m\xfaltiples",level:2},{value:"\ud83e\udde0 10.11. Pensar en \xe1lgebra antes de SQL = mejores consultas",id:"-1011-pensar-en-\xe1lgebra-antes-de-sql--mejores-consultas",level:2},{value:"\u26a0\ufe0f 10.12. Buenas pr\xe1cticas con JOIN + agregaciones",id:"\ufe0f-1012-buenas-pr\xe1cticas-con-join--agregaciones",level:2},{value:"\ud83d\udea8 Errores comunes",id:"-errores-comunes",level:2}];function t(e){const s={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsx)(s.h1,{id:"modulo-10-joins-agrupaciones-y-filtros-avanzados",children:"Modulo 10. Joins, agrupaciones y filtros avanzados"})}),"\n",(0,i.jsx)(s.h2,{id:"-101-join-de-la-teor\xeda-al-sql",children:"\ud83e\udded 10.1. JOIN: de la teor\xeda al SQL"}),"\n",(0,i.jsxs)(s.p,{children:["En \xe1lgebra relacional, el ",(0,i.jsx)(s.strong,{children:"JOIN"})," es:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"R \u2a1d condici\xf3n S \u2261 \u03c3 condici\xf3n (R \xd7 S)\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"En SQL se escribe:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT ...\nFROM R\nJOIN S\n  ON condici\xf3n;\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["El JOIN ",(0,i.jsx)(s.strong,{children:"no es magia"}),": es simplemente ",(0,i.jsx)(s.strong,{children:"un producto cartesiano filtrado"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"tipos-principales-de-join",children:"Tipos principales de JOIN"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"INNER JOIN"})," \u2192 filas que cumplen condici\xf3n en ambas tablas."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"LEFT JOIN"})," \u2192 todas las filas de la tabla izquierda, y coincidencias de la derecha (o NULL si no hay)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"RIGHT JOIN"})," \u2192 inverso del LEFT JOIN."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"FULL OUTER JOIN"})," \u2192 todas las filas de ambas tablas (aunque no haya coincidencia)."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"CROSS JOIN"})," \u2192 producto cartesiano sin condici\xf3n."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"SELF JOIN"})," \u2192 unir una tabla consigo misma."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"-102-inner-join--combinaci\xf3n-directa",children:"\ud83e\uddf1 10.2. INNER JOIN \u2014 combinaci\xf3n directa"}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc Caso: queremos ",(0,i.jsx)(s.strong,{children:"ver el nombre del alumno y el nombre del curso"})," en el que est\xe1 matriculado."]}),"\n",(0,i.jsx)(s.p,{children:"Tablas:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"alumno(id_alumno, nombre)"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"curso(id_curso, nombre_curso)"})}),"\n",(0,i.jsx)(s.li,{children:(0,i.jsx)(s.code,{children:"matricula(id_alumno, id_curso)"})}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT a.nombre AS alumno, c.nombre_curso AS curso\nFROM alumno a\nJOIN matricula m ON a.id_alumno = m.id_alumno\nJOIN curso c ON m.id_curso = c.id_curso;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"alumno"}),(0,i.jsx)(s.th,{children:"curso"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Ana"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Luis"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Sara"}),(0,i.jsx)(s.td,{children:"Redes"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udc49 Esto es exactamente la operaci\xf3n de JOIN que hicimos en \xe1lgebra relacional."}),"\n",(0,i.jsx)(s.h2,{id:"-103-left-join--mantener-padres-sin-hijos",children:"\ud83d\udfe1 10.3. LEFT JOIN \u2014 mantener \u201cpadres\u201d sin hijos"}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc Caso: queremos mostrar ",(0,i.jsx)(s.strong,{children:"todos los alumnos"}),", incluso si no tienen matr\xedcula."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT a.nombre, c.nombre_curso\nFROM alumno a\nLEFT JOIN matricula m ON a.id_alumno = m.id_alumno\nLEFT JOIN curso c ON m.id_curso = c.id_curso;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"alumno"}),(0,i.jsx)(s.th,{children:"curso"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Ana"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Luis"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Sara"}),(0,i.jsx)(s.td,{children:"Redes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Pedro"}),(0,i.jsx)(s.td,{children:"NULL"})]})]})]}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udc49 Esto se traduce en \xe1lgebra como una uni\xf3n extendida (outer join)."}),"\n",(0,i.jsx)(s.h2,{id:"-104-self-join--cuando-la-tabla-se-relaciona-consigo-misma",children:"\ud83d\udfe2 10.4. SELF JOIN \u2014 cuando la tabla se relaciona consigo misma"}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc Caso: en una tabla de empleados, cada empleado tiene un ",(0,i.jsx)(s.code,{children:"id_jefe"})," que tambi\xe9n es un empleado."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT e.nombre AS empleado, j.nombre AS jefe\nFROM empleado e\nLEFT JOIN empleado j ON e.id_jefe = j.id_empleado;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"empleado"}),(0,i.jsx)(s.th,{children:"jefe"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Ana"}),(0,i.jsx)(s.td,{children:"Luis"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Luis"}),(0,i.jsx)(s.td,{children:"NULL"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 Aqu\xed usamos ",(0,i.jsx)(s.strong,{children:"renombramiento (\u03c1)"})," de \xe1lgebra relacional de forma pr\xe1ctica."]}),"\n",(0,i.jsx)(s.h2,{id:"-105-cross-join--producto-cartesiano-controlado",children:"\ud83e\uddee 10.5. CROSS JOIN \u2014 producto cartesiano controlado"}),"\n",(0,i.jsxs)(s.p,{children:["Aunque rara vez se usa directamente, el ",(0,i.jsx)(s.strong,{children:"CROSS JOIN"})," puede ser \xfatil para generar combinaciones:"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT a.nombre, c.nombre_curso\nFROM alumno a\nCROSS JOIN curso c;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"alumno"}),(0,i.jsx)(s.th,{children:"curso"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Ana"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Ana"}),(0,i.jsx)(s.td,{children:"Redes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Luis"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Luis"}),(0,i.jsx)(s.td,{children:"Redes"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Sara"}),(0,i.jsx)(s.td,{children:"Bases de Datos"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Sara"}),(0,i.jsx)(s.td,{children:"Redes"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 Equivalente a ",(0,i.jsx)(s.code,{children:"Alumno \xd7 Curso"})," en \xe1lgebra."]}),"\n",(0,i.jsx)(s.h2,{id:"-106-filtros-where-y-on--no-es-lo-mismo",children:"\ud83e\udded 10.6. Filtros (WHERE y ON) \u2014 no es lo mismo"}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc ",(0,i.jsx)(s.strong,{children:"WHERE"})," filtra despu\xe9s del JOIN."]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc ",(0,i.jsx)(s.strong,{children:"ON"})," filtra durante el JOIN."]}),"\n",(0,i.jsx)(s.p,{children:"Ejemplo:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Filtrando despu\xe9s (WHERE)\nSELECT a.nombre, c.nombre_curso\nFROM alumno a\nLEFT JOIN matricula m ON a.id_alumno = m.id_alumno\nLEFT JOIN curso c ON m.id_curso = c.id_curso\nWHERE c.nombre_curso = 'Bases de Datos';\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Esto ",(0,i.jsx)(s.strong,{children:"excluye alumnos sin curso"}),", porque el WHERE elimina los NULL."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"-- Filtrando durante (ON)\nSELECT a.nombre, c.nombre_curso\nFROM alumno a\nLEFT JOIN matricula m ON a.id_alumno = m.id_alumno\nLEFT JOIN curso c\n  ON m.id_curso = c.id_curso AND c.nombre_curso = 'Bases de Datos';\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Esto ",(0,i.jsx)(s.strong,{children:"mantiene alumnos sin curso"})," pero pone NULL en curso si no coincide."]}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udc49 Esta diferencia es vital para evitar bugs en reportes y dashboards."}),"\n",(0,i.jsx)(s.h2,{id:"-107-group-by-y-agregaciones--resumen-de-datos",children:"\ud83d\udcca 10.7. GROUP BY y agregaciones \u2014 resumen de datos"}),"\n",(0,i.jsxs)(s.p,{children:["Las operaciones de ",(0,i.jsx)(s.strong,{children:"agregaci\xf3n"})," en SQL corresponden a ",(0,i.jsx)(s.strong,{children:"operaciones de reducci\xf3n de relaciones"})," en \xe1lgebra extendida."]}),"\n",(0,i.jsx)(s.p,{children:"Funciones comunes:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"COUNT()"})," \u2014 cuenta filas"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"SUM()"})," \u2014 suma num\xe9rica"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"AVG()"})," \u2014 promedio"]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.code,{children:"MIN()"}),", ",(0,i.jsx)(s.code,{children:"MAX()"})]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Caso: contar cu\xe1ntos alumnos hay en cada curso."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT c.nombre_curso, COUNT(*) AS total_alumnos\nFROM matricula m\nJOIN curso c ON m.id_curso = c.id_curso\nGROUP BY c.nombre_curso;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"nombre_curso"}),(0,i.jsx)(s.th,{children:"total_alumnos"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Bases de Datos"}),(0,i.jsx)(s.td,{children:"2"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Redes"}),(0,i.jsx)(s.td,{children:"1"})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 Equivalente a una operaci\xf3n de ",(0,i.jsx)(s.strong,{children:"proyecci\xf3n + agrupaci\xf3n"})," en \xe1lgebra."]}),"\n",(0,i.jsx)(s.h2,{id:"-108-having--filtros-sobre-agregaciones",children:"\ud83e\udded 10.8. HAVING \u2014 filtros sobre agregaciones"}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"HAVING"})," es como un ",(0,i.jsx)(s.code,{children:"WHERE"}),", pero aplicado despu\xe9s de agrupar."]}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Caso: mostrar solo cursos con m\xe1s de 1 alumno."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT c.nombre_curso, COUNT(*) AS total\nFROM matricula m\nJOIN curso c ON m.id_curso = c.id_curso\nGROUP BY c.nombre_curso\nHAVING COUNT(*) > 1;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"nombre_curso"}),(0,i.jsx)(s.th,{children:"total"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Bases de Datos"}),(0,i.jsx)(s.td,{children:"2"})]})})]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 Si usaras WHERE aqu\xed, fallar\xeda porque ",(0,i.jsx)(s.code,{children:"COUNT(*)"})," no existe a\xfan en esa etapa."]}),"\n",(0,i.jsx)(s.h2,{id:"-109-agregaciones--join--patrones-comunes",children:"\ud83e\udde0 10.9. Agregaciones + JOIN \u2014 patrones comunes"}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc ",(0,i.jsx)(s.strong,{children:"Total de pedidos por cliente:"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT c.nombre AS cliente, SUM(p.total) AS total_gastado\nFROM cliente c\nJOIN pedido p ON c.id_cliente = p.id_cliente\nGROUP BY c.nombre;\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udccc ",(0,i.jsx)(s.strong,{children:"N\xfamero de pr\xe9stamos por socio:"})]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT s.nombre, COUNT(*) AS prestamos\nFROM socio s\nLEFT JOIN prestamo p ON s.id_socio = p.id_socio\nGROUP BY s.nombre;\n\n"})}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 LEFT JOIN + GROUP BY permite ",(0,i.jsx)(s.strong,{children:"incluir tambi\xe9n los que tienen 0 registros"}),"."]}),"\n",(0,i.jsx)(s.h2,{id:"-1010-agregaciones-m\xfaltiples",children:"\ud83e\uddee 10.10. Agregaciones m\xfaltiples"}),"\n",(0,i.jsx)(s.p,{children:"Puedes aplicar m\xfaltiples funciones en la misma agrupaci\xf3n:"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-sql",children:"SELECT c.nombre_curso,\n       COUNT(*) AS total_alumnos,\n       MIN(m.fecha_matricula) AS primera_matricula,\n       MAX(m.fecha_matricula) AS ultima_matricula\nFROM matricula m\nJOIN curso c ON m.id_curso = c.id_curso\nGROUP BY c.nombre_curso;\n\n"})}),"\n",(0,i.jsx)(s.p,{children:"\ud83d\udccc Resultado:"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"nombre_curso"}),(0,i.jsx)(s.th,{children:"total_alumnos"}),(0,i.jsx)(s.th,{children:"primera_matricula"}),(0,i.jsx)(s.th,{children:"ultima_matricula"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Bases de Datos"}),(0,i.jsx)(s.td,{children:"2"}),(0,i.jsx)(s.td,{children:"2025-10-10"}),(0,i.jsx)(s.td,{children:"2025-10-12"})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"Redes"}),(0,i.jsx)(s.td,{children:"1"}),(0,i.jsx)(s.td,{children:"2025-10-11"}),(0,i.jsx)(s.td,{children:"2025-10-11"})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"-1011-pensar-en-\xe1lgebra-antes-de-sql--mejores-consultas",children:"\ud83e\udde0 10.11. Pensar en \xe1lgebra antes de SQL = mejores consultas"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"L\xf3gica algebraica (concepto)"}),(0,i.jsx)(s.th,{children:"Traducci\xf3n SQL pr\xe1ctica"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"\u03c3 condici\xf3n (R)"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"WHERE condici\xf3n"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"\u03c0 columnas (R)"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"SELECT columnas"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"R \u2a1d condici\xf3n S"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"JOIN ... ON ..."})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"\u03b3 (agrupaci\xf3n, agregaci\xf3n)"}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)(s.code,{children:"GROUP BY"}),", funciones agregadas"]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"\u03c3 condici\xf3n (\u03b3 ...)"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"HAVING"})})]})]})]}),"\n",(0,i.jsxs)(s.p,{children:["\ud83d\udc49 Si primero estructuras mentalmente tu consulta con ",(0,i.jsx)(s.strong,{children:"\xe1lgebra"}),","]}),"\n",(0,i.jsx)(s.p,{children:"es mucho m\xe1s f\xe1cil escribir SQL limpio, legible y eficiente."}),"\n",(0,i.jsx)(s.h2,{id:"\ufe0f-1012-buenas-pr\xe1cticas-con-join--agregaciones",children:"\u26a0\ufe0f 10.12. Buenas pr\xe1cticas con JOIN + agregaciones"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["Aplica filtros tempranos (",(0,i.jsx)(s.code,{children:"WHERE"}),") antes de los JOIN si puedes."]}),"\n",(0,i.jsxs)(s.li,{children:["Usa ",(0,i.jsx)(s.code,{children:"HAVING"})," solo para condiciones sobre agregados."]}),"\n",(0,i.jsxs)(s.li,{children:["Usa alias cortos (",(0,i.jsx)(s.code,{children:"a"}),", ",(0,i.jsx)(s.code,{children:"c"}),", ",(0,i.jsx)(s.code,{children:"m"}),") para mejorar legibilidad en JOIN m\xfaltiples."]}),"\n",(0,i.jsxs)(s.li,{children:["No abuses de ",(0,i.jsx)(s.code,{children:"SELECT *"})," en joins grandes \u2014 proyecta solo lo necesario."]}),"\n",(0,i.jsx)(s.li,{children:"Prefiere INNER JOIN cuando la l\xf3gica lo permita \u2014 es m\xe1s predecible."}),"\n",(0,i.jsxs)(s.li,{children:["LEFT JOIN solo cuando ",(0,i.jsx)(s.strong,{children:"de verdad"})," necesitas mantener nulos."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"-errores-comunes",children:"\ud83d\udea8 Errores comunes"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"Filtrar despu\xe9s del LEFT JOIN con WHERE y eliminar filas sin querer."}),"\n",(0,i.jsx)(s.li,{children:"No agrupar todas las columnas no agregadas \u2192 error cl\xe1sico de SQL."}),"\n",(0,i.jsx)(s.li,{children:"JOIN sin condici\xf3n \u2192 producto cartesiano inesperado."}),"\n",(0,i.jsx)(s.li,{children:"GROUP BY innecesario cuando bastaba con DISTINCT."}),"\n",(0,i.jsx)(s.li,{children:"No documentar las intenciones del JOIN \u2192 consultas dif\xedciles de mantener."}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>a,x:()=>l});var r=n(6540);const i={},c=r.createContext(i);function a(e){const s=r.useContext(c);return r.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(c.Provider,{value:s},e.children)}}}]);