"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[3187],{2542:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"js/asincronia/introduccion","title":"Introducci\xf3n","description":"JavaScript es un lenguaje que se ejecuta en el navegador y destaca por su capacidad para manejar operaciones asincr\xf3nicas sin bloquear el hilo principal. Esto permite que las aplicaciones web sigan siendo fluidas y reactivas incluso cuando realizan tareas que toman tiempo, como solicitudes a servidores o lectura de archivos.","source":"@site/docs/js/asincronia/introduccion.md","sourceDirName":"js/asincronia","slug":"/js/asincronia/introduccion","permalink":"/docuQuest/docs/js/asincronia/introduccion","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/js/asincronia/introduccion.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Asincron\xeda","permalink":"/docuQuest/docs/js/asincronia/"},"next":{"title":"Callbacks","permalink":"/docuQuest/docs/js/asincronia/callbacks"}}');var r=a(4848),o=a(8453);const i={},l="Introducci\xf3n",c={},t=[{value:"Ejemplo de Asincron\xeda en JavaScript",id:"ejemplo-de-asincron\xeda-en-javascript",level:3},{value:"\ud83d\udcc1 Ejemplo: Leer el contenido de un archivo de texto (.txt) seleccionado por el usuario",id:"-ejemplo-leer-el-contenido-de-un-archivo-de-texto-txt-seleccionado-por-el-usuario",level:3},{value:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?",id:"-qu\xe9-pasa-aqu\xed",level:3},{value:"\u2705 \xbfPor qu\xe9 es asincr\xf3nico?",id:"-por-qu\xe9-es-asincr\xf3nico",level:3},{value:"Ventajas y desaf\xedos de la Asincron\xeda",id:"ventajas-y-desaf\xedos-de-la-asincron\xeda",level:2},{value:"Event Loop (Bucle de Eventos)",id:"event-loop-bucle-de-eventos",level:2},{value:"Ejemplo del Event Loop en Acci\xf3n",id:"ejemplo-del-event-loop-en-acci\xf3n",level:3},{value:"\ud83e\uddf1 1. La <em>Pila de Llamadas</em> (Call Stack)",id:"-1-la-pila-de-llamadas-call-stack",level:2},{value:"\ud83e\uddfe \xbfQu\xe9 es?",id:"-qu\xe9-es",level:3},{value:"\u2705 Ejemplo real y comentado:",id:"-ejemplo-real-y-comentado",level:3},{value:"\ud83d\udd0d Qu\xe9 ocurre paso a paso:",id:"-qu\xe9-ocurre-paso-a-paso",level:3},{value:"\ud83d\udce9 2. La <em>Cola de Tareas</em> (Task Queue o Macrotasks)",id:"-2-la-cola-de-tareas-task-queue-o-macrotasks",level:2},{value:"\ud83e\uddfe \xbfQu\xe9 es?",id:"-qu\xe9-es-1",level:3},{value:"\u2705 Ejemplo real y comentado:",id:"-ejemplo-real-y-comentado-1",level:3},{value:"\ud83d\udd0d Qu\xe9 ocurre:",id:"-qu\xe9-ocurre",level:3},{value:"\u2699\ufe0f 3. La <em>Cola de Microtareas</em> (Microtask Queue)",id:"\ufe0f-3-la-cola-de-microtareas-microtask-queue",level:2},{value:"\ud83e\uddfe \xbfQu\xe9 es?",id:"-qu\xe9-es-2",level:3},{value:"\u2705 Ejemplo real y comentado:",id:"-ejemplo-real-y-comentado-2",level:3},{value:"\ud83d\udd0d Qu\xe9 ocurre paso a paso:",id:"-qu\xe9-ocurre-paso-a-paso-1",level:3},{value:"\ud83d\udcca Comparaci\xf3n r\xe1pida:",id:"-comparaci\xf3n-r\xe1pida",level:2},{value:"\u2705 Ejemplo completo:",id:"-ejemplo-completo",level:3},{value:"\ud83d\udd0d Resultado esperado en consola:",id:"-resultado-esperado-en-consola",level:3},{value:"\ud83e\udde0 Explicaci\xf3n paso a paso:",id:"-explicaci\xf3n-paso-a-paso",level:3},{value:"\u2705 Conclusi\xf3n:",id:"-conclusi\xf3n",level:3},{value:"Importancia del Event Loop",id:"importancia-del-event-loop",level:2},{value:"Ejemplo de Asincron\xeda y Event Loop en JavaScript",id:"ejemplo-de-asincron\xeda-y-event-loop-en-javascript",level:2},{value:"\ud83c\udfaf Ejemplo real: Cargar y mostrar una imagen aleatoria de un perro usando asincron\xeda (<code>fetch</code>, <code>async/await</code>)",id:"-ejemplo-real-cargar-y-mostrar-una-imagen-aleatoria-de-un-perro-usando-asincron\xeda-fetch-asyncawait",level:3},{value:"\ud83e\udde0 \xbfQu\xe9 muestra este ejemplo?",id:"-qu\xe9-muestra-este-ejemplo",level:3},{value:"\ud83c\udfaf Ejemplo: Simulaci\xf3n de una animaci\xf3n paso a paso con <code>async/await</code>",id:"-ejemplo-simulaci\xf3n-de-una-animaci\xf3n-paso-a-paso-con-asyncawait",level:3},{value:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?",id:"-qu\xe9-hace-este-ejemplo",level:3},{value:"Promise.all",id:"promiseall",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es <code>Promise.all()</code>?",id:"-qu\xe9-es-promiseall",level:2},{value:"\u2705 Ejemplo real y comentado",id:"-ejemplo-real-y-comentado-3",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?",id:"-qu\xe9-hace-este-ejemplo-1",level:3},{value:"\ud83e\udde0 \xbfCu\xe1ndo usar <code>Promise.all()</code>?",id:"-cu\xe1ndo-usar-promiseall",level:3},{value:"Promise.race",id:"promiserace",level:2},{value:"\ud83c\udfc1 \xbfQu\xe9 es <code>Promise.race()</code>?",id:"-qu\xe9-es-promiserace",level:2},{value:"\u2705 Ejemplo real: simular dos tareas, una lenta y una r\xe1pida",id:"-ejemplo-real-simular-dos-tareas-una-lenta-y-una-r\xe1pida",level:2},{value:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?",id:"-qu\xe9-pasa-aqu\xed-1",level:3},{value:"\ud83e\udde0 \xbfCu\xe1ndo usar <code>Promise.race()</code>?",id:"-cu\xe1ndo-usar-promiserace",level:3},{value:"\ud83c\udfaf Escenario real:",id:"-escenario-real",level:3},{value:"\u2705 Ejemplo completo con comentarios l\xednea por l\xednea",id:"-ejemplo-completo-con-comentarios-l\xednea-por-l\xednea",level:3},{value:"\ud83d\udd0d \xbfQu\xe9 est\xe1 pasando?",id:"-qu\xe9-est\xe1-pasando",level:3},{value:"\u2705 \xbfCu\xe1ndo usar esto?",id:"-cu\xe1ndo-usar-esto",level:3},{value:"Encadenamiento de Promesas con Async/Await",id:"encadenamiento-de-promesas-con-asyncawait",level:2},{value:"\ud83d\udd17 \xbfQu\xe9 es el encadenamiento de promesas con <code>async/await</code>?",id:"-qu\xe9-es-el-encadenamiento-de-promesas-con-asyncawait",level:2},{value:"\u2705 Ejemplo real y comentado: obtener un post y luego los comentarios de ese post",id:"-ejemplo-real-y-comentado-obtener-un-post-y-luego-los-comentarios-de-ese-post",level:3},{value:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?",id:"-qu\xe9-hace-este-ejemplo-2",level:3},{value:"\ud83e\udde0 Ventajas de encadenar promesas con <code>async/await</code>:",id:"-ventajas-de-encadenar-promesas-con-asyncawait",level:3},{value:"\ud83e\udde8 \xbfPor qu\xe9 manejar errores en c\xf3digo asincr\xf3nico?",id:"-por-qu\xe9-manejar-errores-en-c\xf3digo-asincr\xf3nico",level:2},{value:"\ud83e\uddf1 1. <strong>Manejo de errores con <code>.catch()</code> (promesas encadenadas)</strong>",id:"-1-manejo-de-errores-con-catch-promesas-encadenadas",level:2},{value:"\ud83d\udd0d Qu\xe9 pasa aqu\xed:",id:"-qu\xe9-pasa-aqu\xed-2",level:3},{value:"\ud83e\uddf1 2. <strong>Manejo de errores con <code>async/await</code> + <code>try...catch</code> (m\xe1s moderno)</strong>",id:"-2-manejo-de-errores-con-asyncawait--trycatch-m\xe1s-moderno",level:2},{value:"\u2705 Ventajas de <code>try...catch</code> con <code>async/await</code>:",id:"-ventajas-de-trycatch-con-asyncawait",level:3},{value:"\ud83e\udde0 Reglas importantes:",id:"-reglas-importantes",level:2},{value:"\ud83c\udfaf Objetivo:",id:"-objetivo",level:2},{value:"\u2705 Ejemplo real con retry autom\xe1tico y comentarios l\xednea por l\xednea:",id:"-ejemplo-real-con-retry-autom\xe1tico-y-comentarios-l\xednea-por-l\xednea",level:3},{value:"\ud83d\udd0d Qu\xe9 hace este ejemplo:",id:"-qu\xe9-hace-este-ejemplo-3",level:3},{value:"\ud83e\udde0 \xbfCu\xe1ndo usar esta t\xe9cnica?",id:"-cu\xe1ndo-usar-esta-t\xe9cnica",level:3},{value:"Condiciones de Carrera",id:"condiciones-de-carrera",level:2},{value:"\ud83e\udde0 \xbfQu\xe9 es una <em>condici\xf3n de carrera</em> en JavaScript?",id:"-qu\xe9-es-una-condici\xf3n-de-carrera-en-javascript",level:2},{value:"\ud83c\udfaf Ejemplo real: dos peticiones que modifican el mismo contenido",id:"-ejemplo-real-dos-peticiones-que-modifican-el-mismo-contenido",level:2},{value:"\u2705 C\xf3digo con condici\xf3n de carrera:",id:"-c\xf3digo-con-condici\xf3n-de-carrera",level:3},{value:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?",id:"-qu\xe9-ocurre-aqu\xed",level:3},{value:"\u2705 C\xf3mo evitar condiciones de carrera (forma sencilla)",id:"-c\xf3mo-evitar-condiciones-de-carrera-forma-sencilla",level:2},{value:"\ud83d\udd27 Ejemplo corregido con control de versi\xf3n:",id:"-ejemplo-corregido-con-control-de-versi\xf3n",level:3},{value:"\u2705 Resultado:",id:"-resultado",level:3},{value:"\ud83e\udde0 \xbfCu\xe1ndo preocuparse por esto?",id:"-cu\xe1ndo-preocuparse-por-esto",level:3},{value:"\ud83d\udd0d VERSI\xd3N 1: CONDICI\xd3N DE CARRERA (resultado incorrecto si escribes r\xe1pido)",id:"-versi\xf3n-1-condici\xf3n-de-carrera-resultado-incorrecto-si-escribes-r\xe1pido",level:2},{value:"\ud83d\udd0d Qu\xe9 pasa:",id:"-qu\xe9-pasa",level:3},{value:"\u2705 VERSI\xd3N CORREGIDA: SIN condici\xf3n de carrera (control con <code>requestId</code>)",id:"-versi\xf3n-corregida-sin-condici\xf3n-de-carrera-control-con-requestid",level:2},{value:"\u2705 \xbfQu\xe9 resuelve esto?",id:"-qu\xe9-resuelve-esto",level:3},{value:"\ud83e\udde0 Conclusi\xf3n:",id:"-conclusi\xf3n-1",level:3},{value:"\u2705 \xbfC\xf3mo sincronizar operaciones en JavaScript puede evitar las condiciones de carrera?",id:"-c\xf3mo-sincronizar-operaciones-en-javascript-puede-evitar-las-condiciones-de-carrera",level:2},{value:"1. <strong>Control de versi\xf3n o <code>requestId</code></strong>",id:"1-control-de-versi\xf3n-o-requestid",level:3},{value:"2. <strong>Encadenamiento de promesas</strong>",id:"2-encadenamiento-de-promesas",level:3},{value:"3. <strong>Deshabilitar entradas del usuario temporalmente</strong>",id:"3-deshabilitar-entradas-del-usuario-temporalmente",level:3},{value:"4. <strong>AbortController (para cancelar operaciones anteriores)</strong>",id:"4-abortcontroller-para-cancelar-operaciones-anteriores",level:3},{value:"5. <strong>Bloqueo l\xf3gico (lock)</strong>",id:"5-bloqueo-l\xf3gico-lock",level:3},{value:"\u2705 Conclusi\xf3n:",id:"-conclusi\xf3n-2",level:2},{value:"\ud83c\udfaf Objetivo de la app",id:"-objetivo-de-la-app",level:2},{value:"\ud83e\uddf1 Paso 1: Estructura HTML",id:"-paso-1-estructura-html",level:2},{value:"\ud83e\uddf1 Paso 2: JavaScript con todas las protecciones",id:"-paso-2-javascript-con-todas-las-protecciones",level:2},{value:"\u2705 \xbfQu\xe9 aprendiste con esta mini app?",id:"-qu\xe9-aprendiste-con-esta-mini-app",level:2},{value:"\u2705 Paso 1: HTML base con Bootstrap",id:"-paso-1-html-base-con-bootstrap",level:2},{value:"\u2705 Paso 2: L\xf3gica JavaScript con todo integrado y modularizado",id:"-paso-2-l\xf3gica-javascript-con-todo-integrado-y-modularizado",level:2},{value:"\u2705 \xbfQu\xe9 mejoras trae esta versi\xf3n?",id:"-qu\xe9-mejoras-trae-esta-versi\xf3n",level:2}];function d(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"introducci\xf3n",children:"Introducci\xf3n"})}),"\n",(0,r.jsx)(n.h1,{id:"introducci\xf3n-1",children:"Introducci\xf3n"}),"\n",(0,r.jsx)(n.p,{children:"JavaScript es un lenguaje que se ejecuta en el navegador y destaca por su capacidad para manejar operaciones asincr\xf3nicas sin bloquear el hilo principal. Esto permite que las aplicaciones web sigan siendo fluidas y reactivas incluso cuando realizan tareas que toman tiempo, como solicitudes a servidores o lectura de archivos."}),"\n",(0,r.jsx)(n.p,{children:"La asincron\xeda en JavaScript se gestiona mediante tres mecanismos principales:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Callbacks"}),", funciones que se ejecutan tras completar una tarea, pero que pueden complicar el c\xf3digo (problema conocido como ",(0,r.jsx)(n.em,{children:"callback hell"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Promesas"}),", que ofrecen una forma m\xe1s estructurada de manejar tareas asincr\xf3nicas y sus posibles resultados (\xe9xito o error)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Async/Await"}),", que permite escribir c\xf3digo asincr\xf3nico de forma legible y parecida al c\xf3digo tradicional, facilitando el manejo y comprensi\xf3n del flujo del programa."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"ejemplo-de-asincron\xeda-en-javascript",children:"Ejemplo de Asincron\xeda en JavaScript"}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed tienes un ",(0,r.jsx)(n.strong,{children:"ejemplo real"})," de asincron\xeda en JavaScript: vamos a ",(0,r.jsxs)(n.strong,{children:["leer un archivo local usando la API ",(0,r.jsx)(n.code,{children:"FileReader"})]}),", que funciona de forma asincr\xf3nica. Este es un caso muy com\xfan en aplicaciones web que permiten al usuario subir o previsualizar archivos."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-leer-el-contenido-de-un-archivo-de-texto-txt-seleccionado-por-el-usuario",children:"\ud83d\udcc1 Ejemplo: Leer el contenido de un archivo de texto (.txt) seleccionado por el usuario"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'\x3c!-- HTML: Input para seleccionar un archivo --\x3e\n<input type="file" id="archivo" accept=".txt" />\n<pre id="resultado"></pre>\n\n<script>\n  // Esperamos a que el DOM est\xe9 cargado\n  document.addEventListener("DOMContentLoaded", () => {\n    // Obtenemos las referencias a los elementos del DOM\n    const inputArchivo = document.getElementById("archivo");\n    const salida = document.getElementById("resultado");\n\n    // Evento que se dispara cuando el usuario selecciona un archivo\n    inputArchivo.addEventListener("change", () => {\n      const archivo = inputArchivo.files[0]; // Obtenemos el primer archivo\n\n      if (!archivo) {\n        salida.textContent = "\u274c No se seleccion\xf3 ning\xfan archivo.";\n        return;\n      }\n\n      // Creamos una nueva instancia de FileReader\n      const lector = new FileReader();\n\n      // Evento asincr\xf3nico: se dispara cuando termina de leer el archivo\n      lector.onload = () => {\n        // Mostramos el contenido del archivo en la p\xe1gina\n        salida.textContent = `\ud83d\udcc4 Contenido del archivo:\\n\\n${lector.result}`;\n      };\n\n      // Evento de error, por si algo falla durante la lectura\n      lector.onerror = () => {\n        salida.textContent = "\u274c Error al leer el archivo.";\n      };\n\n      // Iniciamos la lectura del archivo como texto (esto es asincr\xf3nico)\n      lector.readAsText(archivo);\n\n      // Este mensaje se muestra inmediatamente (sin esperar a que termine la lectura)\n      console.log("\u23f3 Leyendo archivo...");\n    });\n  });\n<\/script>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed",children:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["El usuario selecciona un archivo ",(0,r.jsx)(n.code,{children:".txt"})," desde su dispositivo."]}),"\n",(0,r.jsxs)(n.li,{children:["Se dispara el evento ",(0,r.jsx)(n.code,{children:"change"}),", y usamos ",(0,r.jsx)(n.code,{children:"FileReader"})," para leer el contenido."]}),"\n",(0,r.jsxs)(n.li,{children:["El m\xe9todo ",(0,r.jsx)(n.code,{children:"readAsText()"})," ",(0,r.jsx)(n.strong,{children:"empieza la lectura de forma asincr\xf3nica"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cuando termina, el evento ",(0,r.jsx)(n.code,{children:"onload"})," se ejecuta y muestra el contenido."]}),"\n",(0,r.jsxs)(n.li,{children:["Si ocurre un error, se captura con ",(0,r.jsx)(n.code,{children:"onerror"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-por-qu\xe9-es-asincr\xf3nico",children:"\u2705 \xbfPor qu\xe9 es asincr\xf3nico?"}),"\n",(0,r.jsxs)(n.p,{children:["Porque leer archivos puede tardar, y ",(0,r.jsx)(n.strong,{children:"no queremos congelar la interfaz"})," mientras eso ocurre. Gracias a la asincron\xeda, el navegador puede seguir funcionando mientras la lectura se realiza en segundo plano."]}),"\n",(0,r.jsxs)(n.p,{children:["Este ejemplo real muestra c\xf3mo JavaScript maneja asincron\xeda ",(0,r.jsxs)(n.strong,{children:["m\xe1s all\xe1 de redes o ",(0,r.jsx)(n.code,{children:"fetch()"})]}),", usando eventos y APIs del navegador."]}),"\n",(0,r.jsx)(n.h2,{id:"ventajas-y-desaf\xedos-de-la-asincron\xeda",children:"Ventajas y desaf\xedos de la Asincron\xeda"}),"\n",(0,r.jsxs)(n.p,{children:["La asincron\xeda en JavaScript ofrece ventajas clave como una ",(0,r.jsx)(n.strong,{children:"interfaz de usuario m\xe1s fluida"}),", ",(0,r.jsx)(n.strong,{children:"manejo eficiente de operaciones I/O"})," y ",(0,r.jsx)(n.strong,{children:"mayor escalabilidad"})," en aplicaciones, especialmente en entornos como Node.js. Al permitir que tareas se ejecuten en segundo plano, evita que el hilo principal se bloquee, mejorando la experiencia del usuario y el rendimiento del sistema."]}),"\n",(0,r.jsxs)(n.p,{children:["Sin embargo, tambi\xe9n implica desaf\xedos: el ",(0,r.jsx)(n.strong,{children:"manejo de errores"})," puede ser m\xe1s complejo, la estructura del c\xf3digo puede volverse dif\xedcil de mantener (especialmente con callbacks), y pueden surgir ",(0,r.jsx)(n.strong,{children:"condiciones de carrera"})," si no se controlan correctamente los tiempos de ejecuci\xf3n. Aunque herramientas modernas como promesas y ",(0,r.jsx)(n.code,{children:"async/await"})," han simplificado mucho estas tareas, entender y manejar la asincron\xeda sigue siendo una habilidad avanzada."]}),"\n",(0,r.jsx)(n.h2,{id:"event-loop-bucle-de-eventos",children:"Event Loop (Bucle de Eventos)"}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.strong,{children:"Event Loop"})," es el mecanismo central que permite a JavaScript manejar m\xfaltiples operaciones asincr\xf3nicas en un solo hilo sin bloquear la ejecuci\xf3n. Gracias a \xe9l, el lenguaje puede mantener la ",(0,r.jsx)(n.strong,{children:"interfaz de usuario fluida"})," y procesar tareas en segundo plano de forma eficiente."]}),"\n",(0,r.jsx)(n.p,{children:"Funciona mediante la coordinaci\xf3n de tres componentes principales:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["La ",(0,r.jsx)(n.strong,{children:"Pila de Llamadas (Call Stack)"}),", donde se ejecutan las funciones en orden LIFO."]}),"\n",(0,r.jsxs)(n.li,{children:["La ",(0,r.jsx)(n.strong,{children:"Cola de Microtareas"}),", donde se almacenan tareas de alta prioridad como las promesas resueltas."]}),"\n",(0,r.jsxs)(n.li,{children:["La ",(0,r.jsx)(n.strong,{children:"Cola de Tareas"}),", que gestiona otras acciones como ",(0,r.jsx)(n.code,{children:"setTimeout"})," o eventos del DOM."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"El Event Loop verifica constantemente si la pila est\xe1 vac\xeda y, si es as\xed, primero procesa todas las microtareas, luego las tareas normales, y finalmente actualiza la interfaz. Este ciclo se repite indefinidamente, asegurando que la ejecuci\xf3n asincr\xf3nica no interrumpa la experiencia del usuario."}),"\n",(0,r.jsx)(n.h3,{id:"ejemplo-del-event-loop-en-acci\xf3n",children:"Ejemplo del Event Loop en Acci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["Vamos a explicarlo de la forma ",(0,r.jsx)(n.strong,{children:"m\xe1s sencilla posible"}),", por partes. Aqu\xed va la ",(0,r.jsx)(n.strong,{children:"explicaci\xf3n clara y real"})," de c\xf3mo funcionan:"]}),"\n",(0,r.jsxs)(n.h2,{id:"-1-la-pila-de-llamadas-call-stack",children:["\ud83e\uddf1 1. La ",(0,r.jsx)(n.em,{children:"Pila de Llamadas"})," (Call Stack)"]}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-es",children:"\ud83e\uddfe \xbfQu\xe9 es?"}),"\n",(0,r.jsxs)(n.p,{children:["La ",(0,r.jsx)(n.strong,{children:"Call Stack"})," es como una ",(0,r.jsx)(n.strong,{children:"pila de platos"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cada vez que llamas una funci\xf3n, se ",(0,r.jsx)(n.strong,{children:"apila"})," (entra en la parte superior)."]}),"\n",(0,r.jsxs)(n.li,{children:["Cuando termina, se ",(0,r.jsx)(n.strong,{children:"desapila"})," (sale de arriba)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-real-y-comentado",children:"\u2705 Ejemplo real y comentado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'function saludar() {\n  console.log("\ud83d\udc4b Hola");\n}\n\nfunction iniciar() {\n  console.log("\ud83d\ude80 Iniciando...");\n  saludar(); // Se apila saludar()\n  console.log("\u2705 Listo");\n}\n\niniciar(); // Se apila iniciar()\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre-paso-a-paso",children:"\ud83d\udd0d Qu\xe9 ocurre paso a paso:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"iniciar()"})," se apila."]}),"\n",(0,r.jsxs)(n.li,{children:["Dentro de ",(0,r.jsx)(n.code,{children:"iniciar"}),", se apila ",(0,r.jsx)(n.code,{children:"saludar()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"saludar"})," hace un ",(0,r.jsx)(n.code,{children:"console.log"}),", y se desapila."]}),"\n",(0,r.jsxs)(n.li,{children:["Vuelve a ",(0,r.jsx)(n.code,{children:"iniciar()"}),", imprime y se desapila."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Todo esto ocurre de forma s\xedncrona, l\xednea por l\xednea. No hay nada asincr\xf3nico a\xfan."}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-2-la-cola-de-tareas-task-queue-o-macrotasks",children:["\ud83d\udce9 2. La ",(0,r.jsx)(n.em,{children:"Cola de Tareas"})," (Task Queue o Macrotasks)"]}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-es-1",children:"\ud83e\uddfe \xbfQu\xe9 es?"}),"\n",(0,r.jsxs)(n.p,{children:["La ",(0,r.jsx)(n.strong,{children:"Cola de Tareas"})," guarda cosas que deben ejecutarse ",(0,r.jsx)(n.strong,{children:"despu\xe9s de que la pila est\xe9 vac\xeda"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplos t\xedpicos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"setTimeout()"})}),"\n",(0,r.jsx)(n.li,{children:"Eventos del DOM (clicks, teclas, etc.)"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-real-y-comentado-1",children:"\u2705 Ejemplo real y comentado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'console.log("\ud83d\udfe2 Inicio");\n\nsetTimeout(() => {\n  console.log("\u23f0 Esto viene de la cola de tareas");\n}, 0);\n\nconsole.log("\ud83d\udd1a Fin");\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre",children:"\ud83d\udd0d Qu\xe9 ocurre:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'console.log("\ud83d\udfe2 Inicio")'})," va a la pila y se ejecuta."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTimeout(...)"})," tambi\xe9n va a la pila, pero ",(0,r.jsx)(n.strong,{children:"no ejecuta el callback todav\xeda"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Su callback se va a la ",(0,r.jsx)(n.strong,{children:"cola de tareas"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'console.log("\ud83d\udd1a Fin")'})," se ejecuta normalmente."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Despu\xe9s de vaciar la pila"}),", el Event Loop toma el callback del ",(0,r.jsx)(n.code,{children:"setTimeout"})," y lo ejecuta."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"\ufe0f-3-la-cola-de-microtareas-microtask-queue",children:["\u2699\ufe0f 3. La ",(0,r.jsx)(n.em,{children:"Cola de Microtareas"})," (Microtask Queue)"]}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-es-2",children:"\ud83e\uddfe \xbfQu\xe9 es?"}),"\n",(0,r.jsxs)(n.p,{children:["La ",(0,r.jsx)(n.strong,{children:"cola de microtareas"})," es otra fila donde se almacenan tareas ",(0,r.jsx)(n.strong,{children:"m\xe1s peque\xf1as pero con mayor prioridad"})," que las tareas normales (macrotareas)."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ejemplos comunes de microtareas:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".then()"})," de una ",(0,r.jsx)(n.code,{children:"Promise"})]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"queueMicrotask()"})}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\ud83d\udd25 Importante: Todas las microtareas se ejecutan antes que cualquier tarea de la cola de tareas (como setTimeout), incluso si ambas est\xe1n listas al mismo tiempo."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-real-y-comentado-2",children:"\u2705 Ejemplo real y comentado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'console.log("\ud83d\udfe2 Inicio");\n\nPromise.resolve().then(() => {\n  console.log("\ud83d\udd01 Microtarea: promesa resuelta");\n});\n\nsetTimeout(() => {\n  console.log("\u23f0 Tarea: setTimeout");\n}, 0);\n\nconsole.log("\ud83d\udd1a Fin");\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre-paso-a-paso-1",children:"\ud83d\udd0d Qu\xe9 ocurre paso a paso:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'console.log("\ud83d\udfe2 Inicio")'})," se ejecuta en la ",(0,r.jsx)(n.strong,{children:"pila de llamadas"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.resolve().then(...)"})," ",(0,r.jsx)(n.strong,{children:"registra"})," el callback en la ",(0,r.jsx)(n.strong,{children:"cola de microtareas"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTimeout(...)"})," ",(0,r.jsx)(n.strong,{children:"registra"})," su callback en la ",(0,r.jsx)(n.strong,{children:"cola de tareas"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'console.log("\ud83d\udd1a Fin")'})," se ejecuta."]}),"\n",(0,r.jsxs)(n.li,{children:["La ",(0,r.jsx)(n.strong,{children:"pila est\xe1 vac\xeda"}),", el Event Loop:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Ejecuta la ",(0,r.jsx)(n.strong,{children:"cola de microtareas"})," (",(0,r.jsx)(n.code,{children:'console.log("\ud83d\udd01 Microtarea: promesa resuelta")'}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\u23f3 Luego ejecuta la ",(0,r.jsx)(n.strong,{children:"cola de tareas"})," (",(0,r.jsx)(n.code,{children:'console.log("\u23f0 Tarea: setTimeout")'}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-comparaci\xf3n-r\xe1pida",children:"\ud83d\udcca Comparaci\xf3n r\xe1pida:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Acci\xf3n"}),(0,r.jsx)(n.th,{children:"Prioridad"}),(0,r.jsx)(n.th,{children:"Cola"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"Promise.then()"})}),(0,r.jsx)(n.td,{children:"Alta"}),(0,r.jsx)(n.td,{children:"Microtareas"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"queueMicrotask()"})}),(0,r.jsx)(n.td,{children:"Alta"}),(0,r.jsx)(n.td,{children:"Microtareas"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"setTimeout"}),", ",(0,r.jsx)(n.code,{children:"setInterval"})]}),(0,r.jsx)(n.td,{children:"Media"}),(0,r.jsx)(n.td,{children:"Tareas (macrotareas)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Eventos del DOM (click, input)"}),(0,r.jsx)(n.td,{children:"Media"}),(0,r.jsx)(n.td,{children:"Tareas (macrotareas)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"C\xf3digo normal (funciones directas)"}),(0,r.jsx)(n.td,{children:"Inmediata"}),(0,r.jsx)(n.td,{children:"Call Stack"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed tienes un ",(0,r.jsx)(n.strong,{children:"ejemplo completo y real"})," que combina:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83e\uddf1 ",(0,r.jsx)(n.strong,{children:"Call Stack"})," (pila de llamadas)"]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd01 ",(0,r.jsx)(n.strong,{children:"Microtareas"})," (",(0,r.jsx)(n.code,{children:"Promise.then"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\u23f0 ",(0,r.jsx)(n.strong,{children:"Tareas"})," (",(0,r.jsx)(n.code,{children:"setTimeout"}),")"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Con ",(0,r.jsx)(n.strong,{children:"comentarios l\xednea por l\xednea"})," para entender perfectamente el orden de ejecuci\xf3n."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-completo",children:"\u2705 Ejemplo completo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'console.log("\ud83d\udfe2 1. Inicio del script"); // Call Stack\n\nsetTimeout(() => {\n  console.log("\u23f0 5. Tarea desde setTimeout"); // Task Queue (macrotarea)\n}, 0);\n\nPromise.resolve().then(() => {\n  console.log("\ud83d\udd01 3. Microtarea desde promesa"); // Microtask Queue\n});\n\nconsole.log("\ud83d\udfe1 2. Fin del script"); // Call Stack\n\n// Otra microtarea\nqueueMicrotask(() => {\n  console.log("\ud83d\udd01 4. Microtarea desde queueMicrotask"); // Microtask Queue\n});\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-resultado-esperado-en-consola",children:"\ud83d\udd0d Resultado esperado en consola:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"\ud83d\udfe2 1. Inicio del script\n\ud83d\udfe1 2. Fin del script\n\ud83d\udd01 3. Microtarea desde promesa\n\ud83d\udd01 4. Microtarea desde queueMicrotask\n\u23f0 5. Tarea desde setTimeout\n\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"console.log(\ud83d\udfe2 1. Inicio del script); __ Call Stack - visual selection.svg",src:a(7015).A+"",width:"720",height:"660"})}),"\n",(0,r.jsx)(n.h3,{id:"-explicaci\xf3n-paso-a-paso",children:"\ud83e\udde0 Explicaci\xf3n paso a paso:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Call Stack"})," ejecuta las funciones principales directamente:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'console.log("1")'})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"setTimeout(...)"})," registra la tarea \u2192 va a la ",(0,r.jsx)(n.strong,{children:"Task Queue"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.then(...)"})," registra la microtarea \u2192 va a la ",(0,r.jsx)(n.strong,{children:"Microtask Queue"}),"."]}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'console.log("2")'})}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"queueMicrotask(...)"})," tambi\xe9n va a la ",(0,r.jsx)(n.strong,{children:"Microtask Queue"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Cuando el ",(0,r.jsx)(n.strong,{children:"call stack se vac\xeda"}),", el Event Loop:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Ejecuta ",(0,r.jsx)(n.strong,{children:"todas las microtareas"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'console.log("3")'})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:'console.log("4")'})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Luego ejecuta ",(0,r.jsx)(n.strong,{children:"una tarea de la cola de tareas"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:'console.log("5")'})," desde ",(0,r.jsx)(n.code,{children:"setTimeout"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-conclusi\xf3n",children:"\u2705 Conclusi\xf3n:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["El ",(0,r.jsx)(n.strong,{children:"c\xf3digo s\xedncrono va primero"})," (call stack)."]}),"\n",(0,r.jsxs)(n.li,{children:["Luego ",(0,r.jsx)(n.strong,{children:"microtareas"})," (promesas, ",(0,r.jsx)(n.code,{children:"queueMicrotask"}),")."]}),"\n",(0,r.jsxs)(n.li,{children:["Por \xfaltimo, ",(0,r.jsx)(n.strong,{children:"tareas"})," como ",(0,r.jsx)(n.code,{children:"setTimeout"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Este es el ",(0,r.jsx)(n.strong,{children:"orden real de ejecuci\xf3n del Event Loop"})," en JavaScript."]}),"\n",(0,r.jsx)(n.h2,{id:"importancia-del-event-loop",children:"Importancia del Event Loop"}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.strong,{children:"Event Loop"})," es esencial en JavaScript porque permite ejecutar m\xfaltiples operaciones asincr\xf3nicas de forma eficiente y sin bloquear el hilo principal. Esto garantiza que la ",(0,r.jsx)(n.strong,{children:"interfaz de usuario siga siendo fluida y receptiva"}),", incluso cuando se manejan tareas como solicitudes de red o eventos del DOM."]}),"\n",(0,r.jsxs)(n.p,{children:["Adem\xe1s, su dise\xf1o permite manejar la ",(0,r.jsx)(n.strong,{children:"concurrencia sin m\xfaltiples hilos"}),", lo que simplifica el desarrollo y mejora el rendimiento. Al priorizar las ",(0,r.jsx)(n.strong,{children:"microtareas"})," y organizar la ejecuci\xf3n de eventos, el Event Loop optimiza la respuesta de la aplicaci\xf3n. Entender c\xf3mo funciona es clave para todo desarrollador que quiera dominar la asincron\xeda en JavaScript."]}),"\n",(0,r.jsx)(n.h2,{id:"ejemplo-de-asincron\xeda-y-event-loop-en-javascript",children:"Ejemplo de Asincron\xeda y Event Loop en JavaScript"}),"\n",(0,r.jsxs)(n.p,{children:["A continuaci\xf3n, te muestro un ",(0,r.jsx)(n.strong,{children:"ejemplo completo"})," de asincron\xeda en JavaScript utilizando la ",(0,r.jsx)(n.strong,{children:"API Fetch"})," para obtener una imagen aleatoria y mostrarla din\xe1micamente en el navegador. Este ejemplo no lo hemos hecho antes y combina asincron\xeda con manipulaci\xf3n del DOM."]}),"\n",(0,r.jsxs)(n.h3,{id:"-ejemplo-real-cargar-y-mostrar-una-imagen-aleatoria-de-un-perro-usando-asincron\xeda-fetch-asyncawait",children:["\ud83c\udfaf Ejemplo real: Cargar y mostrar una imagen aleatoria de un perro usando asincron\xeda (",(0,r.jsx)(n.code,{children:"fetch"}),", ",(0,r.jsx)(n.code,{children:"async/await"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Imagen aleatoria de perro</title>\n    <style>\n      body {\n        font-family: sans-serif;\n        text-align: center;\n        padding: 20px;\n      }\n      img {\n        max-width: 400px;\n        border-radius: 10px;\n        margin-top: 20px;\n      }\n    </style>\n  </head>\n  <body>\n    <h1>\ud83d\udc36 Ver un perro aleatorio</h1>\n    <button id="boton">Cargar imagen</button>\n    <div id="resultado"></div>\n\n    <script>\n      // Obtenemos referencias al bot\xf3n y al div donde mostraremos la imagen\n      const boton = document.getElementById("boton");\n      const resultado = document.getElementById("resultado");\n\n      // Funci\xf3n asincr\xf3nica para obtener y mostrar una imagen aleatoria\n      async function cargarPerro() {\n        try {\n          // Mostramos un mensaje mientras se carga la imagen\n          resultado.innerHTML = "\ud83d\udd04 Cargando imagen...";\n\n          // Esperamos la respuesta de la API\n          const respuesta = await fetch(\n            "https://dog.ceo/api/breeds/image/random"\n          );\n\n          // Si la respuesta no fue exitosa, lanzamos un error\n          if (!respuesta.ok) {\n            throw new Error("Error al obtener la imagen");\n          }\n\n          // Convertimos la respuesta a JSON\n          const datos = await respuesta.json();\n\n          // Creamos una imagen y la insertamos en el DOM\n          resultado.innerHTML = `<img src="${datos.message}" alt="Perro aleatorio">`;\n        } catch (error) {\n          // Si ocurre un error, lo mostramos al usuario\n          resultado.innerHTML = `\u274c Error: ${error.message}`;\n        }\n      }\n\n      // Asociamos el evento click del bot\xf3n a la funci\xf3n asincr\xf3nica\n      boton.addEventListener("click", cargarPerro);\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-muestra-este-ejemplo",children:"\ud83e\udde0 \xbfQu\xe9 muestra este ejemplo?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Una ",(0,r.jsx)(n.strong,{children:"interfaz sencilla"})," con un bot\xf3n."]}),"\n",(0,r.jsxs)(n.li,{children:["Al hacer clic, se realiza una ",(0,r.jsxs)(n.strong,{children:["petici\xf3n asincr\xf3nica (",(0,r.jsx)(n.code,{children:"fetch"}),")"]})," a una API p\xfablica."]}),"\n",(0,r.jsxs)(n.li,{children:["Se usa ",(0,r.jsx)(n.code,{children:"*async/await**"})," para esperar la respuesta sin bloquear el navegador."]}),"\n",(0,r.jsxs)(n.li,{children:["Se maneja el error con ",(0,r.jsx)(n.code,{children:"*try...catch**"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"El resultado (una imagen) se muestra en la p\xe1gina al terminar la operaci\xf3n."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Este tipo de l\xf3gica es muy com\xfan en apps modernas (galer\xedas, redes sociales, dashboards, etc.) donde se carga contenido desde servidores externos ",(0,r.jsx)(n.strong,{children:"sin recargar la p\xe1gina"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed tienes ",(0,r.jsx)(n.strong,{children:"otro ejemplo completamente diferente"})," de asincron\xeda en JavaScript: esta vez vamos a ",(0,r.jsx)(n.strong,{children:"simular una animaci\xf3n por pasos"})," usando ",(0,r.jsx)(n.code,{children:"async/await"})," con una funci\xf3n que espera con ",(0,r.jsx)(n.code,{children:"setTimeout"}),", controlando el flujo como si fueran acciones secuenciales."]}),"\n",(0,r.jsxs)(n.h3,{id:"-ejemplo-simulaci\xf3n-de-una-animaci\xf3n-paso-a-paso-con-asyncawait",children:["\ud83c\udfaf Ejemplo: Simulaci\xf3n de una animaci\xf3n paso a paso con ",(0,r.jsx)(n.code,{children:"async/await"})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Simulaci\xf3n paso a paso</title>\n    <style>\n      #output {\n        font-family: monospace;\n        padding: 10px;\n        background-color: #f4f4f4;\n        border: 1px solid #ccc;\n        width: 300px;\n        margin: 20px auto;\n        text-align: left;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>\ud83d\udea6 Simulaci\xf3n de sem\xe1foro</h2>\n    <button id="iniciar">Iniciar</button>\n    <div id="output">Pulsa el bot\xf3n para comenzar</div>\n\n    <script>\n      const output = document.getElementById("output");\n      const boton = document.getElementById("iniciar");\n\n      // Funci\xf3n que espera una cantidad de milisegundos y luego resuelve\n      function esperar(ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n      }\n\n      // Funci\xf3n asincr\xf3nica que simula un sem\xe1foro paso a paso\n      async function simularSemaforo() {\n        output.textContent = "\ud83d\udd34 Rojo - Detente";\n        await esperar(2000); // Esperamos 2 segundos\n\n        output.textContent = "\ud83d\udfe1 Amarillo - Prep\xe1rate";\n        await esperar(1500); // Esperamos 1.5 segundos\n\n        output.textContent = "\ud83d\udfe2 Verde - Avanza";\n        await esperar(2000); // Esperamos 2 segundos\n\n        output.textContent = "\u26ab Ciclo completado";\n      }\n\n      // Al hacer clic en el bot\xf3n, ejecutamos la simulaci\xf3n\n      boton.addEventListener("click", simularSemaforo);\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hace-este-ejemplo",children:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Simula un ",(0,r.jsx)(n.strong,{children:"sema\u0301foro"})," cambiando los mensajes en la interfaz."]}),"\n",(0,r.jsxs)(n.li,{children:["Usa una funci\xf3n llamada ",(0,r.jsx)(n.code,{children:"esperar(ms)"})," que devuelve una promesa resuelta tras cierto tiempo."]}),"\n",(0,r.jsxs)(n.li,{children:["Con ",(0,r.jsx)(n.code,{children:"await"}),", detenemos el flujo ",(0,r.jsx)(n.strong,{children:"sin bloquear el navegador"}),", esperando el tiempo indicado."]}),"\n",(0,r.jsx)(n.li,{children:"El resultado se muestra en orden, como si fuese un proceso visual paso a paso."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Este tipo de asincron\xeda es muy \xfatil para:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Simulaciones educativas."}),"\n",(0,r.jsx)(n.li,{children:"Animaciones secuenciales controladas por l\xf3gica."}),"\n",(0,r.jsx)(n.li,{children:"Control de flujos visuales paso a paso (tutoriales, juegos, etc.)."}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"promesas-avanzadas",children:"Promesas Avanzadas"}),"\n",(0,r.jsx)(n.h2,{id:"promiseall",children:"Promise.all"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-promiseall",children:["\ud83e\udde0 \xbfQu\xe9 es ",(0,r.jsx)(n.code,{children:"Promise.all()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*Promise.all()**"})," es un m\xe9todo de JavaScript que te permite ",(0,r.jsx)(n.strong,{children:"ejecutar varias promesas al mismo tiempo"})," y ",(0,r.jsx)(n.strong,{children:"esperar a que todas terminen"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Sirve para casos donde necesitas ",(0,r.jsx)(n.strong,{children:"varios datos al mismo tiempo"})," antes de continuar."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\ud83e\uddfe Pi\xe9nsalo as\xed: \u201cNo contin\xfaes hasta que todos estos pedidos est\xe9n listos\u201d."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-y-comentado-3",children:"\u2705 Ejemplo real y comentado"}),"\n",(0,r.jsxs)(n.p,{children:["Supongamos que quieres ",(0,r.jsx)(n.strong,{children:"obtener informaci\xf3n de tres usuarios diferentes"})," desde una API."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Promise.all ejemplo</title>\n  </head>\n  <body>\n    <h2>Usuarios cargados:</h2>\n    <ul id="lista"></ul>\n\n    <script>\n      const lista = document.getElementById("lista");\n\n      // Funci\xf3n que obtiene un usuario por ID\n      function obtenerUsuario(id) {\n        // Retorna una promesa fetch\n        return fetch(`https://jsonplaceholder.typicode.com/users/${id}`).then(\n          (res) => res.json()\n        );\n      }\n\n      // Ejecutamos m\xfaltiples promesas a la vez con Promise.all\n      Promise.all([\n        obtenerUsuario(1), // Promesa 1\n        obtenerUsuario(2), // Promesa 2\n        obtenerUsuario(3), // Promesa 3\n      ])\n        .then((usuarios) => {\n          // Solo se entra aqu\xed cuando TODAS las promesas se resolvieron\n\n          usuarios.forEach((usuario) => {\n            // Creamos un <li> por cada usuario\n            const item = document.createElement("li");\n            item.textContent = `${usuario.name} (${usuario.email})`;\n            lista.appendChild(item);\n          });\n        })\n        .catch((error) => {\n          // Si alguna promesa falla, se captura aqu\xed\n          console.error("\u274c Ocurri\xf3 un error al obtener los usuarios:", error);\n        });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hace-este-ejemplo-1",children:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Crea 3 peticiones asincr\xf3nicas a una API de prueba."}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.all([...])"})," ejecuta ",(0,r.jsx)(n.strong,{children:"todas a la vez"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Espera hasta que ",(0,r.jsx)(n.strong,{children:"las 3 promesas est\xe9n resueltas"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Luego muestra los usuarios en una lista HTML."}),"\n",(0,r.jsxs)(n.li,{children:["Si ",(0,r.jsx)(n.strong,{children:"una sola promesa falla"}),", el ",(0,r.jsx)(n.code,{children:"catch"})," captura el error."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-cu\xe1ndo-usar-promiseall",children:["\ud83e\udde0 \xbfCu\xe1ndo usar ",(0,r.jsx)(n.code,{children:"Promise.all()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cuando necesitas ",(0,r.jsx)(n.strong,{children:"esperar varias cosas al mismo tiempo"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Por ejemplo:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cargar varias im\xe1genes."}),"\n",(0,r.jsx)(n.li,{children:"Obtener varios archivos o usuarios."}),"\n",(0,r.jsx)(n.li,{children:"Hacer m\xfaltiples peticiones a la vez y procesarlas juntas."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"promiserace",children:"Promise.race"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-promiserace",children:["\ud83c\udfc1 \xbfQu\xe9 es ",(0,r.jsx)(n.code,{children:"Promise.race()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"*Promise.race()**"})," ejecuta varias promesas al mismo tiempo, ",(0,r.jsx)(n.strong,{children:"pero solo se resuelve (o rechaza) con la que termine primero"}),", ",(0,r.jsx)(n.strong,{children:"sin importar si fue \xe9xito o error"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\ud83e\uddfe Piensa en una carrera de promesas: solo importa qui\xe9n llega primero, no c\xf3mo."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-simular-dos-tareas-una-lenta-y-una-r\xe1pida",children:"\u2705 Ejemplo real: simular dos tareas, una lenta y una r\xe1pida"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Promise.race ejemplo</title>\n  </head>\n  <body>\n    <h2>Resultado de la carrera:</h2>\n    <div id="resultado">Esperando...</div>\n\n    <script>\n      const resultado = document.getElementById("resultado");\n\n      // Funci\xf3n que crea una promesa que se resuelve despu\xe9s de cierto tiempo\n      function tarea(nombre, tiempo) {\n        return new Promise((resolve) => {\n          setTimeout(() => {\n            resolve(`\u2705 ${nombre} termin\xf3 en ${tiempo}ms`);\n          }, tiempo);\n        });\n      }\n\n      // Ejecutamos dos tareas con tiempos diferentes\n      Promise.race([\n        tarea("Tarea R\xc1PIDA", 1000), // Se resolver\xe1 en 1 segundo\n        tarea("Tarea LENTA", 3000), // Se resolver\xe1 en 3 segundos\n      ])\n        .then((mensaje) => {\n          // Solo se ejecuta la primera promesa que se resuelva\n          resultado.textContent = mensaje;\n        })\n        .catch((error) => {\n          // Si la primera promesa en completarse falla, se captura aqu\xed\n          resultado.textContent = `\u274c Error: ${error}`;\n        });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed-1",children:"\ud83d\udd0d \xbfQu\xe9 pasa aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"tarea()"})," devuelve una promesa que se resuelve despu\xe9s de un tiempo."]}),"\n",(0,r.jsxs)(n.li,{children:["Usamos ",(0,r.jsx)(n.code,{children:"Promise.race()"})," para ",(0,r.jsx)(n.strong,{children:"lanzar dos tareas al mismo tiempo"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["La que termine primero, gana:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["En este caso, ",(0,r.jsx)(n.strong,{children:"\u201cTarea R\xc1PIDA\u201d"})," se resuelve antes, y el ",(0,r.jsx)(n.code,{children:".then()"})," muestra el resultado."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Si la primera promesa en terminar fuera un error (usando ",(0,r.jsx)(n.code,{children:"reject"}),"), entonces ",(0,r.jsx)(n.code,{children:".catch()"})," lo capturar\xeda."]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-cu\xe1ndo-usar-promiserace",children:["\ud83e\udde0 \xbfCu\xe1ndo usar ",(0,r.jsx)(n.code,{children:"Promise.race()"}),"?"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Para ejecutar ",(0,r.jsx)(n.strong,{children:"varias estrategias y quedarte con la m\xe1s r\xe1pida"})," (por ejemplo, cargar datos desde varios servidores)."]}),"\n",(0,r.jsxs)(n.li,{children:["Para implementar ",(0,r.jsx)(n.strong,{children:"timeouts personalizados"})," (si la promesa tarda mucho, rechazas t\xfa mismo)."]}),"\n",(0,r.jsxs)(n.li,{children:["Para mejorar la ",(0,r.jsx)(n.strong,{children:"experiencia del usuario"})," eligiendo la primera respuesta disponible."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed tienes un ",(0,r.jsx)(n.strong,{children:"ejemplo pr\xe1ctico y muy com\xfan"}),": usar ",(0,r.jsx)(n.code,{children:"**Promise.race()**"})," para ",(0,r.jsx)(n.strong,{children:"cancelar una operaci\xf3n lenta"})," si ",(0,r.jsx)(n.strong,{children:"supera un l\xedmite de tiempo"}),"."]}),"\n",(0,r.jsx)(n.h3,{id:"-escenario-real",children:"\ud83c\udfaf Escenario real:"}),"\n",(0,r.jsxs)(n.p,{children:["Queremos ",(0,r.jsx)(n.strong,{children:"hacer una petici\xf3n a una API"}),", pero ",(0,r.jsx)(n.strong,{children:"cancelarla si tarda m\xe1s de 3 segundos"}),", para no dejar al usuario esperando indefinidamente."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-completo-con-comentarios-l\xednea-por-l\xednea",children:"\u2705 Ejemplo completo con comentarios l\xednea por l\xednea"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Promise.race con timeout</title>\n  </head>\n  <body>\n    <h2>Resultado de la petici\xf3n:</h2>\n    <div id="estado">Esperando respuesta...</div>\n\n    <script>\n      const estado = document.getElementById("estado");\n\n      // Funci\xf3n que simula una petici\xf3n lenta (ej: fetch real)\n      function peticionLenta() {\n        return new Promise((resolve) => {\n          // Simulamos 5 segundos de demora (muy lenta)\n          setTimeout(() => {\n            resolve("\u2705 Datos recibidos correctamente");\n          }, 5000);\n        });\n      }\n\n      // Funci\xf3n que act\xfaa como temporizador (rechaza si pasa demasiado tiempo)\n      function timeout(ms) {\n        return new Promise((_, reject) => {\n          setTimeout(() => {\n            reject("\u23f0 Tiempo de espera superado (timeout)");\n          }, ms);\n        });\n      }\n\n      // Usamos Promise.race para ejecutar ambas al mismo tiempo\n      Promise.race([\n        peticionLenta(), // operaci\xf3n lenta\n        timeout(3000), // timeout de 3 segundos\n      ])\n        .then((respuesta) => {\n          // Si la petici\xf3n termina antes del timeout\n          estado.textContent = respuesta;\n        })\n        .catch((error) => {\n          // Si el timeout se dispara primero\n          estado.textContent = `\u274c Error: ${error}`;\n        });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-est\xe1-pasando",children:"\ud83d\udd0d \xbfQu\xe9 est\xe1 pasando?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"peticionLenta()"})," tarda 5 segundos \u2192 ",(0,r.jsx)(n.strong,{children:"m\xe1s de lo permitido"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"timeout(3000)"})," se dispara a los 3 segundos \u2192 ",(0,r.jsx)(n.strong,{children:"gana la carrera"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Promise.race()"})," rechaza primero, y entra al ",(0,r.jsx)(n.code,{children:".catch()"})," con el mensaje de timeout."]}),"\n",(0,r.jsxs)(n.li,{children:["Si cambi\xe1ramos la petici\xf3n a que tarde solo 2 segundos, entonces ganar\xeda y se ejecutar\xeda el ",(0,r.jsx)(n.code,{children:".then()"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-cu\xe1ndo-usar-esto",children:"\u2705 \xbfCu\xe1ndo usar esto?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cuando quieres proteger tu app de servicios lentos o ca\xeddos."}),"\n",(0,r.jsxs)(n.li,{children:["Para mejorar la UX con ",(0,r.jsx)(n.strong,{children:"timeouts personalizados"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Para evitar dejar a tus usuarios esperando indefinidamente por un recurso."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"encadenamiento-de-promesas-con-asyncawait",children:"Encadenamiento de Promesas con Async/Await"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-el-encadenamiento-de-promesas-con-asyncawait",children:["\ud83d\udd17 \xbfQu\xe9 es el encadenamiento de promesas con ",(0,r.jsx)(n.code,{children:"async/await"}),"?"]}),"\n",(0,r.jsxs)(n.p,{children:["El ",(0,r.jsx)(n.strong,{children:"encadenamiento"})," es cuando haces ",(0,r.jsx)(n.strong,{children:"varias operaciones asincr\xf3nicas"})," una detr\xe1s de otra, donde ",(0,r.jsx)(n.strong,{children:"el resultado de una se usa en la siguiente"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Con ",(0,r.jsx)(n.code,{children:"async/await"}),", esto se hace escribiendo el c\xf3digo en ",(0,r.jsx)(n.strong,{children:"orden secuencial"}),", como si fuera c\xf3digo normal, pero ",(0,r.jsx)(n.strong,{children:"esperando a que cada promesa se resuelva"})," antes de seguir."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-real-y-comentado-obtener-un-post-y-luego-los-comentarios-de-ese-post",children:"\u2705 Ejemplo real y comentado: obtener un post y luego los comentarios de ese post"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Encadenamiento async/await</title>\n  </head>\n  <body>\n    <h2>Post y comentarios</h2>\n    <div id="resultado">Cargando...</div>\n\n    <script>\n      const resultado = document.getElementById("resultado");\n\n      // Funci\xf3n asincr\xf3nica que encadena dos peticiones\n      async function cargarPostYComentarios() {\n        try {\n          // Paso 1: Obtenemos un post\n          const resPost = await fetch(\n            "https://jsonplaceholder.typicode.com/posts/1"\n          );\n          const post = await resPost.json();\n\n          // Mostramos el t\xedtulo del post\n          resultado.innerHTML = `<h3>${post.title}</h3><p>${post.body}</p><hr><h4>Comentarios:</h4>`;\n\n          // Paso 2: Obtenemos los comentarios de ese post\n          const resComentarios = await fetch(\n            `https://jsonplaceholder.typicode.com/posts/1/comments`\n          );\n          const comentarios = await resComentarios.json();\n\n          // Paso 3: Mostramos los comentarios\n          comentarios.forEach((comentario) => {\n            resultado.innerHTML += `<p><strong>${comentario.name}</strong>: ${comentario.body}</p>`;\n          });\n        } catch (error) {\n          // Manejamos cualquier error en las dos peticiones\n          resultado.textContent = `\u274c Error: ${error.message}`;\n        }\n      }\n\n      // Ejecutamos la funci\xf3n al cargar la p\xe1gina\n      cargarPostYComentarios();\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hace-este-ejemplo-2",children:"\ud83d\udd0d \xbfQu\xe9 hace este ejemplo?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Hace una ",(0,r.jsx)(n.strong,{children:"primera petici\xf3n"})," para obtener un post."]}),"\n",(0,r.jsxs)(n.li,{children:["Espera con ",(0,r.jsx)(n.code,{children:"await"})," hasta que se recibe el resultado."]}),"\n",(0,r.jsxs)(n.li,{children:["Luego hace una ",(0,r.jsx)(n.strong,{children:"segunda petici\xf3n"})," relacionada: los comentarios del post."]}),"\n",(0,r.jsxs)(n.li,{children:["Tambi\xe9n la espera con ",(0,r.jsx)(n.code,{children:"await"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Al final muestra todo junto en pantalla."}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"-ventajas-de-encadenar-promesas-con-asyncawait",children:["\ud83e\udde0 Ventajas de encadenar promesas con ",(0,r.jsx)(n.code,{children:"async/await"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["C\xf3digo m\xe1s ",(0,r.jsx)(n.strong,{children:"limpio y f\xe1cil de leer"})," que usando ",(0,r.jsx)(n.code,{children:".then().then().then()"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Parece c\xf3digo ",(0,r.jsx)(n.strong,{children:"sincr\xf3nico"}),", aunque todo es asincr\xf3nico."]}),"\n",(0,r.jsxs)(n.li,{children:["M\xe1s f\xe1cil de manejar errores con un \xfanico ",(0,r.jsx)(n.code,{children:"try...catch"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"manejo-de-errores-en-asincron\xeda",children:"Manejo de Errores en Asincron\xeda"}),"\n",(0,r.jsx)(n.h2,{id:"-por-qu\xe9-manejar-errores-en-c\xf3digo-asincr\xf3nico",children:"\ud83e\udde8 \xbfPor qu\xe9 manejar errores en c\xf3digo asincr\xf3nico?"}),"\n",(0,r.jsxs)(n.p,{children:["Cuando haces tareas asincr\xf3nicas (como peticiones ",(0,r.jsx)(n.code,{children:"fetch"}),", lectura de archivos, temporizadores, etc.), ",(0,r.jsx)(n.strong,{children:"algo puede fallar"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Fallo de conexi\xf3n"}),"\n",(0,r.jsx)(n.li,{children:"URL incorrecta"}),"\n",(0,r.jsx)(n.li,{children:"JSON mal formado"}),"\n",(0,r.jsx)(n.li,{children:"Tiempo excedido (timeout)"}),"\n",(0,r.jsx)(n.li,{children:"C\xf3digo del servidor que devuelve error"}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Si ",(0,r.jsx)(n.strong,{children:"no manejas los errores"}),", la app puede ",(0,r.jsx)(n.strong,{children:"romperse silenciosamente"})," o dar mensajes confusos."]}),"\n",(0,r.jsxs)(n.h2,{id:"-1-manejo-de-errores-con-catch-promesas-encadenadas",children:["\ud83e\uddf1 1. ",(0,r.jsxs)(n.strong,{children:["Manejo de errores con ",(0,r.jsx)(n.code,{children:".catch()"})," (promesas encadenadas)"]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'fetch("https://jsonplaceholder.typicode.com/posts/12345") // ID inv\xe1lido\n  .then((respuesta) => {\n    if (!respuesta.ok) {\n      // Si el estado HTTP no es exitoso, lanzamos un error manual\n      throw new Error("\u274c Error al obtener el post");\n    }\n    return respuesta.json(); // Convertimos a JSON\n  })\n  .then((datos) => {\n    console.log("\u2705 Post recibido:", datos);\n  })\n  .catch((error) => {\n    // Captura cualquier error ocurrido antes\n    console.error("\ud83e\udde8 Error capturado:", error.message);\n  });\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa-aqu\xed-2",children:"\ud83d\udd0d Qu\xe9 pasa aqu\xed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Si la URL est\xe1 mal o el ID no existe, se lanza un ",(0,r.jsx)(n.code,{children:"Error"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:".catch()"})," captura ",(0,r.jsx)(n.strong,{children:"cualquier error"})," que ocurra en la cadena anterior."]}),"\n",(0,r.jsx)(n.li,{children:"Esto es esencial para mantener control sobre lo que ocurre en tu app."}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"-2-manejo-de-errores-con-asyncawait--trycatch-m\xe1s-moderno",children:["\ud83e\uddf1 2. ",(0,r.jsxs)(n.strong,{children:["Manejo de errores con ",(0,r.jsx)(n.code,{children:"async/await"})," + ",(0,r.jsx)(n.code,{children:"try...catch"})," (m\xe1s moderno)"]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'async function obtenerPost() {\n  try {\n    const respuesta = await fetch(\n      "https://jsonplaceholder.typicode.com/posts/9999"\n    ); // ID posiblemente inexistente\n\n    if (!respuesta.ok) {\n      // Si la respuesta HTTP no es exitosa, lanzamos error\n      throw new Error("\u274c Post no encontrado");\n    }\n\n    const datos = await respuesta.json();\n    console.log("\u2705 Post recibido:", datos);\n  } catch (error) {\n    // Captura cualquier error ocurrido en el bloque try\n    console.error("\ud83e\udde8 Error capturado:", error.message);\n  }\n}\n\n// Llamamos a la funci\xf3n\nobtenerPost();\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"-ventajas-de-trycatch-con-asyncawait",children:["\u2705 Ventajas de ",(0,r.jsx)(n.code,{children:"try...catch"})," con ",(0,r.jsx)(n.code,{children:"async/await"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["C\xf3digo ",(0,r.jsx)(n.strong,{children:"m\xe1s limpio"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Permite manejar m\xfaltiples operaciones dentro de un mismo bloque."}),"\n",(0,r.jsx)(n.li,{children:"F\xe1cil de leer, m\xe1s parecido a c\xf3digo s\xedncrono."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-reglas-importantes",children:"\ud83e\udde0 Reglas importantes:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Siempre maneja errores en tareas asincr\xf3nicas"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si usas ",(0,r.jsx)(n.code,{children:".then()"}),", ",(0,r.jsxs)(n.strong,{children:["usa ",(0,r.jsx)(n.code,{children:".catch()"})," al final"]}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si usas ",(0,r.jsx)(n.code,{children:"async/await"}),", ",(0,r.jsxs)(n.strong,{children:["usa ",(0,r.jsx)(n.code,{children:"try...catch"})]}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Revisa siempre ",(0,r.jsx)(n.code,{children:"response.ok"})," antes de convertir a JSON."]}),"\n",(0,r.jsxs)(n.li,{children:["No uses ",(0,r.jsx)(n.code,{children:"throw"})," a lo loco: l\xe1nzalo solo con sentido (cuando algo falla de verdad)."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["A continuaci\xf3n te muestro un ejemplo real en el que se ",(0,r.jsx)(n.strong,{children:"simulan errores de red"})," y se implementa un ",(0,r.jsx)(n.strong,{children:"sistema de reintento autom\xe1tico (retry)"})," si algo falla. Esto es muy \xfatil en aplicaciones reales cuando una API puede fallar ",(0,r.jsx)(n.strong,{children:"temporalmente"}),", pero quieres volver a intentarlo antes de mostrar error al usuario."]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo",children:"\ud83c\udfaf Objetivo:"}),"\n",(0,r.jsxs)(n.p,{children:["Hacer una petici\xf3n ",(0,r.jsx)(n.code,{children:"fetch"}),", y si falla (por red o error HTTP), ",(0,r.jsx)(n.strong,{children:"reintentarla hasta 3 veces"})," antes de rendirse."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-real-con-retry-autom\xe1tico-y-comentarios-l\xednea-por-l\xednea",children:"\u2705 Ejemplo real con retry autom\xe1tico y comentarios l\xednea por l\xednea:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Retry autom\xe1tico con fetch</title>\n  </head>\n  <body>\n    <h2>Resultado:</h2>\n    <pre id="resultado">Esperando respuesta...</pre>\n\n    <script>\n      const resultado = document.getElementById("resultado");\n\n      // Funci\xf3n asincr\xf3nica que reintenta una petici\xf3n hasta 3 veces\n      async function fetchConRetry(url, intentos = 3, delay = 1000) {\n        for (let intento = 1; intento <= intentos; intento++) {\n          try {\n            resultado.textContent = `\ud83d\udd04 Intento ${intento} de ${intentos}...`;\n\n            // Simulamos una posible URL incorrecta o error de red\n            const res = await fetch(url);\n\n            if (!res.ok) {\n              throw new Error(`\u274c Error HTTP ${res.status}`);\n            }\n\n            const datos = await res.json();\n            return datos; // Salimos del bucle si todo fue bien\n          } catch (error) {\n            // Mostramos error temporal\n            console.warn(`\u26a0\ufe0f Error en intento ${intento}: ${error.message}`);\n\n            if (intento === intentos) {\n              throw new Error("\ud83d\udeab Todos los intentos fallaron");\n            }\n\n            // Esperamos un poco antes de reintentar\n            await new Promise((res) => setTimeout(res, delay));\n          }\n        }\n      }\n\n      // Ejecutamos la funci\xf3n\n      (async () => {\n        try {\n          // Puedes probar con una URL inv\xe1lida o v\xe1lida para ver el comportamiento\n          const datos = await fetchConRetry(\n            "https://jsonplaceholder.typicode.com/posts/1",\n            3\n          );\n\n          resultado.textContent = `\u2705 Petici\xf3n exitosa:\\n\\n${JSON.stringify(\n            datos,\n            null,\n            2\n          )}`;\n        } catch (errorFinal) {\n          resultado.textContent = `\u274c Fallo definitivo: ${errorFinal.message}`;\n        }\n      })();\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-hace-este-ejemplo-3",children:"\ud83d\udd0d Qu\xe9 hace este ejemplo:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["La funci\xf3n ",(0,r.jsx)(n.code,{children:"fetchConRetry()"})," intenta hacer ",(0,r.jsx)(n.code,{children:"fetch()"})," hasta 3 veces."]}),"\n",(0,r.jsxs)(n.li,{children:["Si ocurre un error (por red o HTTP no v\xe1lido), entra en el ",(0,r.jsx)(n.code,{children:"catch"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si no es el \xfaltimo intento, ",(0,r.jsx)(n.strong,{children:"espera 1 segundo"})," antes de volver a intentar."]}),"\n",(0,r.jsxs)(n.li,{children:["Si en el tercer intento ",(0,r.jsx)(n.strong,{children:"a\xfan falla"}),", lanza un error final que se captura fuera."]}),"\n",(0,r.jsx)(n.li,{children:"El usuario ve en pantalla si fue exitoso o si todos los intentos fallaron."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-cu\xe1ndo-usar-esta-t\xe9cnica",children:"\ud83e\udde0 \xbfCu\xe1ndo usar esta t\xe9cnica?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Cuando consumes APIs que a veces fallan por carga o latencia."}),"\n",(0,r.jsx)(n.li,{children:"En apps m\xf3viles o conexiones inestables."}),"\n",(0,r.jsx)(n.li,{children:"Cuando no quieres frustrar al usuario con errores inmediatos."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"condiciones-de-carrera",children:"Condiciones de Carrera"}),"\n",(0,r.jsxs)(n.h2,{id:"-qu\xe9-es-una-condici\xf3n-de-carrera-en-javascript",children:["\ud83e\udde0 \xbfQu\xe9 es una ",(0,r.jsx)(n.em,{children:"condici\xf3n de carrera"})," en JavaScript?"]}),"\n",(0,r.jsxs)(n.p,{children:["Una ",(0,r.jsx)(n.strong,{children:"condici\xf3n de carrera"})," (race condition) ocurre cuando ",(0,r.jsx)(n.strong,{children:"dos o m\xe1s operaciones asincr\xf3nicas"})," intentan modificar o usar ",(0,r.jsx)(n.strong,{children:"los mismos datos"}),", y el ",(0,r.jsx)(n.strong,{children:"resultado final depende del orden en que terminen"}),"."]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u26a0\ufe0f Problema: Como no sabemos cu\xe1l operaci\xf3n se completar\xe1 primero, el resultado puede ser incorrecto o inesperado."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-ejemplo-real-dos-peticiones-que-modifican-el-mismo-contenido",children:"\ud83c\udfaf Ejemplo real: dos peticiones que modifican el mismo contenido"}),"\n",(0,r.jsxs)(n.p,{children:["Imagina que tienes un bot\xf3n que ",(0,r.jsx)(n.strong,{children:"carga informaci\xf3n de usuario"}),", pero el usuario hace clic dos veces muy r\xe1pido."]}),"\n",(0,r.jsx)(n.h3,{id:"-c\xf3digo-con-condici\xf3n-de-carrera",children:"\u2705 C\xf3digo con condici\xf3n de carrera:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Condici\xf3n de carrera</title>\n  </head>\n  <body>\n    <h2>Datos del usuario:</h2>\n    <button id="cargar">Cargar Usuario</button>\n    <div id="resultado">Sin datos</div>\n\n    <script>\n      const boton = document.getElementById("cargar");\n      const resultado = document.getElementById("resultado");\n\n      // Funci\xf3n asincr\xf3nica que simula una petici\xf3n lenta\n      async function cargarUsuario(id) {\n        const respuesta = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`\n        );\n        const datos = await respuesta.json();\n        resultado.textContent = `\ud83d\udc64 ${datos.name}`;\n      }\n\n      // Al hacer clic varias veces r\xe1pido, cargamos diferentes usuarios\n      let idActual = 1;\n\n      boton.addEventListener("click", () => {\n        cargarUsuario(idActual);\n        idActual++; // Aumentamos el ID para la pr\xf3xima petici\xf3n\n      });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-ocurre-aqu\xed",children:"\ud83d\udd0d \xbfQu\xe9 ocurre aqu\xed?"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["Si haces clic ",(0,r.jsx)(n.strong,{children:"dos veces muy r\xe1pido"}),", por ejemplo:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cargarUsuario(1)"})," empieza (pero es lenta)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"cargarUsuario(2)"})," tambi\xe9n empieza (m\xe1s r\xe1pida)"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Si la ",(0,r.jsx)(n.strong,{children:"segunda petici\xf3n termina antes"}),", se muestra el usuario 2."]}),"\n",(0,r.jsxs)(n.li,{children:["Luego, cuando ",(0,r.jsx)(n.strong,{children:"la primera termina"}),", ",(0,r.jsx)(n.strong,{children:"sobrescribe"})," el resultado y aparece el usuario 1."]}),"\n",(0,r.jsxs)(n.li,{children:["Resultado: la pantalla muestra datos ",(0,r.jsx)(n.strong,{children:"incorrectos o desactualizados"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"\u26a0\ufe0f Esto es una condici\xf3n de carrera: el resultado depende del orden en que llegan las respuestas, no del orden en que se lanzaron."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3mo-evitar-condiciones-de-carrera-forma-sencilla",children:"\u2705 C\xf3mo evitar condiciones de carrera (forma sencilla)"}),"\n",(0,r.jsxs)(n.p,{children:["Una forma simple es ",(0,r.jsx)(n.strong,{children:"cancelar"})," o ",(0,r.jsx)(n.strong,{children:"ignorar"})," resultados viejos si llega uno m\xe1s nuevo."]}),"\n",(0,r.jsx)(n.h3,{id:"-ejemplo-corregido-con-control-de-versi\xf3n",children:"\ud83d\udd27 Ejemplo corregido con control de versi\xf3n:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'let ultimaPeticion = 0;\n\nasync function cargarUsuario(id) {\n  const numeroPeticion = ++ultimaPeticion; // Asignamos un n\xfamero \xfanico a esta petici\xf3n\n\n  const respuesta = await fetch(\n    `https://jsonplaceholder.typicode.com/users/${id}`\n  );\n  const datos = await respuesta.json();\n\n  if (numeroPeticion === ultimaPeticion) {\n    // Solo mostramos el resultado si esta es la \xfaltima petici\xf3n enviada\n    resultado.textContent = `\u2705 ${datos.name}`;\n  } else {\n    console.warn("\u26a0\ufe0f Resultado descartado por ser una petici\xf3n anterior");\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-resultado",children:"\u2705 Resultado:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Solo la ",(0,r.jsx)(n.strong,{children:"\xfaltima petici\xf3n activa"})," puede actualizar el DOM."]}),"\n",(0,r.jsxs)(n.li,{children:["Si otra termina m\xe1s tarde, ",(0,r.jsx)(n.strong,{children:"se ignora"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-cu\xe1ndo-preocuparse-por-esto",children:"\ud83e\udde0 \xbfCu\xe1ndo preocuparse por esto?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["En apps con ",(0,r.jsx)(n.strong,{children:"b\xfasquedas en vivo"}),", formularios din\xe1micos, carga de im\xe1genes, etc."]}),"\n",(0,r.jsxs)(n.li,{children:["Siempre que lances ",(0,r.jsx)(n.strong,{children:"varias peticiones r\xe1pidas"}),", especialmente si dependen de entradas del usuario."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Vamos a hacer un ejemplo real y visual de ",(0,r.jsx)(n.strong,{children:"b\xfasqueda en vivo"})," con un campo de texto. Al escribir, se hace una petici\xf3n asincr\xf3nica simulada, pero si escribes muy r\xe1pido, se genera una ",(0,r.jsx)(n.strong,{children:"condici\xf3n de carrera"}),": puede mostrarse el resultado de una b\xfasqueda anterior que termin\xf3 m\xe1s tarde."]}),"\n",(0,r.jsxs)(n.p,{children:["Te mostrar\xe9 ",(0,r.jsx)(n.strong,{children:"dos versiones"}),":"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 La versi\xf3n ",(0,r.jsx)(n.em,{children:"con condici\xf3n de carrera"})," (mal)."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 La versi\xf3n ",(0,r.jsx)(n.em,{children:"corregida"})," que evita el problema."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-versi\xf3n-1-condici\xf3n-de-carrera-resultado-incorrecto-si-escribes-r\xe1pido",children:"\ud83d\udd0d VERSI\xd3N 1: CONDICI\xd3N DE CARRERA (resultado incorrecto si escribes r\xe1pido)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>B\xfasqueda en vivo (con condici\xf3n de carrera)</title>\n    <style>\n      body {\n        font-family: sans-serif;\n        padding: 20px;\n      }\n      input {\n        padding: 10px;\n        width: 300px;\n      }\n      .resultado {\n        margin-top: 20px;\n        font-weight: bold;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>\ud83d\udd0d Buscar usuario</h2>\n    <input type="text" id="busqueda" placeholder="Escribe un ID (1 al 10)..." />\n    <div class="resultado" id="resultado">Esperando b\xfasqueda...</div>\n\n    <script>\n      const input = document.getElementById("busqueda");\n      const resultado = document.getElementById("resultado");\n\n      // Simulamos una b\xfasqueda asincr\xf3nica lenta\n      async function buscarUsuario(id) {\n        resultado.textContent = `\ud83d\udd04 Buscando usuario ${id}...`;\n        await new Promise((res) => setTimeout(res, Math.random() * 2000 + 500)); // Tiempo aleatorio\n\n        const res = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`\n        );\n        if (!res.ok) {\n          resultado.textContent = "\u274c Usuario no encontrado.";\n          return;\n        }\n\n        const datos = await res.json();\n        resultado.textContent = `\ud83d\udc64 ${datos.name} (${datos.email})`;\n      }\n\n      input.addEventListener("input", () => {\n        const id = input.value.trim();\n        if (id && !isNaN(id)) {\n          buscarUsuario(id);\n        }\n      });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-pasa",children:"\ud83d\udd0d Qu\xe9 pasa:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:'Si escribes "1", luego "2", luego "3" muy r\xe1pido...'}),"\n",(0,r.jsxs)(n.li,{children:['Es posible que la b\xfasqueda de "1" tarde m\xe1s y ',(0,r.jsx)(n.strong,{children:"aparezca al final"}),', aunque ya est\xe9s buscando "3".']}),"\n",(0,r.jsxs)(n.li,{children:["Resultado: ",(0,r.jsx)(n.strong,{children:"informaci\xf3n incorrecta en pantalla"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["A continuaci\xf3n te muestro la ",(0,r.jsx)(n.strong,{children:"versi\xf3n corregida"})," del ejemplo anterior, usando una t\xe9cnica muy sencilla y eficaz: ",(0,r.jsxs)(n.strong,{children:["control de versiones con un ",(0,r.jsx)(n.code,{children:"requestId"})]}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["As\xed garantizamos que ",(0,r.jsx)(n.strong,{children:"solo se muestre el resultado de la \xfaltima b\xfasqueda activa"}),", ignorando cualquier b\xfasqueda anterior que termine despu\xe9s."]}),"\n",(0,r.jsxs)(n.h2,{id:"-versi\xf3n-corregida-sin-condici\xf3n-de-carrera-control-con-requestid",children:["\u2705 VERSI\xd3N CORREGIDA: SIN condici\xf3n de carrera (control con ",(0,r.jsx)(n.code,{children:"requestId"}),")"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>B\xfasqueda en vivo (sin condici\xf3n de carrera)</title>\n    <style>\n      body {\n        font-family: sans-serif;\n        padding: 20px;\n      }\n      input {\n        padding: 10px;\n        width: 300px;\n      }\n      .resultado {\n        margin-top: 20px;\n        font-weight: bold;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>\ud83d\udd0d Buscar usuario</h2>\n    <input type="text" id="busqueda" placeholder="Escribe un ID (1 al 10)..." />\n    <div class="resultado" id="resultado">Esperando b\xfasqueda...</div>\n\n    <script>\n      const input = document.getElementById("busqueda");\n      const resultado = document.getElementById("resultado");\n\n      // Variable para controlar la versi\xf3n actual de la b\xfasqueda\n      let ultimaBusquedaId = 0;\n\n      async function buscarUsuario(id) {\n        const requestId = ++ultimaBusquedaId; // Nueva versi\xf3n de b\xfasqueda\n\n        resultado.textContent = `\ud83d\udd04 Buscando usuario ${id}...`;\n\n        // Simulamos una b\xfasqueda con retardo aleatorio\n        await new Promise((res) => setTimeout(res, Math.random() * 2000 + 500));\n\n        const res = await fetch(\n          `https://jsonplaceholder.typicode.com/users/${id}`\n        );\n        if (!res.ok) {\n          if (requestId === ultimaBusquedaId) {\n            resultado.textContent = "\u274c Usuario no encontrado.";\n          }\n          return;\n        }\n\n        const datos = await res.json();\n\n        // Solo mostramos el resultado si esta sigue siendo la \xfaltima b\xfasqueda activa\n        if (requestId === ultimaBusquedaId) {\n          resultado.textContent = `\ud83d\udc64 ${datos.name} (${datos.email})`;\n        } else {\n          console.warn("\u26a0\ufe0f Resultado descartado por ser una b\xfasqueda antigua.");\n        }\n      }\n\n      input.addEventListener("input", () => {\n        const id = input.value.trim();\n        if (id && !isNaN(id)) {\n          buscarUsuario(id);\n        }\n      });\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h3,{id:"-qu\xe9-resuelve-esto",children:"\u2705 \xbfQu\xe9 resuelve esto?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Cada vez que se inicia una nueva b\xfasqueda, se incrementa ",(0,r.jsx)(n.code,{children:"ultimaBusquedaId"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Cada promesa (petici\xf3n) recuerda ",(0,r.jsxs)(n.strong,{children:["con qu\xe9 ",(0,r.jsx)(n.code,{children:"requestId"})," fue lanzada"]}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Al finalizar, ",(0,r.jsx)(n.strong,{children:"verifica si sigue siendo la \xfaltima b\xfasqueda activa"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Si ",(0,r.jsx)(n.strong,{children:"no lo es"}),", ",(0,r.jsx)(n.strong,{children:"se ignora su resultado"})," (as\xed no pisa el m\xe1s reciente)."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-conclusi\xf3n-1",children:"\ud83e\udde0 Conclusi\xf3n:"}),"\n",(0,r.jsxs)(n.p,{children:["Este patr\xf3n de control con ",(0,r.jsx)(n.code,{children:"requestId"})," es ",(0,r.jsx)(n.strong,{children:"muy \xfatil en interfaces reactivas"}),", donde las peticiones pueden cruzarse f\xe1cilmente."]}),"\n",(0,r.jsxs)(n.p,{children:["\xbfTe gustar\xeda que prepare un ejemplo visual con una ",(0,r.jsx)(n.strong,{children:"barra de progreso animada"})," para simular una carga con posibles condiciones de carrera tambi\xe9n?"]}),"\n",(0,r.jsxs)(n.p,{children:["La ",(0,r.jsx)(n.strong,{children:"sincronizaci\xf3n de operaciones en JavaScript"})," para evitar ",(0,r.jsx)(n.strong,{children:"condiciones de carrera"})," se basa en ",(0,r.jsx)(n.strong,{children:"controlar el orden y el estado de las operaciones asincr\xf3nicas"}),", ya que JavaScript ",(0,r.jsx)(n.strong,{children:"no tiene hilos paralelos reales en el navegador"}),", sino un \xfanico ",(0,r.jsx)(n.strong,{children:"hilo de ejecuci\xf3n"})," y un ",(0,r.jsx)(n.strong,{children:"event loop"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3mo-sincronizar-operaciones-en-javascript-puede-evitar-las-condiciones-de-carrera",children:"\u2705 \xbfC\xf3mo sincronizar operaciones en JavaScript puede evitar las condiciones de carrera?"}),"\n",(0,r.jsxs)(n.h3,{id:"1-control-de-versi\xf3n-o-requestid",children:["1. ",(0,r.jsxs)(n.strong,{children:["Control de versi\xf3n o ",(0,r.jsx)(n.code,{children:"requestId"})]})]}),"\n",(0,r.jsx)(n.p,{children:"(\u2705 ya lo vimos antes)"}),"\n",(0,r.jsxs)(n.p,{children:["Cada operaci\xf3n tiene un identificador \xfanico, y ",(0,r.jsx)(n.strong,{children:"solo se acepta el resultado m\xe1s reciente"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"let version = 0;\nasync function operacion() {\n  const current = ++version;\n  const datos = await fetch(...);\n  if (current === version) {\n    // Solo si es la versi\xf3n m\xe1s nueva, mostramos datos\n  }\n}\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"2-encadenamiento-de-promesas",children:["2. ",(0,r.jsx)(n.strong,{children:"Encadenamiento de promesas"})]}),"\n",(0,r.jsxs)(n.p,{children:["Cuando una operaci\xf3n depende del resultado anterior, se ",(0,r.jsx)(n.strong,{children:"encadenan"})," usando ",(0,r.jsx)(n.code,{children:".then()"})," o ",(0,r.jsx)(n.code,{children:"async/await"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"async function flujoSincronizado() {\n  const user = await fetchUser();\n  const posts = await fetchPosts(user.id);\n  const comments = await fetchComments(posts[0].id);\n  // Cada paso espera al anterior\n}\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Esto asegura que ",(0,r.jsx)(n.strong,{children:"cada operaci\xf3n se haga en orden"}),"."]}),"\n",(0,r.jsxs)(n.h3,{id:"3-deshabilitar-entradas-del-usuario-temporalmente",children:["3. ",(0,r.jsx)(n.strong,{children:"Deshabilitar entradas del usuario temporalmente"})]}),"\n",(0,r.jsx)(n.p,{children:"Una forma simple y efectiva:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"boton.disabled = true;\nawait hacerAlgoLento();\nboton.disabled = false;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["As\xed evitas que el usuario ",(0,r.jsx)(n.strong,{children:"dispare m\xfaltiples veces"})," el mismo proceso mientras est\xe1 corriendo."]}),"\n",(0,r.jsxs)(n.h3,{id:"4-abortcontroller-para-cancelar-operaciones-anteriores",children:["4. ",(0,r.jsx)(n.strong,{children:"AbortController (para cancelar operaciones anteriores)"})]}),"\n",(0,r.jsxs)(n.p,{children:["Ideal para ",(0,r.jsx)(n.strong,{children:"fetch()"}),", permite abortar peticiones anteriores si ya no son necesarias:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'let controller;\n\nfunction nuevaPeticion() {\n  if (controller) controller.abort(); // Cancelamos la anterior\n\n  controller = new AbortController();\n\n  fetch("...", { signal: controller.signal })\n    .then(res => res.json())\n    .then(data => { /* usar datos */ })\n    .catch(err => {\n      if (err.name === "AbortError") console.log("Petici\xf3n cancelada");\n    });\n}\n\n'})}),"\n",(0,r.jsxs)(n.h3,{id:"5-bloqueo-l\xf3gico-lock",children:["5. ",(0,r.jsx)(n.strong,{children:"Bloqueo l\xf3gico (lock)"})]}),"\n",(0,r.jsx)(n.p,{children:"Puedes usar una variable booleana para impedir que se inicie una operaci\xf3n si ya hay otra corriendo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"let enProceso = false;\n\nasync function ejecutar() {\n  if (enProceso) return; // Evitamos colisi\xf3n\n  enProceso = true;\n\n  await tareaAsincrona();\n\n  enProceso = false;\n}\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"-conclusi\xf3n-2",children:"\u2705 Conclusi\xf3n:"}),"\n",(0,r.jsxs)(n.p,{children:["Aunque JavaScript no tiene sincronizaci\xf3n por hilos como otros lenguajes, puedes ",(0,r.jsx)(n.strong,{children:"evitar condiciones de carrera"})," con:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Control de versi\xf3n (",(0,r.jsx)(n.code,{children:"requestId"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Encadenamiento correcto"}),"\n",(0,r.jsxs)(n.li,{children:["Cancelaci\xf3n con ",(0,r.jsx)(n.code,{children:"AbortController"})]}),"\n",(0,r.jsxs)(n.li,{children:["Bloqueos l\xf3gicos (",(0,r.jsx)(n.code,{children:"enProceso"}),")"]}),"\n",(0,r.jsx)(n.li,{children:"Interfaces bloqueadas temporalmente"}),"\n"]}),"\n",(0,r.jsx)(n.h1,{id:"ejemplo-pr\xe1ctico-mini-app",children:"Ejemplo Pr\xe1ctico Mini APP"}),"\n",(0,r.jsxs)(n.p,{children:["Vamos a crear una ",(0,r.jsx)(n.strong,{children:"mini app de b\xfasqueda en vivo"}),", donde se apliquen ",(0,r.jsx)(n.strong,{children:"todas las t\xe9cnicas para evitar condiciones de carrera"})," en JavaScript:"]}),"\n",(0,r.jsx)(n.h2,{id:"-objetivo-de-la-app",children:"\ud83c\udfaf Objetivo de la app"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Campo de texto para buscar usuarios por ID (del 1 al 10)."}),"\n",(0,r.jsx)(n.li,{children:"Cada vez que se escribe, se hace una petici\xf3n a una API."}),"\n",(0,r.jsxs)(n.li,{children:["Usaremos:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Control de versi\xf3n (",(0,r.jsx)(n.code,{children:"requestId"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.code,{children:"AbortController"})," para cancelar b\xfasquedas anteriores"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Bloqueo l\xf3gico (",(0,r.jsx)(n.code,{children:"enProceso"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Encadenamiento correcto (",(0,r.jsx)(n.code,{children:"async/await"}),")"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-paso-1-estructura-html",children:"\ud83e\uddf1 Paso 1: Estructura HTML"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Mini app: b\xfasqueda segura</title>\n    <style>\n      body {\n        font-family: sans-serif;\n        padding: 20px;\n      }\n      input {\n        padding: 10px;\n        width: 300px;\n      }\n      .resultado {\n        margin-top: 20px;\n        font-weight: bold;\n      }\n    </style>\n  </head>\n  <body>\n    <h2>\ud83d\udd0d Buscar usuario (ID del 1 al 10)</h2>\n    <input type="text" id="busqueda" placeholder="Escribe un ID..." />\n    <div class="resultado" id="resultado">Esperando b\xfasqueda...</div>\n\n    <script>\n      // JavaScript ir\xe1 aqu\xed\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-paso-2-javascript-con-todas-las-protecciones",children:"\ud83e\uddf1 Paso 2: JavaScript con todas las protecciones"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'const input = document.getElementById("busqueda");\nconst resultado = document.getElementById("resultado");\n\nlet version = 0; // Control de versiones\nlet controlador; // Para AbortController\nlet enProceso = false; // Bloqueo l\xf3gico\n\n// Escuchar cada cambio en el input\ninput.addEventListener("input", () => {\n  const id = input.value.trim();\n\n  // Validamos entrada (solo n\xfameros entre 1 y 10)\n  if (id && !isNaN(id) && +id >= 1 && +id <= 10) {\n    buscarUsuario(id);\n  } else {\n    resultado.textContent = "\ud83d\udd53 Esperando entrada v\xe1lida (1 al 10)...";\n  }\n});\n\nasync function buscarUsuario(id) {\n  if (enProceso) {\n    // Evitamos lanzar otra si ya hay una corriendo\n    console.log("\u23f3 Ya hay una b\xfasqueda en proceso. Ignorando esta.");\n    return;\n  }\n\n  // Incrementamos la versi\xf3n y guardamos el n\xfamero actual\n  const estaVersion = ++version;\n\n  // Abortamos la b\xfasqueda anterior si exist\xeda\n  if (controlador) controlador.abort();\n\n  // Creamos un nuevo controlador para esta petici\xf3n\n  controlador = new AbortController();\n\n  enProceso = true; // Activamos bloqueo l\xf3gico\n  resultado.textContent = `\ud83d\udd04 Buscando usuario ${id}...`;\n\n  try {\n    const respuesta = await fetch(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      { signal: controlador.signal }\n    );\n\n    // Verificamos si la respuesta es v\xe1lida\n    if (!respuesta.ok) {\n      throw new Error("\u274c Usuario no encontrado.");\n    }\n\n    const datos = await respuesta.json();\n\n    // Solo mostramos el resultado si es la b\xfasqueda m\xe1s reciente\n    if (estaVersion === version) {\n      resultado.textContent = `\u2705 ${datos.name} (${datos.email})`;\n    } else {\n      console.log("\u26a0\ufe0f Resultado descartado por versi\xf3n antigua.");\n    }\n  } catch (error) {\n    // Si el error fue por cancelaci\xf3n, no hacemos nada\n    if (error.name === "AbortError") {\n      console.log("\ud83d\uded1 B\xfasqueda cancelada");\n    } else {\n      resultado.textContent = `\u274c Error: ${error.message}`;\n    }\n  } finally {\n    enProceso = false; // Liberamos el bloqueo\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-aprendiste-con-esta-mini-app",children:"\u2705 \xbfQu\xe9 aprendiste con esta mini app?"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A usar ",(0,r.jsx)(n.code,{children:"requestId"})," (versi\xf3n) para evitar resultados desactualizados."]}),"\n",(0,r.jsxs)(n.li,{children:["A usar ",(0,r.jsx)(n.code,{children:"AbortController"})," para ",(0,r.jsx)(n.strong,{children:"cancelar"})," peticiones viejas."]}),"\n",(0,r.jsxs)(n.li,{children:["A usar ",(0,r.jsx)(n.code,{children:"enProceso"})," para bloquear doble ejecuci\xf3n."]}),"\n",(0,r.jsxs)(n.li,{children:["A mantener un flujo limpio y sincronizado con ",(0,r.jsx)(n.code,{children:"async/await"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Ahora, vamos a ",(0,r.jsx)(n.strong,{children:"convertir esta mini app en un componente m\xe1s moderno y reutilizable"}),", usando ",(0,r.jsx)(n.strong,{children:"Bootstrap 5"})," para el dise\xf1o, con:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\ud83c\udfa8 ",(0,r.jsx)(n.strong,{children:"Estilos visuales mejorados"})]}),"\n",(0,r.jsxs)(n.li,{children:["\ud83d\udd04 Un ",(0,r.jsx)(n.strong,{children:"spinner de carga"})]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 ",(0,r.jsx)(n.strong,{children:"Validaci\xf3n visual del input"})]}),"\n",(0,r.jsx)(n.li,{children:"\ud83d\udce6 Todo modular y reutilizable"}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"-paso-1-html-base-con-bootstrap",children:"\u2705 Paso 1: HTML base con Bootstrap"}),"\n",(0,r.jsx)(n.p,{children:"Agregamos Bootstrap desde CDN y preparamos la estructura:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="es">\n  <head>\n    <meta charset="UTF-8" />\n    <title>Componente b\xfasqueda segura</title>\n    <link\n      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"\n      rel="stylesheet"\n    />\n  </head>\n  <body class="bg-light p-4">\n    <div class="container">\n      <h2 class="mb-4">\ud83d\udd0d Buscar usuario (ID 1\u201310)</h2>\n\n      \x3c!-- Componente --\x3e\n      <div id="componente-busqueda" class="card shadow-sm p-4">\n        <form id="formulario" class="row g-3 needs-validation" novalidate>\n          <div class="col-auto">\n            <input\n              type="number"\n              min="1"\n              max="10"\n              class="form-control"\n              id="inputId"\n              placeholder="ID de usuario"\n              required\n            />\n            <div class="invalid-feedback">\n              Introduce un n\xfamero entre 1 y 10.\n            </div>\n          </div>\n          <div class="col-auto">\n            <button type="submit" class="btn btn-primary">\n              Buscar\n              <span\n                class="spinner-border spinner-border-sm d-none"\n                role="status"\n                id="spinner"\n              ></span>\n            </button>\n          </div>\n        </form>\n\n        <div class="mt-4" id="resultado">Esperando b\xfasqueda...</div>\n      </div>\n    </div>\n\n    <script>\n      // JavaScript ir\xe1 aqu\xed\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-paso-2-l\xf3gica-javascript-con-todo-integrado-y-modularizado",children:"\u2705 Paso 2: L\xf3gica JavaScript con todo integrado y modularizado"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:'(() => {\n  const input = document.getElementById("inputId");\n  const resultado = document.getElementById("resultado");\n  const formulario = document.getElementById("formulario");\n  const spinner = document.getElementById("spinner");\n\n  let version = 0;\n  let enProceso = false;\n  let controller;\n\n  // Validaci\xf3n de Bootstrap al enviar\n  formulario.addEventListener("submit", (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    formulario.classList.add("was-validated");\n\n    const id = input.value.trim();\n\n    if (input.checkValidity()) {\n      buscarUsuario(id);\n    }\n  });\n\n  async function buscarUsuario(id) {\n    if (enProceso) return;\n\n    const actual = ++version;\n\n    if (controller) controller.abort();\n    controller = new AbortController();\n\n    enProceso = true;\n    spinner.classList.remove("d-none");\n    resultado.innerHTML = `<div class="text-muted">\ud83d\udd04 Buscando usuario ${id}...</div>`;\n\n    try {\n      const res = await fetch(\n        `https://jsonplaceholder.typicode.com/users/${id}`,\n        {\n          signal: controller.signal,\n        }\n      );\n\n      if (!res.ok) throw new Error("Usuario no encontrado");\n\n      const datos = await res.json();\n\n      if (actual === version) {\n        resultado.innerHTML = `\n          <div class="alert alert-success">\n            <strong>${datos.name}</strong><br>\n            <small>${datos.email}</small>\n          </div>`;\n      }\n    } catch (err) {\n      if (err.name !== "AbortError") {\n        resultado.innerHTML = `<div class="alert alert-danger">\u274c ${err.message}</div>`;\n      }\n    } finally {\n      enProceso = false;\n      spinner.classList.add("d-none");\n    }\n  }\n})();\n'})}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-mejoras-trae-esta-versi\xf3n",children:"\u2705 \xbfQu\xe9 mejoras trae esta versi\xf3n?"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Caracter\xedstica"}),(0,r.jsx)(n.th,{children:"Implementaci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Validaci\xf3n visual"}),(0,r.jsxs)(n.td,{children:["Bootstrap + atributo ",(0,r.jsx)(n.code,{children:"required"})," + feedback"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Componente reutilizable"}),(0,r.jsxs)(n.td,{children:["Todo est\xe1 dentro de una ",(0,r.jsx)(n.code,{children:"card"})," Bootstrap"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Spinner de carga"}),(0,r.jsx)(n.td,{children:"Bootstrap spinner animado, oculto/visible"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Acceso modularizado"}),(0,r.jsxs)(n.td,{children:["C\xf3digo dentro de IIFE (",(0,r.jsx)(n.code,{children:"(() => { })()"}),")"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Prevenci\xf3n de errores comunes"}),(0,r.jsx)(n.td,{children:"Control de versi\xf3n + abortado + bloqueo l\xf3gico"})]})]})]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},7015:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/console.log(__1._Inicio_del_script_)____Call_Stack_-_visual_selection-98ac0c6b860b994932141ece0cd2bba9.svg"},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>l});var s=a(6540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);