"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[4931],{1217:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>l,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"frontend/js/variables","title":"Variables","description":"\xbfQu\xe9 son las Variables en JavaScript?","source":"@site/docs/frontend/js/variables.md","sourceDirName":"frontend/js","slug":"/frontend/js/variables","permalink":"/docuQuest/docs/frontend/js/variables","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/frontend/js/variables.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Comentarios","permalink":"/docuQuest/docs/frontend/js/comentarios"},"next":{"title":"Let","permalink":"/docuQuest/docs/frontend/js/let"}}');var c=n(4848),i=n(8453);const l={},r="Variables",o={},d=[{value:"\xbfQu\xe9 son las Variables en JavaScript?",id:"qu\xe9-son-las-variables-en-javascript",level:2},{value:"Caracter\xedsticas Principales de las Variables en JavaScript",id:"caracter\xedsticas-principales-de-las-variables-en-javascript",level:2},{value:"1. Dinamismo de Tipos",id:"1-dinamismo-de-tipos",level:3},{value:"2. Alcance",id:"2-alcance",level:3},{value:"3. Sensibilidad a May\xfasculas y Min\xfasculas",id:"3-sensibilidad-a-may\xfasculas-y-min\xfasculas",level:3},{value:"Declaraci\xf3n de Variables en JavaScript",id:"declaraci\xf3n-de-variables-en-javascript",level:2},{value:"1. Declaraci\xf3n con <code>var</code>",id:"1-declaraci\xf3n-con-var",level:3},{value:"2. Declaraci\xf3n con <code>let</code>",id:"2-declaraci\xf3n-con-let",level:3},{value:"3. Declaraci\xf3n con <code>const</code>",id:"3-declaraci\xf3n-con-const",level:3},{value:"Operaciones con Variables en JavaScript",id:"operaciones-con-variables-en-javascript",level:2},{value:"Operaciones Aritm\xe9ticas",id:"operaciones-aritm\xe9ticas",level:3},{value:"Concatenaci\xf3n de Cadenas",id:"concatenaci\xf3n-de-cadenas",level:3},{value:"Evaluaci\xf3n de Expresiones Booleanas",id:"evaluaci\xf3n-de-expresiones-booleanas",level:3},{value:"Ejemplos Pr\xe1cticos",id:"ejemplos-pr\xe1cticos",level:2},{value:"Declaraci\xf3n y Operaci\xf3n con Variables",id:"declaraci\xf3n-y-operaci\xf3n-con-variables",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}];function t(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(a.header,{children:(0,c.jsx)(a.h1,{id:"variables",children:"Variables"})}),"\n",(0,c.jsx)(a.h2,{id:"qu\xe9-son-las-variables-en-javascript",children:"\xbfQu\xe9 son las Variables en JavaScript?"}),"\n",(0,c.jsx)(a.p,{children:"En JavaScript, una variable es un contenedor para almacenar datos. Estos datos pueden ser n\xfameros, cadenas de texto, booleanos, arreglos, objetos u otros tipos de datos. Las variables en JavaScript son din\xe1micas, lo que significa que pueden contener diferentes tipos de datos en diferentes momentos de la ejecuci\xf3n del programa."}),"\n",(0,c.jsx)(a.h2,{id:"caracter\xedsticas-principales-de-las-variables-en-javascript",children:"Caracter\xedsticas Principales de las Variables en JavaScript"}),"\n",(0,c.jsx)(a.h3,{id:"1-dinamismo-de-tipos",children:"1. Dinamismo de Tipos"}),"\n",(0,c.jsx)(a.p,{children:"JavaScript es un lenguaje de tipado din\xe1mico, lo que significa que no es necesario declarar el tipo de datos de una variable al crearla. El tipo de datos de una variable puede cambiar durante la ejecuci\xf3n del programa."}),"\n",(0,c.jsx)(a.h3,{id:"2-alcance",children:"2. Alcance"}),"\n",(0,c.jsxs)(a.p,{children:["Las variables en JavaScript tienen alcance de funci\xf3n o alcance global. Las variables declaradas dentro de una funci\xf3n solo son visibles dentro de esa funci\xf3n (a menos que se utilice la palabra clave ",(0,c.jsx)(a.code,{children:"var"}),", en cuyo caso pueden tener un alcance m\xe1s amplio). Las variables declaradas fuera de cualquier funci\xf3n tienen alcance global y son visibles en todo el programa."]}),"\n",(0,c.jsx)(a.h3,{id:"3-sensibilidad-a-may\xfasculas-y-min\xfasculas",children:"3. Sensibilidad a May\xfasculas y Min\xfasculas"}),"\n",(0,c.jsxs)(a.p,{children:["JavaScript distingue entre may\xfasculas y min\xfasculas en los nombres de variables. Por lo tanto, ",(0,c.jsx)(a.code,{children:"miVariable"})," y ",(0,c.jsx)(a.code,{children:"mivariable"})," se consideran nombres de variables diferentes."]}),"\n",(0,c.jsx)(a.h2,{id:"declaraci\xf3n-de-variables-en-javascript",children:"Declaraci\xf3n de Variables en JavaScript"}),"\n",(0,c.jsxs)(a.p,{children:["En JavaScript, las variables se declaran utilizando las palabras clave ",(0,c.jsx)(a.code,{children:"var"}),", ",(0,c.jsx)(a.code,{children:"let"})," o ",(0,c.jsx)(a.code,{children:"const"}),"."]}),"\n",(0,c.jsxs)(a.h3,{id:"1-declaraci\xf3n-con-var",children:["1. Declaraci\xf3n con ",(0,c.jsx)(a.code,{children:"var"})]}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"var numero = 10;\n"})}),"\n",(0,c.jsxs)(a.h3,{id:"2-declaraci\xf3n-con-let",children:["2. Declaraci\xf3n con ",(0,c.jsx)(a.code,{children:"let"})]}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:'let texto = "Hola, mundo!";\n'})}),"\n",(0,c.jsxs)(a.h3,{id:"3-declaraci\xf3n-con-const",children:["3. Declaraci\xf3n con ",(0,c.jsx)(a.code,{children:"const"})]}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"const PI = 3.1416;\n"})}),"\n",(0,c.jsxs)(a.p,{children:["La diferencia entre ",(0,c.jsx)(a.code,{children:"var"}),", ",(0,c.jsx)(a.code,{children:"let"})," y ",(0,c.jsx)(a.code,{children:"const"})," radica en su alcance y mutabilidad:"]}),"\n",(0,c.jsxs)(a.ul,{children:["\n",(0,c.jsxs)(a.li,{children:[(0,c.jsx)(a.code,{children:"var"}),": Tiene un alcance de funci\xf3n y su valor puede cambiar."]}),"\n",(0,c.jsxs)(a.li,{children:[(0,c.jsx)(a.code,{children:"let"}),": Tiene un alcance de bloque y su valor puede cambiar."]}),"\n",(0,c.jsxs)(a.li,{children:[(0,c.jsx)(a.code,{children:"const"}),": Tiene un alcance de bloque y su valor no puede cambiar una vez que se asigna."]}),"\n"]}),"\n",(0,c.jsx)(a.h2,{id:"operaciones-con-variables-en-javascript",children:"Operaciones con Variables en JavaScript"}),"\n",(0,c.jsx)(a.p,{children:"Las variables en JavaScript se pueden utilizar en operaciones aritm\xe9ticas, concatenaci\xf3n de cadenas, evaluaci\xf3n de expresiones booleanas y otros c\xe1lculos."}),"\n",(0,c.jsx)(a.h3,{id:"operaciones-aritm\xe9ticas",children:"Operaciones Aritm\xe9ticas"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"let a = 5;\r\nlet b = 3;\r\nlet suma = a + b; // suma = 8\r\nlet resta = a - b; // resta = 2\r\nlet multiplicacion = a * b; // multiplicacion = 15\r\nlet division = a / b; // division = 1.6666666666666667\n"})}),"\n",(0,c.jsx)(a.h3,{id:"concatenaci\xf3n-de-cadenas",children:"Concatenaci\xf3n de Cadenas"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:'let nombre = "Juan";\r\nlet apellido = "P\xe9rez";\r\nlet nombreCompleto = nombre + " " + apellido; // nombreCompleto = \'Juan P\xe9rez\'\n'})}),"\n",(0,c.jsx)(a.h3,{id:"evaluaci\xf3n-de-expresiones-booleanas",children:"Evaluaci\xf3n de Expresiones Booleanas"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"let x = 10;\r\nlet y = 5;\r\nlet esMayor = x > y; // esMayor = true\n"})}),"\n",(0,c.jsx)(a.h2,{id:"ejemplos-pr\xe1cticos",children:"Ejemplos Pr\xe1cticos"}),"\n",(0,c.jsx)(a.h3,{id:"declaraci\xf3n-y-operaci\xf3n-con-variables",children:"Declaraci\xf3n y Operaci\xf3n con Variables"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:'// Declaraci\xf3n de variables\r\nlet base = 5;\r\nlet altura = 3;\r\n\r\n// Operaci\xf3n para calcular el \xe1rea de un tri\xe1ngulo\r\nlet area = (base * altura) / 2;\r\n\r\n// Imprimir el resultado\r\nconsole.log("El \xe1rea del tri\xe1ngulo es: " + area);\n'})}),"\n",(0,c.jsxs)(a.p,{children:["En este ejemplo, se declaran las variables ",(0,c.jsx)(a.code,{children:"base"})," y ",(0,c.jsx)(a.code,{children:"altura"}),", se realiza la operaci\xf3n para calcular el \xe1rea de un tri\xe1ngulo y se imprime el resultado en la consola."]}),"\n",(0,c.jsx)(a.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,c.jsxs)(a.p,{children:["En conclusi\xf3n, las variables en JavaScript son contenedores para almacenar datos durante la ejecuci\xf3n de un programa. Tienen caracter\xedsticas como dinamismo de tipos, alcance y sensibilidad a may\xfasculas y min\xfasculas. Las variables se pueden declarar utilizando las palabras clave ",(0,c.jsx)(a.code,{children:"var"}),", ",(0,c.jsx)(a.code,{children:"let"})," o ",(0,c.jsx)(a.code,{children:"const"}),", y se pueden utilizar en operaciones aritm\xe9ticas, concatenaci\xf3n de cadenas, evaluaci\xf3n de expresiones booleanas y otros c\xe1lculos. Comprender c\xf3mo funcionan las variables en JavaScript es fundamental para escribir c\xf3digo eficiente y funcional en el desarrollo web."]})]})}function u(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>l,x:()=>r});var s=n(6540);const c={},i=s.createContext(c);function l(e){const a=s.useContext(i);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:l(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);