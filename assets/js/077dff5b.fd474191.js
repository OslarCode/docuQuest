"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[80],{3968:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"backend/sqlite/tiposDatos","title":"Tipos y calidad de datos en SQLite","description":"1. Afinidad de tipos en SQLite: \u201cflexible pero no ca\xf3tica\u201d","source":"@site/docs/backend/sqlite/tiposDatos.md","sourceDirName":"backend/sqlite","slug":"/backend/sqlite/tiposDatos","permalink":"/docuQuest/docs/backend/sqlite/tiposDatos","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/sqlite/tiposDatos.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"SQL Essential en SQLite","permalink":"/docuQuest/docs/backend/sqlite/esencial"},"next":{"title":"Relaciones y consultas expresivas","permalink":"/docuQuest/docs/backend/sqlite/relacionesYConsultas"}}');var r=s(4848),a=s(8453);const c={},l="Tipos y calidad de datos en SQLite",d={},o=[{value:"1. Afinidad de tipos en SQLite: \u201cflexible pero no ca\xf3tica\u201d",id:"1-afinidad-de-tipos-en-sqlite-flexible-pero-no-ca\xf3tica",level:2},{value:"Tipos principales en SQLite",id:"tipos-principales-en-sqlite",level:3},{value:"2. Usando <code>STRICT</code> tables",id:"2-usando-strict-tables",level:2},{value:"3. Restricciones de integridad (constraints)",id:"3-restricciones-de-integridad-constraints",level:2},{value:"a) <code>NOT NULL</code> \u2014 campo obligatorio",id:"a-not-null--campo-obligatorio",level:3},{value:"b) <code>UNIQUE</code> \u2014 valores no repetidos",id:"b-unique--valores-no-repetidos",level:3},{value:"c) <code>CHECK</code> \u2014 validaciones personalizadas",id:"c-check--validaciones-personalizadas",level:3},{value:"d) <code>DEFAULT</code> \u2014 valores por defecto",id:"d-default--valores-por-defecto",level:3},{value:"4. Fechas y horas en SQLite",id:"4-fechas-y-horas-en-sqlite",level:2},{value:"\ud83e\uddea 5. Ejercicio pr\xe1ctico \u2014 calidad de datos",id:"-5-ejercicio-pr\xe1ctico--calidad-de-datos",level:2},{value:"6. Buenas pr\xe1cticas en validaci\xf3n con SQLite",id:"6-buenas-pr\xe1cticas-en-validaci\xf3n-con-sqlite",level:2},{value:"Errores comunes",id:"errores-comunes",level:2},{value:"1. Qu\xe9 es una relaci\xf3n en bases de datos",id:"1-qu\xe9-es-una-relaci\xf3n-en-bases-de-datos",level:2},{value:"2. Activar claves for\xe1neas en SQLite",id:"2-activar-claves-for\xe1neas-en-sqlite",level:2},{value:"3. Crear relaciones con <code>FOREIGN KEY</code>",id:"3-crear-relaciones-con-foreign-key",level:2},{value:"Paso 1: Tabla de clientes",id:"paso-1-tabla-de-clientes",level:3},{value:"Paso 2: Tabla de pedidos con foreign key",id:"paso-2-tabla-de-pedidos-con-foreign-key",level:3},{value:"4. Reglas de propagaci\xf3n (<code>ON DELETE</code> / <code>ON UPDATE</code>)",id:"4-reglas-de-propagaci\xf3n-on-delete--on-update",level:2},{value:"5. \xcdndices y foreign keys",id:"5-\xedndices-y-foreign-keys",level:2},{value:"6. Ejercicio pr\xe1ctico \u2014 Relaciones cliente \u2194 pedidos",id:"6-ejercicio-pr\xe1ctico--relaciones-cliente--pedidos",level:2},{value:"7. Buenas pr\xe1cticas con relaciones",id:"7-buenas-pr\xe1cticas-con-relaciones",level:2},{value:"Errores comunes",id:"errores-comunes-1",level:2}];function t(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"tipos-y-calidad-de-datos-en-sqlite",children:"Tipos y calidad de datos en SQLite"})}),"\n",(0,r.jsx)(n.h2,{id:"1-afinidad-de-tipos-en-sqlite-flexible-pero-no-ca\xf3tica",children:"1. Afinidad de tipos en SQLite: \u201cflexible pero no ca\xf3tica\u201d"}),"\n",(0,r.jsxs)(n.p,{children:["A diferencia de otros motores, SQLite ",(0,r.jsx)(n.strong,{children:"no tiene un sistema de tipos r\xedgido"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Esto significa que puedes guardar un n\xfamero en una columna ",(0,r.jsx)(n.code,{children:"TEXT"})," y SQLite ",(0,r.jsx)(n.strong,{children:"no se quejar\xe1"}),"\u2026 a menos que t\xfa se lo pidas."]}),"\n",(0,r.jsx)(n.p,{children:"Por eso es tan importante entender su modelo:"}),"\n",(0,r.jsx)(n.h3,{id:"tipos-principales-en-sqlite",children:"Tipos principales en SQLite"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"INTEGER"})," \u2192 n\xfameros enteros (1, 2, 999, -100, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"REAL"})," \u2192 n\xfameros decimales (1.5, 3.14, etc.)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"TEXT"})," \u2192 texto (cadenas, fechas formateadas como texto)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"BLOB"})," \u2192 datos binarios (im\xe1genes, archivos \u2014 raramente usado en SQLite puro)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NUMERIC"})," \u2192 intenta comportarse como n\xfamero, pero admite texto tambi\xe9n."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Por defecto, SQLite ",(0,r.jsx)(n.strong,{children:"aplica \u201cafinidad\u201d de tipo"}),", no un tipo r\xedgido:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Si defines ",(0,r.jsx)(n.code,{children:"price REAL"}),", intentar\xe1 almacenar un n\xfamero."]}),"\n",(0,r.jsxs)(n.li,{children:["Pero si insertas ",(0,r.jsx)(n.code,{children:'"hola"'}),", lo guardar\xe1 igualmente\u2026 a menos que tengas restricciones."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE demo (\n  precio REAL\n);\nINSERT INTO demo (precio) VALUES ('hola');\nSELECT * FROM demo;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["S\xed, ",(0,r.jsx)(n.strong,{children:"esto funciona"})," \ud83d\ude05"]}),"\n",(0,r.jsx)(n.p,{children:"Para evitar este tipo de problemas, SQLite ofrece:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:[(0,r.jsx)(n.code,{children:"STRICT"})," tables"]})," (nuevo est\xe1ndar moderno)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsxs)(n.strong,{children:["Restricciones (",(0,r.jsx)(n.code,{children:"NOT NULL"}),", ",(0,r.jsx)(n.code,{children:"CHECK"}),", etc.)"]})," que validan cada fila."]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"2-usando-strict-tables",children:["2. Usando ",(0,r.jsx)(n.code,{children:"STRICT"})," tables"]}),"\n",(0,r.jsxs)(n.p,{children:["Si creas la tabla con ",(0,r.jsx)(n.code,{children:"STRICT"}),", ",(0,r.jsx)(n.strong,{children:"SQLite se vuelve mucho m\xe1s estricto con los tipos"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE productos (\n  id INTEGER PRIMARY KEY,\n  nombre TEXT NOT NULL,\n  precio REAL NOT NULL\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO productos (nombre, precio) VALUES ('Teclado', 'abc');\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Resultado:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Error: cannot store TEXT value in REAL column productos.precio\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto es exactamente lo que queremos en una base robusta."}),"\n",(0,r.jsxs)(n.p,{children:["Recomendaci\xf3n pr\xe1ctica: ",(0,r.jsxs)(n.strong,{children:["usa ",(0,r.jsx)(n.code,{children:"STRICT"})," siempre"]})," que est\xe9s en SQLite 3.37+ (2022 en adelante). Todos los entornos modernos ya lo incluyen."]}),"\n",(0,r.jsx)(n.h2,{id:"3-restricciones-de-integridad-constraints",children:"3. Restricciones de integridad (constraints)"}),"\n",(0,r.jsxs)(n.p,{children:["Las ",(0,r.jsx)(n.strong,{children:"restricciones"})," son reglas que aseguran que ",(0,r.jsx)(n.strong,{children:"los datos cumplan ciertas condiciones"})," antes de guardarse."]}),"\n",(0,r.jsx)(n.p,{children:"Vamos a repasarlas con ejemplos claros:"}),"\n",(0,r.jsxs)(n.h3,{id:"a-not-null--campo-obligatorio",children:["a) ",(0,r.jsx)(n.code,{children:"NOT NULL"})," \u2014 campo obligatorio"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto impide:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO users (name) VALUES (NULL);\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto protege tu base sin necesidad de l\xf3gica en la app."}),"\n",(0,r.jsxs)(n.h3,{id:"b-unique--valores-no-repetidos",children:["b) ",(0,r.jsx)(n.code,{children:"UNIQUE"})," \u2014 valores no repetidos"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE users (\n  id INTEGER PRIMARY KEY,\n  email TEXT UNIQUE NOT NULL\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO users (email) VALUES ('ana@example.com');\nINSERT INTO users (email) VALUES ('ana@example.com');\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Error: ",(0,r.jsx)(n.code,{children:"UNIQUE constraint failed: users.email"})]}),"\n",(0,r.jsx)(n.p,{children:"Esto evita duplicados directamente a nivel de base de datos."}),"\n",(0,r.jsxs)(n.h3,{id:"c-check--validaciones-personalizadas",children:["c) ",(0,r.jsx)(n.code,{children:"CHECK"})," \u2014 validaciones personalizadas"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE products (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL,\n  price REAL NOT NULL CHECK (price >= 0)\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO products (name, price) VALUES ('Producto malo', -5);\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Error: ",(0,r.jsx)(n.code,{children:"CHECK constraint failed: price >= 0"})]}),"\n",(0,r.jsx)(n.p,{children:"Puedes hacer checks m\xe1s elaborados:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CHECK (LENGTH(name) >= 3)\nCHECK (price BETWEEN 0 AND 9999)\n\n"})}),"\n",(0,r.jsxs)(n.h3,{id:"d-default--valores-por-defecto",children:["d) ",(0,r.jsx)(n.code,{children:"DEFAULT"})," \u2014 valores por defecto"]}),"\n",(0,r.jsx)(n.p,{children:"Si un campo no se especifica, SQLite usar\xe1 este valor:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE orders (\n  id INTEGER PRIMARY KEY,\n  created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%fZ','now')),\n  total REAL NOT NULL CHECK (total >= 0)\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ahora puedes insertar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO orders (total) VALUES (99.99);\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Y SQLite rellenar\xe1 autom\xe1ticamente ",(0,r.jsx)(n.code,{children:"created_at"})," con la fecha actual en formato ISO."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Pro tip"}),": usa este patr\xf3n ISO UTC con ",(0,r.jsx)(n.code,{children:"strftime"})," siempre que necesites timestamps portables:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"'%Y-%m-%dT%H:%M:%fZ'\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"4-fechas-y-horas-en-sqlite",children:"4. Fechas y horas en SQLite"}),"\n",(0,r.jsxs)(n.p,{children:["SQLite ",(0,r.jsx)(n.strong,{children:"no tiene un tipo de fecha nativo"}),", pero ofrece tres maneras habituales:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"TEXT"})," \u2192 fecha en formato ISO ",(0,r.jsx)(n.code,{children:"YYYY-MM-DDTHH:MM:SSZ"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"REAL"})," \u2192 d\xedas desde 4714 A.C. (formato juliano)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"INTEGER"})," \u2192 Unix epoch (segundos desde 1970)"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo con TEXT (recomendado para simplicidad):"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO orders (total) VALUES (50);\nSELECT id, created_at FROM orders;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Si quieres consultar o formatear fechas:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT created_at,\n       date(created_at),\n       time(created_at),\n       datetime(created_at)\nFROM orders;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Si prefieres guardar timestamps como Unix:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE logs (\n  id INTEGER PRIMARY KEY,\n  ts INTEGER NOT NULL DEFAULT (unixepoch())\n) STRICT;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Lo importante no es el formato que uses, ",(0,r.jsx)(n.strong,{children:"sino ser consistente en toda la base"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"-5-ejercicio-pr\xe1ctico--calidad-de-datos",children:"\ud83e\uddea 5. Ejercicio pr\xe1ctico \u2014 calidad de datos"}),"\n",(0,r.jsx)(n.p,{children:"Vamos a crear una tabla robusta de clientes que no permita errores t\xedpicos:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE clients (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL CHECK (LENGTH(name) >= 2),\n  email TEXT UNIQUE NOT NULL,\n  phone TEXT CHECK (LENGTH(phone) BETWEEN 9 AND 15),\n  created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%fZ','now'))\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba insertar valores correctos:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO clients (name, email, phone)\nVALUES ('Ana', 'ana@example.com', '+34 600 123 456');\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba insertar un error:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO clients (name, email, phone)\nVALUES ('', 'duplicado@example.com', '123');\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"SQLite rechazar\xe1 la fila y proteger\xe1 tus datos."}),"\n",(0,r.jsx)(n.p,{children:"Consulta final:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM clients;\n\n"})}),"\n",(0,r.jsx)(n.h2,{id:"6-buenas-pr\xe1cticas-en-validaci\xf3n-con-sqlite",children:"6. Buenas pr\xe1cticas en validaci\xf3n con SQLite"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\u2705 Usa ",(0,r.jsx)(n.code,{children:"STRICT"})," siempre que puedas."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Usa ",(0,r.jsx)(n.code,{children:"NOT NULL"})," en todas las columnas obligatorias."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Usa ",(0,r.jsx)(n.code,{children:"CHECK"})," para asegurarte de que los datos tengan sentido."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Usa ",(0,r.jsx)(n.code,{children:"DEFAULT"})," para evitar nulos innecesarios."]}),"\n",(0,r.jsxs)(n.li,{children:["\u2705 Mant\xe9n un ",(0,r.jsx)(n.strong,{children:"formato de fecha consistente"})," en toda la base."]}),"\n",(0,r.jsx)(n.li,{children:"\u26a0\ufe0f No abuses de validaciones en el c\xf3digo si puedes hacerlo directamente en la base."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"errores-comunes",children:"Errores comunes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Error"}),(0,r.jsx)(n.th,{children:"Causa"}),(0,r.jsx)(n.th,{children:"Soluci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201ccannot store TEXT value in REAL column\u201d"}),(0,r.jsx)(n.td,{children:"Insertaste un texto en una tabla STRICT"}),(0,r.jsx)(n.td,{children:"Corrige el tipo de dato o la entrada"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cUNIQUE constraint failed\u201d"}),(0,r.jsx)(n.td,{children:"Insertaste un duplicado"}),(0,r.jsx)(n.td,{children:"Cambia el dato o elimina la restricci\xf3n si no es necesaria"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cCHECK constraint failed\u201d"}),(0,r.jsx)(n.td,{children:"La validaci\xf3n personalizada no se cumple"}),(0,r.jsx)(n.td,{children:"Corrige la l\xf3gica o el valor"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Fechas inconsistentes"}),(0,r.jsx)(n.td,{children:"Usas distintos formatos"}),(0,r.jsxs)(n.td,{children:["Elige ",(0,r.jsx)(n.strong,{children:"uno solo"})," para toda la app"]})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"1-qu\xe9-es-una-relaci\xf3n-en-bases-de-datos",children:"1. Qu\xe9 es una relaci\xf3n en bases de datos"}),"\n",(0,r.jsxs)(n.p,{children:["En una base de datos relacional, las ",(0,r.jsx)(n.strong,{children:"tablas no viven aisladas"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Un cliente puede tener muchos pedidos."}),"\n",(0,r.jsx)(n.p,{children:"Un producto puede pertenecer a una categor\xeda."}),"\n",(0,r.jsx)(n.p,{children:"Un usuario puede escribir varios comentarios."}),"\n",(0,r.jsxs)(n.p,{children:["Esto se llama ",(0,r.jsx)(n.strong,{children:"relaci\xf3n entre tablas"}),", y se logra usando ",(0,r.jsx)(n.strong,{children:"claves for\xe1neas"})," (",(0,r.jsx)(n.em,{children:"foreign keys"}),")."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Ejemplo mental sencillo:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Tabla ",(0,r.jsx)(n.code,{children:"clients"})," \u2192 almacena clientes."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Tabla ",(0,r.jsx)(n.code,{children:"orders"})," \u2192 almacena pedidos."]}),"\n",(0,r.jsxs)(n.p,{children:["Cada pedido ",(0,r.jsx)(n.strong,{children:"pertenece a un cliente"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Por tanto:"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"clients.id"})," es la ",(0,r.jsx)(n.strong,{children:"clave primaria"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"orders.client_id"})," es la ",(0,r.jsx)(n.strong,{children:"clave for\xe1nea"})," que hace referencia a ",(0,r.jsx)(n.code,{children:"clients.id"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udccc Esto garantiza que ",(0,r.jsx)(n.strong,{children:"no existan pedidos \u201chu\xe9rfanos\u201d"})," sin cliente asociado."]}),"\n",(0,r.jsx)(n.h2,{id:"2-activar-claves-for\xe1neas-en-sqlite",children:"2. Activar claves for\xe1neas en SQLite"}),"\n",(0,r.jsxs)(n.p,{children:["En SQLite, las foreign keys ",(0,r.jsx)(n.strong,{children:"no est\xe1n activadas por defecto"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Debes activarlas expl\xedcitamente en cada sesi\xf3n:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA foreign_keys = ON;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Muy importante:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Si no activas esto, las relaciones no se aplicar\xe1n."}),"\n",(0,r.jsxs)(n.li,{children:["Una buena pr\xe1ctica es poner esta l\xednea en tus scripts de inicializaci\xf3n (",(0,r.jsx)(n.code,{children:"init.sql"}),") o ejecutarla nada m\xe1s abrir la conexi\xf3n en tu app."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"En Node.js, por ejemplo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"db.pragma('foreign_keys = ON');\n\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"3-crear-relaciones-con-foreign-key",children:["3. Crear relaciones con ",(0,r.jsx)(n.code,{children:"FOREIGN KEY"})]}),"\n",(0,r.jsx)(n.p,{children:"Vamos a construir un ejemplo real:"}),"\n",(0,r.jsx)(n.p,{children:"Clientes \u2192 Pedidos (1 cliente puede tener varios pedidos)."}),"\n",(0,r.jsx)(n.h3,{id:"paso-1-tabla-de-clientes",children:"Paso 1: Tabla de clientes"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE clients (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL,\n  email TEXT UNIQUE NOT NULL\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.h3,{id:"paso-2-tabla-de-pedidos-con-foreign-key",children:"Paso 2: Tabla de pedidos con foreign key"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE orders (\n  id INTEGER PRIMARY KEY,\n  client_id INTEGER NOT NULL,\n  total REAL NOT NULL CHECK (total >= 0),\n  created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%fZ','now')),\n  FOREIGN KEY (client_id) REFERENCES clients(id)\n) STRICT;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Aqu\xed ",(0,r.jsx)(n.code,{children:"client_id"})," debe coincidir con un ",(0,r.jsx)(n.code,{children:"id"})," v\xe1lido de ",(0,r.jsx)(n.code,{children:"clients"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Si no existe ese cliente, SQLite ",(0,r.jsx)(n.strong,{children:"rechaza"})," la inserci\xf3n."]}),"\n",(0,r.jsx)(n.p,{children:"Prueba:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO orders (client_id, total) VALUES (999, 45.50);\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Error: ",(0,r.jsx)(n.code,{children:"FOREIGN KEY constraint failed"})," \u2705"]}),"\n",(0,r.jsx)(n.p,{children:"Inserta un cliente v\xe1lido:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO clients (name, email) VALUES ('Ana', 'ana@example.com');\nINSERT INTO orders (client_id, total) VALUES (1, 45.50);\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Consulta:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM orders;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ahora s\xed funciona."}),"\n",(0,r.jsxs)(n.h2,{id:"4-reglas-de-propagaci\xf3n-on-delete--on-update",children:["4. Reglas de propagaci\xf3n (",(0,r.jsx)(n.code,{children:"ON DELETE"})," / ",(0,r.jsx)(n.code,{children:"ON UPDATE"}),")"]}),"\n",(0,r.jsx)(n.p,{children:"SQLite permite definir qu\xe9 hacer con la relaci\xf3n cuando:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["se ",(0,r.jsx)(n.strong,{children:"borra"})," o ",(0,r.jsx)(n.strong,{children:"actualiza"})," un registro en la tabla padre."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Opciones comunes:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ON DELETE CASCADE"})," \u2192 si borras el cliente, se borran sus pedidos autom\xe1ticamente."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ON DELETE RESTRICT"})," \u2192 proh\xedbe borrar si hay pedidos asociados (por defecto)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ON DELETE SET NULL"})," \u2192 pone ",(0,r.jsx)(n.code,{children:"NULL"})," en ",(0,r.jsx)(n.code,{children:"client_id"})," al borrar el cliente."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ON UPDATE CASCADE"})," \u2192 propaga cambios de id."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo con cascada:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE orders (\n  id INTEGER PRIMARY KEY,\n  client_id INTEGER NOT NULL,\n  total REAL NOT NULL,\n  FOREIGN KEY (client_id) REFERENCES clients(id) ON DELETE CASCADE\n) STRICT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Prueba:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO clients (name, email) VALUES ('Luis', 'luis@example.com');\nINSERT INTO orders (client_id, total) VALUES (2, 100);\nDELETE FROM clients WHERE id = 2;\nSELECT * FROM orders;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ver\xe1s que el pedido tambi\xe9n desaparece autom\xe1ticamente."}),"\n",(0,r.jsxs)(n.p,{children:["Esto es ",(0,r.jsx)(n.strong,{children:"muy \xfatil"})," para mantener la base limpia y evitar datos basura."]}),"\n",(0,r.jsx)(n.h2,{id:"5-\xedndices-y-foreign-keys",children:"5. \xcdndices y foreign keys"}),"\n",(0,r.jsxs)(n.p,{children:["Cuando defines una ",(0,r.jsx)(n.code,{children:"FOREIGN KEY"}),", SQLite no crea autom\xe1ticamente un \xedndice en esa columna."]}),"\n",(0,r.jsxs)(n.p,{children:["Para mejorar el rendimiento en consultas y joins, ",(0,r.jsx)(n.strong,{children:"debes crearlo t\xfa"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE INDEX IF NOT EXISTS idx_orders_client_id ON orders(client_id);\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto acelera consultas como:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM orders\nWHERE client_id = 1;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Regla de oro pr\xe1ctica"}),":"]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsx)(n.p,{children:"Cada FOREIGN KEY deber\xeda tener un \xedndice asociado."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"6-ejercicio-pr\xe1ctico--relaciones-cliente--pedidos",children:"6. Ejercicio pr\xe1ctico \u2014 Relaciones cliente \u2194 pedidos"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Activa foreign keys:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA foreign_keys = ON;\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Crea las tablas:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"CREATE TABLE clients (\n  id INTEGER PRIMARY KEY,\n  name TEXT NOT NULL,\n  email TEXT UNIQUE NOT NULL\n) STRICT;\n\nCREATE TABLE orders (\n  id INTEGER PRIMARY KEY,\n  client_id INTEGER NOT NULL,\n  total REAL NOT NULL CHECK (total >= 0),\n  created_at TEXT NOT NULL DEFAULT (strftime('%Y-%m-%dT%H:%M:%fZ','now')),\n  FOREIGN KEY (client_id) REFERENCES clients(id) ON DELETE CASCADE\n) STRICT;\n\nCREATE INDEX idx_orders_client_id ON orders(client_id);\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Inserta datos:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO clients (name, email) VALUES ('Marta', 'marta@example.com');\nINSERT INTO orders (client_id, total) VALUES (1, 49.99);\nINSERT INTO orders (client_id, total) VALUES (1, 79.90);\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Borra el cliente:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"DELETE FROM clients WHERE id = 1;\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Comprueba pedidos:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM orders;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Vac\xedo. Se borraron autom\xe1ticamente gracias al ",(0,r.jsx)(n.code,{children:"ON DELETE CASCADE"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"7-buenas-pr\xe1cticas-con-relaciones",children:"7. Buenas pr\xe1cticas con relaciones"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Activa siempre ",(0,r.jsx)(n.code,{children:"PRAGMA foreign_keys = ON;"})," al inicio."]}),"\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:"ON DELETE CASCADE"})," si quieres limpieza autom\xe1tica."]}),"\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:"ON DELETE RESTRICT"})," si no quieres borrar por accidente."]}),"\n",(0,r.jsxs)(n.li,{children:["Crea \xedndices en todas las columnas que usen ",(0,r.jsx)(n.code,{children:"FOREIGN KEY"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Haz pruebas con inserciones y borrados para comprobar que tus reglas funcionan como esperas."}),"\n",(0,r.jsx)(n.li,{children:"Documenta bien la direcci\xf3n de las relaciones (1\u2192N, N\u21921, N\u2192N)."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"errores-comunes-1",children:"Errores comunes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Error"}),(0,r.jsx)(n.th,{children:"Causa"}),(0,r.jsx)(n.th,{children:"Soluci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"FOREIGN KEY constraint failed"})}),(0,r.jsx)(n.td,{children:"Intentaste insertar un ID que no existe"}),(0,r.jsx)(n.td,{children:"Inserta primero en la tabla padre"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Las foreign keys \u201cno hacen nada\u201d"}),(0,r.jsx)(n.td,{children:"No activaste PRAGMA foreign_keys"}),(0,r.jsxs)(n.td,{children:["Ejecuta ",(0,r.jsx)(n.code,{children:"PRAGMA foreign_keys = ON;"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lentitud en joins"}),(0,r.jsx)(n.td,{children:"No hay \xedndice en la columna FK"}),(0,r.jsx)(n.td,{children:"Crea un \xedndice manual"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Borrado no esperado"}),(0,r.jsx)(n.td,{children:"Usaste ON DELETE CASCADE sin querer"}),(0,r.jsx)(n.td,{children:"Cambia a RESTRICT o elimina la cascada"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Con esto ya tienes una ",(0,r.jsx)(n.strong,{children:"base s\xf3lida para trabajar con relaciones 1\u2192N en SQLite"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["En el ",(0,r.jsx)(n.strong,{children:"M\xf3dulo 3"})," aprender\xe1s a hacer consultas expresivas sobre estas relaciones:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"JOIN"})," entre tablas"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"VIEW"})," para consultas reutilizables"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"WITH"})," (CTE) y funciones de ventana"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>c,x:()=>l});var i=s(6540);const r={},a=i.createContext(r);function c(e){const n=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);