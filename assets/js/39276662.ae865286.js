"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[866],{5916:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>s});const r=JSON.parse('{"id":"frontend/js/dom/introduccion","title":"Introducci\xf3n","description":"\xbfQu\xe9 es el DOM?","source":"@site/docs/frontend/js/dom/introduccion.md","sourceDirName":"frontend/js/dom","slug":"/frontend/js/dom/introduccion","permalink":"/docuQuest/docs/frontend/js/dom/introduccion","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/frontend/js/dom/introduccion.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"DOM","permalink":"/docuQuest/docs/frontend/js/dom/"},"next":{"title":"Acceso al DOM","permalink":"/docuQuest/docs/frontend/js/dom/acceso"}}');var o=a(4848),l=a(8453);const i={},d="Introducci\xf3n",t={},s=[{value:"\xbfQu\xe9 es el DOM?",id:"qu\xe9-es-el-dom",level:3},{value:"1.1 Estructura del DOM",id:"11-estructura-del-dom",level:3},{value:"1.2 Historia y Evoluci\xf3n del DOM",id:"12-historia-y-evoluci\xf3n-del-dom",level:3},{value:"1.3 Interacci\xf3n con el DOM",id:"13-interacci\xf3n-con-el-dom",level:3},{value:"1.3.1 Acceso a Elementos del DOM",id:"131-acceso-a-elementos-del-dom",level:3},{value:"1.3.2 Manipulaci\xf3n del DOM",id:"132-manipulaci\xf3n-del-dom",level:3},{value:"1.3.3 Eventos en el DOM",id:"133-eventos-en-el-dom",level:3},{value:"1.4 Ventajas y Desaf\xedos del DOM",id:"14-ventajas-y-desaf\xedos-del-dom",level:3},{value:"1.4.1 Reflujos y Repintados",id:"141-reflujos-y-repintados",level:3},{value:"1.5 Herramientas y T\xe9cnicas Avanzadas",id:"15-herramientas-y-t\xe9cnicas-avanzadas",level:3},{value:"1.5.1 Frameworks y Librer\xedas",id:"151-frameworks-y-librer\xedas",level:3},{value:"1.5.2 T\xe9cnicas de Manipulaci\xf3n Eficiente",id:"152-t\xe9cnicas-de-manipulaci\xf3n-eficiente",level:3},{value:"1.5.3 Herramientas de Depuraci\xf3n",id:"153-herramientas-de-depuraci\xf3n",level:3},{value:"1.6 Futuro del DOM",id:"16-futuro-del-dom",level:3},{value:"Ejemplos de Manipulaci\xf3n del DOM en JavaScript",id:"ejemplos-de-manipulaci\xf3n-del-dom-en-javascript",level:3},{value:"1. Acceso a Elementos del DOM",id:"1-acceso-a-elementos-del-dom",level:3},{value:"1.1 <code>document.getElementById</code>",id:"11-documentgetelementbyid",level:3},{value:"1.2 <code>document.getElementsByClassName</code>",id:"12-documentgetelementsbyclassname",level:3},{value:"1.3 <code>document.getElementsByTagName</code>",id:"13-documentgetelementsbytagname",level:3},{value:"1.4 <code>document.querySelector</code> y <code>document.querySelectorAll</code>",id:"14-documentqueryselector-y-documentqueryselectorall",level:3},{value:"2. Manipulaci\xf3n del DOM",id:"2-manipulaci\xf3n-del-dom",level:3},{value:"2.1 Crear y Agregar Elementos",id:"21-crear-y-agregar-elementos",level:3},{value:"2.2 Modificar Contenido",id:"22-modificar-contenido",level:3},{value:"2.3 Modificar Atributos",id:"23-modificar-atributos",level:3},{value:"2.4 Eliminar Nodos",id:"24-eliminar-nodos",level:3},{value:"3. Manejo de Eventos",id:"3-manejo-de-eventos",level:3},{value:"3.1 <code>addEventListener</code>",id:"31-addeventlistener",level:3},{value:"3.2 Otros Tipos de Eventos",id:"32-otros-tipos-de-eventos",level:3},{value:"4. T\xe9cnicas Avanzadas de Manipulaci\xf3n del DOM",id:"4-t\xe9cnicas-avanzadas-de-manipulaci\xf3n-del-dom",level:3},{value:"4.1 Uso de Document Fragment",id:"41-uso-de-document-fragment",level:3},{value:"4.2 Delegaci\xf3n de Eventos",id:"42-delegaci\xf3n-de-eventos",level:3}];function c(e){const n={code:"code",h1:"h1",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"introducci\xf3n",children:"Introducci\xf3n"})}),"\n",(0,o.jsx)(n.h3,{id:"qu\xe9-es-el-dom",children:"\xbfQu\xe9 es el DOM?"}),"\n",(0,o.jsx)(n.p,{children:"El Modelo de Objetos del Documento, m\xe1s conocido como DOM (Document Object Model), es una interfaz de programaci\xf3n de aplicaciones (API) que permite a los desarrolladores interactuar y manipular documentos HTML y XML de una manera estructurada y din\xe1mica. En esencia, el DOM proporciona una representaci\xf3n en \xe1rbol del documento, donde cada nodo del \xe1rbol corresponde a una parte del documento, como un elemento, un atributo, o un fragmento de texto."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-markdown",children:"HTML (documento)\r\n\u2514\u2500\u2500 <html>\r\n    \u2514\u2500\u2500 <head>\r\n    |   \u251c\u2500\u2500 <title>\r\n    |   |   \u2514\u2500\u2500 T\xedtulo de la p\xe1gina\r\n    |   \u2514\u2500\u2500 <link>\r\n    |       \u2514\u2500\u2500 Archivos de estilos\r\n    \u2514\u2500\u2500 <body>\r\n        \u2514\u2500\u2500 <header>\r\n        |   \u2514\u2500\u2500 <nav>\r\n        |       \u2514\u2500\u2500 Men\xfa de navegaci\xf3n\r\n        \u2514\u2500\u2500 <main>\r\n        |   \u251c\u2500\u2500 <section>\r\n        |   |   \u2514\u2500\u2500 Contenido principal\r\n        |   \u2514\u2500\u2500 <section>\r\n        |       \u2514\u2500\u2500 Otro contenido\r\n        \u2514\u2500\u2500 <footer>\r\n            \u2514\u2500\u2500 <p>\r\n                \u2514\u2500\u2500 Pie de p\xe1gina\n"})}),"\n",(0,o.jsx)(n.h3,{id:"11-estructura-del-dom",children:"1.1 Estructura del DOM"}),"\n",(0,o.jsx)(n.p,{children:"La estructura del DOM se puede imaginar como un \xe1rbol jer\xe1rquico, donde el nodo ra\xedz es el documento mismo, y cada nodo hijo representa un componente del documento. Esta estructura se descompone de la siguiente manera:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nodo Documento (Document Node)"}),": Es el nodo ra\xedz de cada documento, representando al documento entero."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nodos Elemento (Element Nodes)"}),": Representan las etiquetas HTML o XML, como ",(0,o.jsx)(n.code,{children:"<div>"}),", ",(0,o.jsx)(n.code,{children:"<span>"}),", ",(0,o.jsx)(n.code,{children:"<a>"}),", etc."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nodos de Texto (Text Nodes)"}),": Representan el contenido textual dentro de los elementos."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Nodos de Atributo (Attribute Nodes)"}),": Representan los atributos de los elementos, aunque en la mayor\xeda de las implementaciones del DOM, los atributos se gestionan como parte de los elementos en lugar de nodos separados."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Esta representaci\xf3n permite una manipulaci\xf3n precisa y din\xe1mica del contenido y la estructura del documento, lo que es esencial para la creaci\xf3n de aplicaciones web interactivas y modernas."}),"\n",(0,o.jsx)(n.h3,{id:"12-historia-y-evoluci\xf3n-del-dom",children:"1.2 Historia y Evoluci\xf3n del DOM"}),"\n",(0,o.jsx)(n.p,{children:"El DOM fue concebido para estandarizar la forma en que los documentos son accedidos y manipulados por los navegadores web. Antes de la estandarizaci\xf3n, cada navegador implementaba su propio m\xe9todo para manipular documentos, lo que resultaba en una fragmentaci\xf3n significativa y problemas de compatibilidad. La primera especificaci\xf3n del DOM fue publicada por el World Wide Web Consortium (W3C) en 1998, y ha evolucionado desde entonces en varias versiones, siendo DOM Level 1, DOM Level 2 y DOM Level 3 las m\xe1s conocidas."}),"\n",(0,o.jsx)(n.p,{children:"El DOM no solo se limita a HTML, sino que tambi\xe9n se aplica a documentos XML, lo que permite a los desarrolladores trabajar con una amplia variedad de lenguajes de marcado. Con el advenimiento de HTML5 y la proliferaci\xf3n de aplicaciones web din\xe1micas, la relevancia del DOM ha aumentado, convirti\xe9ndose en una herramienta esencial para los desarrolladores web."}),"\n",(0,o.jsx)(n.h3,{id:"13-interacci\xf3n-con-el-dom",children:"1.3 Interacci\xf3n con el DOM"}),"\n",(0,o.jsx)(n.p,{children:"Uno de los aspectos m\xe1s poderosos del DOM es su capacidad para ser manipulado mediante lenguajes de programaci\xf3n, particularmente JavaScript. JavaScript, como lenguaje de scripting del lado del cliente, proporciona las herramientas necesarias para interactuar con el DOM de manera efectiva. A trav\xe9s de m\xe9todos y propiedades predefinidos, los desarrolladores pueden acceder y modificar la estructura, el estilo y el contenido de los documentos."}),"\n",(0,o.jsx)(n.h3,{id:"131-acceso-a-elementos-del-dom",children:"1.3.1 Acceso a Elementos del DOM"}),"\n",(0,o.jsx)(n.p,{children:"El acceso a los elementos del DOM se puede realizar de varias maneras, utilizando m\xe9todos que permiten seleccionar elementos espec\xedficos o grupos de elementos. Los m\xe9todos m\xe1s comunes incluyen:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"document.getElementById(id)"}),": Devuelve el elemento que tiene el atributo ",(0,o.jsx)(n.code,{children:"id"})," especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"document.getElementsByClassName(className)"}),": Devuelve una colecci\xf3n de todos los elementos que tienen la clase especificada."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"document.getElementsByTagName(tagName)"}),": Devuelve una colecci\xf3n de todos los elementos que tienen el nombre de etiqueta especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"document.querySelector(selector)"}),": Devuelve el primer elemento que coincide con el selector CSS especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"document.querySelectorAll(selector)"}),": Devuelve una lista est\xe1tica de todos los elementos que coinciden con el selector CSS especificado."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Estos m\xe9todos proporcionan una gran flexibilidad, permitiendo a los desarrolladores acceder a cualquier parte del documento de manera eficiente."}),"\n",(0,o.jsx)(n.h3,{id:"132-manipulaci\xf3n-del-dom",children:"1.3.2 Manipulaci\xf3n del DOM"}),"\n",(0,o.jsx)(n.p,{children:"La manipulaci\xf3n del DOM implica cambios en la estructura del documento, el contenido o los atributos de los elementos. JavaScript proporciona varios m\xe9todos para lograr esto:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Crear Elementos"}),": ",(0,o.jsx)(n.code,{children:"document.createElement(tagName)"})," crea un nuevo elemento con el nombre de etiqueta especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Agregar Nodos"}),": ",(0,o.jsx)(n.code,{children:"parentNode.appendChild(newNode)"})," agrega un nuevo nodo como hijo del nodo especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Eliminar Nodos"}),": ",(0,o.jsx)(n.code,{children:"parentNode.removeChild(childNode)"})," elimina un nodo hijo del nodo especificado."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Modificar Contenido"}),": ",(0,o.jsx)(n.code,{children:"element.innerHTML"})," permite establecer o obtener el HTML dentro de un elemento, mientras que ",(0,o.jsx)(n.code,{children:"element.textContent"})," establece o obtiene el texto dentro de un elemento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Modificar Atributos"}),": ",(0,o.jsx)(n.code,{children:"element.setAttribute(name, value)"})," establece el valor de un atributo, y ",(0,o.jsx)(n.code,{children:"element.getAttribute(name)"})," obtiene el valor de un atributo."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"133-eventos-en-el-dom",children:"1.3.3 Eventos en el DOM"}),"\n",(0,o.jsxs)(n.p,{children:["Los eventos son una parte crucial de la interacci\xf3n con el DOM. Permiten que los desarrolladores respondan a las acciones del usuario, como clics, movimientos del rat\xf3n, entradas de teclado, y m\xe1s. La asociaci\xf3n de eventos a elementos del DOM se realiza t\xedpicamente mediante el m\xe9todo ",(0,o.jsx)(n.code,{children:"addEventListener(type, listener)"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"click"}),": Ocurre cuando se hace clic en un elemento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"mouseover"}),": Ocurre cuando el puntero del rat\xf3n se mueve sobre un elemento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"mouseout"}),": Ocurre cuando el puntero del rat\xf3n se mueve fuera de un elemento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"submit"}),": Ocurre cuando se env\xeda un formulario."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"keydown"}),": Ocurre cuando se presiona una tecla."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"La gesti\xf3n eficiente de eventos es esencial para crear experiencias de usuario fluidas y receptivas."}),"\n",(0,o.jsx)(n.h3,{id:"14-ventajas-y-desaf\xedos-del-dom",children:"1.4 Ventajas y Desaf\xedos del DOM"}),"\n",(0,o.jsx)(n.p,{children:'La principal ventaja del DOM es su capacidad para permitir una interacci\xf3n y manipulaci\xf3n detallada y precisa de los documentos web. Esto es fundamental para la creaci\xf3n de aplicaciones web din\xe1micas y ricas en funcionalidades. Sin embargo, tambi\xe9n presenta desaf\xedos, especialmente en t\xe9rminos de rendimiento. Manipulaciones frecuentes y extensas del DOM pueden causar "reflujos" (reflows) y "repintados" (repaints), que son operaciones costosas para el navegador y pueden llevar a una degradaci\xf3n del rendimiento.'}),"\n",(0,o.jsx)(n.h3,{id:"141-reflujos-y-repintados",children:"1.4.1 Reflujos y Repintados"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reflujos (Reflows)"}),": Ocurren cuando se cambia la estructura del DOM o los estilos que afectan al dise\xf1o del documento. El navegador debe recalcular las posiciones y tama\xf1os de los elementos, lo que puede ser una operaci\xf3n costosa en t\xe9rminos de rendimiento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Repintados (Repaints)"}),": Ocurren cuando se cambia la apariencia de los elementos sin afectar su disposici\xf3n, como los colores de fondo o las propiedades de borde. Aunque menos costosos que los reflujos, tambi\xe9n pueden afectar el rendimiento si son frecuentes."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Minimizar estos procesos es crucial para mantener el rendimiento y la fluidez de las aplicaciones web. T\xe9cnicas como la modificaci\xf3n de clases en lugar de estilos individuales y el uso de fragmentos de documentos para realizar cambios en lote pueden ayudar a reducir estos impactos."}),"\n",(0,o.jsx)(n.h3,{id:"15-herramientas-y-t\xe9cnicas-avanzadas",children:"1.5 Herramientas y T\xe9cnicas Avanzadas"}),"\n",(0,o.jsx)(n.p,{children:"Existen numerosas herramientas y t\xe9cnicas avanzadas que facilitan la interacci\xf3n con el DOM y mejoran el rendimiento y la mantenibilidad del c\xf3digo."}),"\n",(0,o.jsx)(n.h3,{id:"151-frameworks-y-librer\xedas",children:"1.5.1 Frameworks y Librer\xedas"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"React"}),": Un marco de trabajo desarrollado por Facebook que utiliza un DOM virtual para minimizar los cambios directos al DOM real, mejorando significativamente el rendimiento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Angular"}),": Un framework desarrollado por Google que proporciona una estructura robusta para el desarrollo de aplicaciones web din\xe1micas y utiliza t\xe9cnicas avanzadas para la manipulaci\xf3n del DOM."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Vue.js"}),": Un framework progresivo que se centra en la capacidad de respuesta y la simplicidad, permitiendo una manipulaci\xf3n eficiente del DOM."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"152-t\xe9cnicas-de-manipulaci\xf3n-eficiente",children:"1.5.2 T\xe9cnicas de Manipulaci\xf3n Eficiente"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"DOM Virtual"}),": Utilizado por bibliotecas como React, crea una representaci\xf3n en memoria del DOM real, permitiendo actualizaciones m\xe1s eficientes y minimizando los reflujos y repintados."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Fragmentos de Documentos (Document Fragments)"}),": Permiten realizar m\xfaltiples cambios en un fragmento del DOM antes de insertarlo en el documento real, mejorando el rendimiento."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Delegaci\xf3n de Eventos (Event Delegation)"}),": En lugar de agregar m\xfaltiples oyentes de eventos a muchos elementos individuales, se a\xf1ade un solo oyente a un ancestro com\xfan, utilizando el concepto de burbujeo de eventos."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"153-herramientas-de-depuraci\xf3n",children:"1.5.3 Herramientas de Depuraci\xf3n"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"DevTools del Navegador"}),": La mayor\xeda de los navegadores modernos incluyen herramientas de desarrollo que permiten inspeccionar, editar y depurar el DOM en tiempo real."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lighthouse"}),": Una herramienta de Google que ayuda a auditar el rendimiento de las aplicaciones web, proporcionando informaci\xf3n sobre la eficiencia del DOM."]}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"16-futuro-del-dom",children:"1.6 Futuro del DOM"}),"\n",(0,o.jsx)(n.p,{children:"A medida que la web contin\xfaa evolucionando, tambi\xe9n lo hace el DOM. La integraci\xf3n con nuevas tecnolog\xedas, como Web Components y la Web Assembly, promete llevar la manipulaci\xf3n del DOM a nuevos niveles de eficiencia y funcionalidad. Los desarrolladores web deben mantenerse al tanto de estas tendencias y adaptarse a las nuevas herramientas y t\xe9cnicas para seguir creando experiencias de usuario excepcionales."}),"\n",(0,o.jsx)(n.p,{children:"En resumen, el DOM es una parte fundamental del desarrollo web moderno, proporcionando la estructura y las herramientas necesarias para crear aplicaciones interactivas y din\xe1micas. La comprensi\xf3n profunda de su funcionamiento, junto con el uso de t\xe9cnicas y herramientas avanzadas, es esencial para cualquier desarrollador web que busque crear aplicaciones eficientes y de alta calidad."}),"\n",(0,o.jsx)(n.h3,{id:"ejemplos-de-manipulaci\xf3n-del-dom-en-javascript",children:"Ejemplos de Manipulaci\xf3n del DOM en JavaScript"}),"\n",(0,o.jsx)(n.h3,{id:"1-acceso-a-elementos-del-dom",children:"1. Acceso a Elementos del DOM"}),"\n",(0,o.jsxs)(n.h3,{id:"11-documentgetelementbyid",children:["1.1 ",(0,o.jsx)(n.code,{children:"document.getElementById"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Acceso a Elementos del DOM</title>\r\n</head>\r\n<body>\r\n    <div id=\"myDiv\">Hola, Mundo!</div>\r\n    <script>\r\n        var element = document.getElementById('myDiv');\r\n        console.log(element.textContent); // Salida: Hola, Mundo!\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"12-documentgetelementsbyclassname",children:["1.2 ",(0,o.jsx)(n.code,{children:"document.getElementsByClassName"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Acceso a Elementos del DOM</title>\r\n</head>\r\n<body>\r\n    <div class="myClass">Elemento 1</div>\r\n    <div class="myClass">Elemento 2</div>\r\n    <script>\r\n        var elements = document.getElementsByClassName(\'myClass\');\r\n        console.log(elements.length); // Salida: 2\r\n        console.log(elements[0].textContent); // Salida: Elemento 1\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"13-documentgetelementsbytagname",children:["1.3 ",(0,o.jsx)(n.code,{children:"document.getElementsByTagName"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Acceso a Elementos del DOM</title>\r\n</head>\r\n<body>\r\n    <p>Parrafo 1</p>\r\n    <p>Parrafo 2</p>\r\n    <script>\r\n        var paragraphs = document.getElementsByTagName('p');\r\n        console.log(paragraphs.length); // Salida: 2\r\n        console.log(paragraphs[1].textContent); // Salida: Parrafo 2\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"14-documentqueryselector-y-documentqueryselectorall",children:["1.4 ",(0,o.jsx)(n.code,{children:"document.querySelector"})," y ",(0,o.jsx)(n.code,{children:"document.querySelectorAll"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Acceso a Elementos del DOM</title>\r\n</head>\r\n<body>\r\n    <div id="container">\r\n        <p class="text">Texto 1</p>\r\n        <p class="text">Texto 2</p>\r\n    </div>\r\n    <script>\r\n        var firstText = document.querySelector(\'#container .text\');\r\n        console.log(firstText.textContent); // Salida: Texto 1\r\n\r\n        var allTexts = document.querySelectorAll(\'#container .text\');\r\n        console.log(allTexts.length); // Salida: 2\r\n        console.log(allTexts[1].textContent); // Salida: Texto 2\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n'})}),"\n",(0,o.jsx)(n.h3,{id:"2-manipulaci\xf3n-del-dom",children:"2. Manipulaci\xf3n del DOM"}),"\n",(0,o.jsx)(n.h3,{id:"21-crear-y-agregar-elementos",children:"2.1 Crear y Agregar Elementos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manipulaci\xf3n del DOM</title>\r\n</head>\r\n<body>\r\n    <div id=\"parentDiv\">Padre</div>\r\n    <script>\r\n        var newElement = document.createElement('p');\r\n        newElement.textContent = 'Este es un nuevo p\xe1rrafo';\r\n        document.getElementById('parentDiv').appendChild(newElement);\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"22-modificar-contenido",children:"2.2 Modificar Contenido"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manipulaci\xf3n del DOM</title>\r\n</head>\r\n<body>\r\n    <div id=\"contentDiv\">Contenido Antiguo</div>\r\n    <script>\r\n        var element = document.getElementById('contentDiv');\r\n        element.textContent = 'Contenido Nuevo';\r\n        // Tambi\xe9n se puede usar innerHTML\r\n        // element.innerHTML = '<strong>Contenido Nuevo</strong>';\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"23-modificar-atributos",children:"2.3 Modificar Atributos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manipulaci\xf3n del DOM</title>\r\n</head>\r\n<body>\r\n    <img id=\"myImage\" src=\"imagen_antigua.jpg\" alt=\"Imagen\">\r\n    <script>\r\n        var image = document.getElementById('myImage');\r\n        image.setAttribute('src', 'imagen_nueva.jpg');\r\n        image.alt = 'Imagen Nueva';\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"24-eliminar-nodos",children:"2.4 Eliminar Nodos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manipulaci\xf3n del DOM</title>\r\n</head>\r\n<body>\r\n    <div id=\"parentDiv\">\r\n        <p id=\"childP\">Este es un p\xe1rrafo que ser\xe1 eliminado</p>\r\n    </div>\r\n    <script>\r\n        var parent = document.getElementById('parentDiv');\r\n        var child = document.getElementById('childP');\r\n        parent.removeChild(child);\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"3-manejo-de-eventos",children:"3. Manejo de Eventos"}),"\n",(0,o.jsxs)(n.h3,{id:"31-addeventlistener",children:["3.1 ",(0,o.jsx)(n.code,{children:"addEventListener"})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manejo de Eventos</title>\r\n</head>\r\n<body>\r\n    <button id=\"myButton\">Haz Clic Aqu\xed</button>\r\n    <script>\r\n        var button = document.getElementById('myButton');\r\n        button.addEventListener('click', function() {\r\n            alert('\xa1Bot\xf3n clickeado!');\r\n        });\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"32-otros-tipos-de-eventos",children:"3.2 Otros Tipos de Eventos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Manejo de Eventos</title>\r\n</head>\r\n<body>\r\n    <input type=\"text\" id=\"myInput\" placeholder=\"Escribe algo...\">\r\n    <script>\r\n        var input = document.getElementById('myInput');\r\n        input.addEventListener('keyup', function(event) {\r\n            console.log('Tecla presionada: ' + event.key);\r\n        });\r\n\r\n        input.addEventListener('focus', function() {\r\n            console.log('Input enfocado');\r\n        });\r\n\r\n        input.addEventListener('blur', function() {\r\n            console.log('Input desenfocado');\r\n        });\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"4-t\xe9cnicas-avanzadas-de-manipulaci\xf3n-del-dom",children:"4. T\xe9cnicas Avanzadas de Manipulaci\xf3n del DOM"}),"\n",(0,o.jsx)(n.h3,{id:"41-uso-de-document-fragment",children:"4.1 Uso de Document Fragment"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Document Fragment</title>\r\n</head>\r\n<body>\r\n    <ul id=\"myList\"></ul>\r\n    <script>\r\n        var fragment = document.createDocumentFragment();\r\n        for (var i = 1; i <= 5; i++) {\r\n            var li = document.createElement('li');\r\n            li.textContent = 'Elemento ' + i;\r\n            fragment.appendChild(li);\r\n        }\r\n        document.getElementById('myList').appendChild(fragment);\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.h3,{id:"42-delegaci\xf3n-de-eventos",children:"4.2 Delegaci\xf3n de Eventos"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Delegaci\xf3n de Eventos</title>\r\n</head>\r\n<body>\r\n    <ul id=\"parentList\">\r\n        <li>Item 1</li>\r\n        <li>Item 2</li>\r\n        <li>Item 3</li>\r\n    </ul>\r\n    <script>\r\n        var list = document.getElementById('parentList');\r\n        list.addEventListener('click', function(event) {\r\n            if (event.target.tagName === 'LI') {\r\n                alert('Item clickeado: ' + event.target.textContent);\r\n            }\r\n        });\r\n    <\/script>\r\n</body>\r\n</html>\r\n\n"})}),"\n",(0,o.jsx)(n.p,{children:"Estos ejemplos cubren los conceptos fundamentales del acceso, manipulaci\xf3n y manejo de eventos en el DOM, as\xed como algunas t\xe9cnicas avanzadas que ayudan a mejorar la eficiencia del c\xf3digo y la experiencia del usuario en aplicaciones web."})]})}function m(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>d});var r=a(6540);const o={},l=r.createContext(o);function i(e){const n=r.useContext(l);return r.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(l.Provider,{value:n},e.children)}}}]);