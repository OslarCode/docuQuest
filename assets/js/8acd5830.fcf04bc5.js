"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[217],{3313:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"js/sintaxis","title":"Sintaxis JavaScript","description":"Sintaxis B\xe1sica de JavaScript","source":"@site/docs/js/sintaxis.md","sourceDirName":"js","slug":"/js/sintaxis","permalink":"/docuQuest/docs/js/sintaxis","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/js/sintaxis.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Ubicaci\xf3n de los archivos JavaScript","permalink":"/docuQuest/docs/js/ubicacionArchivos"},"next":{"title":"Tipos de datos","permalink":"/docuQuest/docs/js/tiposDatos"}}');var i=n(4848),r=n(8453);const o={},l="Sintaxis JavaScript",c={},d=[{value:"Sintaxis B\xe1sica de JavaScript",id:"sintaxis-b\xe1sica-de-javascript",level:2},{value:"\xbfQu\xe9 es una variable?",id:"qu\xe9-es-una-variable",level:3},{value:"Declaraci\xf3n de Variables",id:"declaraci\xf3n-de-variables",level:3},{value:"Comentarios",id:"comentarios",level:3},{value:"Sentencias y Bloques",id:"sentencias-y-bloques",level:3},{value:"Funciones",id:"funciones",level:3},{value:"Operadores",id:"operadores",level:3},{value:"Tipos de Datos en JavaScript",id:"tipos-de-datos-en-javascript",level:2},{value:"1. N\xfameros (Number)",id:"1-n\xfameros-number",level:3},{value:"2. Cadenas de Texto (String)",id:"2-cadenas-de-texto-string",level:3},{value:"3. Booleanos (Boolean)",id:"3-booleanos-boolean",level:3},{value:"4. Arreglos (Array)",id:"4-arreglos-array",level:3},{value:"5. Objetos (Object)",id:"5-objetos-object",level:3},{value:"6. Undefined",id:"6-undefined",level:3},{value:"7. Null",id:"7-null",level:3},{value:"8. Symbol",id:"8-symbol",level:3},{value:"Conversi\xf3n entre Tipos de Datos",id:"conversi\xf3n-entre-tipos-de-datos",level:3},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2}];function t(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.header,{children:(0,i.jsx)(a.h1,{id:"sintaxis-javascript",children:"Sintaxis JavaScript"})}),"\n",(0,i.jsx)(a.h2,{id:"sintaxis-b\xe1sica-de-javascript",children:"Sintaxis B\xe1sica de JavaScript"}),"\n",(0,i.jsx)(a.h3,{id:"qu\xe9-es-una-variable",children:"\xbfQu\xe9 es una variable?"}),"\n",(0,i.jsx)(a.p,{children:"Una variable en JavaScript es como una caja con un nombre donde puedes guardar informaci\xf3n. Imagina que tienes una caja etiquetada con el nombre \u201cmessage\u201d. Dentro de esa caja, puedes almacenar diferentes cosas, como palabras, n\xfameros o incluso otros objetos."}),"\n",(0,i.jsx)(a.h3,{id:"declaraci\xf3n-de-variables",children:"Declaraci\xf3n de Variables"}),"\n",(0,i.jsxs)(a.p,{children:["En JavaScript, las variables se declaran utilizando las palabras clave ",(0,i.jsx)(a.code,{children:"var"}),", ",(0,i.jsx)(a.code,{children:"let"})," o ",(0,i.jsx)(a.code,{children:"const"}),". La diferencia entre ellas radica en su alcance y mutabilidad."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"// Declaraci\xf3n de variables utilizando var\nvar x = 10;\n\n// Declaraci\xf3n de variables utilizando let\nlet y = 20;\n\n// Declaraci\xf3n de variables utilizando const\nconst z = 30;\n"})}),"\n",(0,i.jsx)(a.h3,{id:"comentarios",children:"Comentarios"}),"\n",(0,i.jsx)(a.p,{children:"Los comentarios en JavaScript se utilizan para hacer anotaciones dentro del c\xf3digo que no se ejecutan. Pueden ser de una sola l\xednea o de varias l\xedneas."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"// Este es un comentario de una sola l\xednea\n\n/*\nEste es un comentario de\nvarias l\xedneas\n*/\n"})}),"\n",(0,i.jsx)(a.h3,{id:"sentencias-y-bloques",children:"Sentencias y Bloques"}),"\n",(0,i.jsxs)(a.p,{children:["Las sentencias en JavaScript son l\xedneas individuales de c\xf3digo que se ejecutan secuencialmente. Los bloques de c\xf3digo se delimitan con llaves ",(0,i.jsx)(a.code,{children:"{}"})," y pueden contener m\xfaltiples sentencias."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:'// Sentencia de asignaci\xf3n\nlet a = 5;\n\n// Bloque de c\xf3digo con condicional if\nif (a > 0) {\n  console.log("El n\xfamero es positivo");\n}\n'})}),"\n",(0,i.jsx)(a.h3,{id:"funciones",children:"Funciones"}),"\n",(0,i.jsx)(a.p,{children:"Las funciones en JavaScript se utilizan para encapsular bloques de c\xf3digo y pueden recibir par\xe1metros y devolver valores."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"// Declaraci\xf3n de una funci\xf3n\nfunction suma(a, b) {\n  return a + b;\n}\n\n// Llamada a la funci\xf3n\nlet resultado = suma(3, 5);\nconsole.log(resultado); // Output: 8\n"})}),"\n",(0,i.jsx)(a.h3,{id:"operadores",children:"Operadores"}),"\n",(0,i.jsx)(a.p,{children:"JavaScript admite una variedad de operadores para realizar c\xe1lculos, comparaciones y otras operaciones."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"// Operadores aritm\xe9ticos\nlet suma = 3 + 5; // suma = 8\nlet resta = 10 - 3; // resta = 7\nlet multiplicacion = 2 * 4; // multiplicacion = 8\nlet division = 10 / 2; // division = 5\n\n// Operadores de comparaci\xf3n\nlet igualdad = suma == resta; // igualdad = false\nlet desigualdad = suma != multiplicacion; // desigualdad = false\nlet mayorQue = suma > resta; // mayorQue = true\n\n// Operadores l\xf3gicos\nlet and = suma > resta && suma < multiplicacion; // and = true\nlet or = suma < resta || suma == multiplicacion; // or = true\n"})}),"\n",(0,i.jsx)(a.h2,{id:"tipos-de-datos-en-javascript",children:"Tipos de Datos en JavaScript"}),"\n",(0,i.jsx)(a.p,{children:"JavaScript es un lenguaje de tipado din\xe1mico, lo que significa que las variables pueden contener diferentes tipos de datos en diferentes momentos de la ejecuci\xf3n del programa. A continuaci\xf3n, se presentan los tipos de datos fundamentales en JavaScript:"}),"\n",(0,i.jsx)(a.h3,{id:"1-n\xfameros-number",children:"1. N\xfameros (Number)"}),"\n",(0,i.jsx)(a.p,{children:"Los n\xfameros en JavaScript pueden ser enteros o de punto flotante y se pueden utilizar para realizar operaciones aritm\xe9ticas."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"let entero = 10;\nlet flotante = 3.14;\n"})}),"\n",(0,i.jsx)(a.h3,{id:"2-cadenas-de-texto-string",children:"2. Cadenas de Texto (String)"}),"\n",(0,i.jsx)(a.p,{children:"Las cadenas de texto en JavaScript se utilizan para representar texto y se pueden delimitar con comillas simples ('') o dobles (\"\")."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:'let texto1 = "Hola, mundo!";\nlet texto2 = "\xa1Bienvenido a JavaScript!";\n'})}),"\n",(0,i.jsx)(a.h3,{id:"3-booleanos-boolean",children:"3. Booleanos (Boolean)"}),"\n",(0,i.jsx)(a.p,{children:"Los booleanos en JavaScript representan un valor de verdadero (true) o falso (false) y se utilizan en expresiones condicionales y l\xf3gicas."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"let verdadero = true;\nlet falso = false;\n"})}),"\n",(0,i.jsx)(a.h3,{id:"4-arreglos-array",children:"4. Arreglos (Array)"}),"\n",(0,i.jsx)(a.p,{children:"Los arreglos en JavaScript se utilizan para almacenar m\xfaltiples valores en una sola variable y se pueden acceder mediante un \xedndice num\xe9rico."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"let arreglo = [1, 2, 3, 4, 5];\n"})}),"\n",(0,i.jsx)(a.h3,{id:"5-objetos-object",children:"5. Objetos (Object)"}),"\n",(0,i.jsx)(a.p,{children:"Los objetos en JavaScript se utilizan para representar colecciones de pares clave-valor y se pueden utilizar para modelar estructuras de datos m\xe1s complejas."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:'let persona = {\n  nombre: "Juan",\n  edad: 30,\n  ciudad: "Madrid",\n};\n'})}),"\n",(0,i.jsx)(a.h3,{id:"6-undefined",children:"6. Undefined"}),"\n",(0,i.jsxs)(a.p,{children:["El valor ",(0,i.jsx)(a.code,{children:"undefined"})," se utiliza para representar variables que no tienen un valor asignado o que no est\xe1n definidas."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"let variableNoDefinida;\nconsole.log(variableNoDefinida); // Output: undefined\n"})}),"\n",(0,i.jsx)(a.h3,{id:"7-null",children:"7. Null"}),"\n",(0,i.jsxs)(a.p,{children:["El valor ",(0,i.jsx)(a.code,{children:"null"})," se utiliza para representar la ausencia intencional de cualquier valor o referencia de objeto."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:"let valorNulo = null;\n"})}),"\n",(0,i.jsx)(a.h3,{id:"8-symbol",children:"8. Symbol"}),"\n",(0,i.jsx)(a.p,{children:"Los s\xedmbolos (Symbol) son valores \xfanicos que se utilizan como identificadores de propiedad en objetos."}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:'let simbolo = Symbol("descripcion");\n'})}),"\n",(0,i.jsx)(a.h3,{id:"conversi\xf3n-entre-tipos-de-datos",children:"Conversi\xf3n entre Tipos de Datos"}),"\n",(0,i.jsxs)(a.p,{children:["JavaScript proporciona m\xe9todos para convertir entre diferentes tipos de datos, como ",(0,i.jsx)(a.code,{children:"parseInt()"})," y ",(0,i.jsx)(a.code,{children:"parseFloat()"})," para convertir cadenas a n\xfameros, y ",(0,i.jsx)(a.code,{children:"toString()"})," para convertir n\xfameros a cadenas."]}),"\n",(0,i.jsx)(a.pre,{children:(0,i.jsx)(a.code,{className:"language-jsx",children:'let cadena = "10";\nlet numero = parseInt(cadena); // numero = 10\n'})}),"\n",(0,i.jsx)(a.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,i.jsxs)(a.p,{children:["En resumen, la sintaxis b\xe1sica de JavaScript incluye la declaraci\xf3n de variables, comentarios, sentencias y bloques, funciones y operadores. Adem\xe1s, JavaScript admite una variedad de tipos de datos fundamentales, como n\xfameros, cadenas de texto, booleanos, arreglos, objetos, ",(0,i.jsx)(a.code,{children:"undefined"}),", ",(0,i.jsx)(a.code,{children:"null"})," y s\xedmbolos. Comprender estos conceptos b\xe1sicos es fundamental para escribir c\xf3digo JavaScript funcional y eficiente en el desarrollo web. A medida que avancemos en nuestro dominio del lenguaje, podremos utilizar estos conceptos para crear aplicaciones web m\xe1s complejas y din\xe1micas."]})]})}function u(e={}){const{wrapper:a}={...(0,r.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>l});var s=n(6540);const i={},r=s.createContext(i);function o(e){const a=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:a},e.children)}}}]);