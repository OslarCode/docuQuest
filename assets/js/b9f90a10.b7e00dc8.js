"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[1377],{3746:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"frontend/js/ifElse","title":"If/Else","description":"\xbfQu\xe9 son los condicionales?","source":"@site/docs/frontend/js/ifElse.md","sourceDirName":"frontend/js","slug":"/frontend/js/ifElse","permalink":"/docuQuest/docs/frontend/js/ifElse","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/frontend/js/ifElse.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Booleanos","permalink":"/docuQuest/docs/frontend/js/booleanos"},"next":{"title":"Switch","permalink":"/docuQuest/docs/frontend/js/switch"}}');var i=s(4848),o=s(8453);const r={},l="If/Else",c={},d=[{value:"\xbfQu\xe9 son los condicionales?",id:"qu\xe9-son-los-condicionales",level:2},{value:"La estructura b\xe1sica de los condicionales en JavaScript",id:"la-estructura-b\xe1sica-de-los-condicionales-en-javascript",level:2},{value:"Uso de la declaraci\xf3n <code>if</code>",id:"uso-de-la-declaraci\xf3n-if",level:2},{value:"Uso de la declaraci\xf3n <code>else</code>",id:"uso-de-la-declaraci\xf3n-else",level:2},{value:"Uso de la declaraci\xf3n <code>else if</code>",id:"uso-de-la-declaraci\xf3n-else-if",level:2},{value:"Consideraciones adicionales",id:"consideraciones-adicionales",level:2},{value:"El condicional ternario",id:"el-condicional-ternario",level:2},{value:"Ejemplo 1: Determinar si un n\xfamero es par o impar",id:"ejemplo-1-determinar-si-un-n\xfamero-es-par-o-impar",level:3},{value:"Ejemplo 2: Verificar si una persona es mayor de edad",id:"ejemplo-2-verificar-si-una-persona-es-mayor-de-edad",level:3},{value:"Ejemplo 3: Seleccionar un valor basado en una variable booleana",id:"ejemplo-3-seleccionar-un-valor-basado-en-una-variable-booleana",level:3},{value:"Comentarios sobre el c\xf3digo",id:"comentarios-sobre-el-c\xf3digo",level:3},{value:"Conclusiones",id:"conclusiones",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"ifelse",children:"If/Else"})}),"\n",(0,i.jsx)(n.h2,{id:"qu\xe9-son-los-condicionales",children:"\xbfQu\xe9 son los condicionales?"}),"\n",(0,i.jsx)(n.p,{children:"Los condicionales son estructuras de control de flujo que permiten ejecutar ciertas porciones de c\xf3digo solo si se cumple una condici\xf3n espec\xedfica. En JavaScript, los condicionales se utilizan para realizar acciones basadas en la evaluaci\xf3n de expresiones l\xf3gicas. Esto permite que un programa tome diferentes caminos de ejecuci\xf3n dependiendo de las condiciones que se cumplan en tiempo de ejecuci\xf3n."}),"\n",(0,i.jsx)(n.h2,{id:"la-estructura-b\xe1sica-de-los-condicionales-en-javascript",children:"La estructura b\xe1sica de los condicionales en JavaScript"}),"\n",(0,i.jsxs)(n.p,{children:["En JavaScript, los condicionales b\xe1sicos est\xe1n formados por la declaraci\xf3n ",(0,i.jsx)(n.code,{children:"if"}),", seguida de una expresi\xf3n l\xf3gica que se eval\xfaa. Si la expresi\xf3n se eval\xfaa como verdadera, el bloque de c\xf3digo dentro del ",(0,i.jsx)(n.code,{children:"if"})," se ejecuta. Adem\xe1s del ",(0,i.jsx)(n.code,{children:"if"}),", tambi\xe9n se pueden utilizar ",(0,i.jsx)(n.code,{children:"else"})," y ",(0,i.jsx)(n.code,{children:"else if"})," para definir bloques de c\xf3digo alternativos que se ejecutan en caso de que la expresi\xf3n l\xf3gica no sea verdadera."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"if (condicion) {\r\n  // Bloque de c\xf3digo si la condici\xf3n es verdadera\r\n} else if (otraCondicion) {\r\n  // Bloque de c\xf3digo si la primera condici\xf3n no se cumple, pero esta s\xed\r\n} else {\r\n  // Bloque de c\xf3digo si ninguna de las condiciones anteriores se cumple\r\n}\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"uso-de-la-declaraci\xf3n-if",children:["Uso de la declaraci\xf3n ",(0,i.jsx)(n.code,{children:"if"})]}),"\n",(0,i.jsxs)(n.p,{children:["La declaraci\xf3n ",(0,i.jsx)(n.code,{children:"if"})," es la forma m\xe1s b\xe1sica de condicional en JavaScript. Permite ejecutar un bloque de c\xf3digo solo si la expresi\xf3n l\xf3gica que se eval\xfaa es verdadera."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ejemplo:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let edad = 18;\r\n\r\nif (edad >= 18) {\r\n  console.log("Eres mayor de edad");\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["En este ejemplo, el bloque de c\xf3digo dentro del ",(0,i.jsx)(n.code,{children:"if"})," se ejecutar\xe1 solo si la variable ",(0,i.jsx)(n.code,{children:"edad"})," es mayor o igual a 18."]}),"\n",(0,i.jsxs)(n.h2,{id:"uso-de-la-declaraci\xf3n-else",children:["Uso de la declaraci\xf3n ",(0,i.jsx)(n.code,{children:"else"})]}),"\n",(0,i.jsxs)(n.p,{children:["La declaraci\xf3n ",(0,i.jsx)(n.code,{children:"else"})," se utiliza junto con ",(0,i.jsx)(n.code,{children:"if"})," para ejecutar un bloque de c\xf3digo alternativo si la expresi\xf3n l\xf3gica del ",(0,i.jsx)(n.code,{children:"if"})," no es verdadera."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ejemplo:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let hora = 14;\r\n\r\nif (hora < 12) {\r\n  console.log("Buenos d\xedas");\r\n} else {\r\n  console.log("Buenas tardes");\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["En este ejemplo, si la variable ",(0,i.jsx)(n.code,{children:"hora"}),' es menor que 12, se imprimir\xe1 "Buenos d\xedas". De lo contrario, se imprimir\xe1 "Buenas tardes".']}),"\n",(0,i.jsxs)(n.h2,{id:"uso-de-la-declaraci\xf3n-else-if",children:["Uso de la declaraci\xf3n ",(0,i.jsx)(n.code,{children:"else if"})]}),"\n",(0,i.jsxs)(n.p,{children:["La declaraci\xf3n ",(0,i.jsx)(n.code,{children:"else if"})," se utiliza para evaluar m\xfaltiples condiciones secuenciales si la condici\xf3n del ",(0,i.jsx)(n.code,{children:"if"})," no se cumple."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Ejemplo:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let calificacion = 85;\r\n\r\nif (calificacion >= 90) {\r\n  console.log("A");\r\n} else if (calificacion >= 80) {\r\n  console.log("B");\r\n} else if (calificacion >= 70) {\r\n  console.log("C");\r\n} else {\r\n  console.log("D");\r\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["En este ejemplo, se eval\xfaa la variable ",(0,i.jsx)(n.code,{children:"calificacion"})," y se imprime la letra correspondiente a la calificaci\xf3n en base a las condiciones establecidas."]}),"\n",(0,i.jsx)(n.h2,{id:"consideraciones-adicionales",children:"Consideraciones adicionales"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Es importante tener en cuenta el orden en el que se colocan las condiciones ",(0,i.jsx)(n.code,{children:"if"}),", ",(0,i.jsx)(n.code,{children:"else if"})," y ",(0,i.jsx)(n.code,{children:"else"}),". JavaScript eval\xfaa estas condiciones secuencialmente y ejecuta el primer bloque de c\xf3digo cuya condici\xf3n sea verdadera."]}),"\n",(0,i.jsxs)(n.li,{children:["Se pueden anidar m\xfaltiples declaraciones ",(0,i.jsx)(n.code,{children:"if"}),", ",(0,i.jsx)(n.code,{children:"else if"})," y ",(0,i.jsx)(n.code,{children:"else"})," dentro de otras, pero esto puede complicar la legibilidad del c\xf3digo y hacerlo m\xe1s propenso a errores."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"el-condicional-ternario",children:"El condicional ternario"}),"\n",(0,i.jsxs)(n.p,{children:["El condicional ternario en JavaScript (tambi\xe9n conocido como el operador ternario) es una forma concisa de realizar una operaci\xf3n condicional. Funciona como una versi\xf3n simplificada de una estructura ",(0,i.jsx)(n.code,{children:"if...else"}),". Se utiliza para asignar un valor basado en una condici\xf3n de forma compacta."]}),"\n",(0,i.jsx)(n.p,{children:"La sintaxis b\xe1sica del condicional ternario es:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:"condici\xf3n ? expresi\xf3n_si_verdadero : expresi\xf3n_si_falso;\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"condici\xf3n"})}),": La condici\xf3n que se eval\xfaa (verdadera o falsa)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"expresi\xf3n_si_verdadero"})}),": El valor que se devuelve si la condici\xf3n es verdadera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"expresi\xf3n_si_falso"})}),": El valor que se devuelve si la condici\xf3n es falsa."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-1-determinar-si-un-n\xfamero-es-par-o-impar",children:"Ejemplo 1: Determinar si un n\xfamero es par o impar"}),"\n",(0,i.jsx)(n.p,{children:"Vamos a usar el condicional ternario para determinar si un n\xfamero es par o impar."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let numero = 5;\r\n\r\n// Usamos el condicional ternario para verificar si el n\xfamero es par o impar\r\nlet resultado = numero % 2 === 0 ? "Es par" : "Es impar";\r\n\r\n// Imprimimos el resultado en la consola\r\nconsole.log(resultado); // "Es impar"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(numero % 2 === 0)"}),": Verificamos si el n\xfamero es divisible por 2 (es decir, si es par)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"Es par"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"resultado"})," si la condici\xf3n es verdadera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"Es impar"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"resultado"})," si la condici\xf3n es falsa."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-2-verificar-si-una-persona-es-mayor-de-edad",children:"Ejemplo 2: Verificar si una persona es mayor de edad"}),"\n",(0,i.jsx)(n.p,{children:"Vamos a usar el condicional ternario para verificar si una persona es mayor de edad."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let edad = 18;\r\n\r\n// Usamos el condicional ternario para determinar si la persona es mayor de edad\r\nlet esMayorDeEdad =\r\n  edad >= 18 ? "S\xed, es mayor de edad" : "No, es menor de edad";\r\n\r\n// Imprimimos el resultado en la consola\r\nconsole.log(esMayorDeEdad); // "S\xed, es mayor de edad"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"(edad >= 18)"}),": Verificamos si la edad es mayor o igual a 18."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"S\xed, es mayor de edad"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"esMayorDeEdad"})," si la condici\xf3n es verdadera."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"No, es menor de edad"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"esMayorDeEdad"})," si la condici\xf3n es falsa."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"ejemplo-3-seleccionar-un-valor-basado-en-una-variable-booleana",children:"Ejemplo 3: Seleccionar un valor basado en una variable booleana"}),"\n",(0,i.jsx)(n.p,{children:"Vamos a usar el condicional ternario para seleccionar un valor basado en una variable booleana."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-jsx",children:'let esEstudiante = true;\r\n\r\n// Usamos el condicional ternario para seleccionar el mensaje apropiado\r\nlet mensaje = esEstudiante\r\n  ? "Tienes descuento de estudiante"\r\n  : "No tienes descuento";\r\n\r\n// Imprimimos el mensaje en la consola\r\nconsole.log(mensaje); // "Tienes descuento de estudiante"\n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"esEstudiante"}),": La variable booleana que determina si la persona es estudiante."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"Tienes descuento de estudiante"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"mensaje"})," si ",(0,i.jsx)(n.code,{children:"esEstudiante"})," es verdadero."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:'"No tienes descuento"'}),": Este es el valor que se asigna a ",(0,i.jsx)(n.code,{children:"mensaje"})," si ",(0,i.jsx)(n.code,{children:"esEstudiante"})," es falso."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"comentarios-sobre-el-c\xf3digo",children:"Comentarios sobre el c\xf3digo"}),"\n",(0,i.jsx)(n.p,{children:"En cada ejemplo, el condicional ternario nos permite escribir una condici\xf3n y elegir entre dos valores posibles de manera muy compacta y legible. Esto puede hacer que el c\xf3digo sea m\xe1s f\xe1cil de leer y escribir, especialmente para condiciones simples."}),"\n",(0,i.jsx)(n.h2,{id:"conclusiones",children:"Conclusiones"}),"\n",(0,i.jsxs)(n.p,{children:["En resumen, los condicionales ",(0,i.jsx)(n.code,{children:"if"}),", ",(0,i.jsx)(n.code,{children:"else if"})," y ",(0,i.jsx)(n.code,{children:"else"})," son estructuras fundamentales en JavaScript que permiten controlar el flujo de ejecuci\xf3n de un programa en funci\xf3n de condiciones espec\xedficas. Al comprender c\xf3mo funcionan estas estructuras y c\xf3mo se utilizan, los desarrolladores pueden escribir c\xf3digo m\xe1s eficiente y l\xf3gico para sus aplicaciones. Los condicionales son una herramienta poderosa que permite crear programas din\xe1micos y adaptables a diferentes situaciones y escenarios."]})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var a=s(6540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);