"use strict";(self.webpackChunkDocuQuest_oslar_code=self.webpackChunkDocuQuest_oslar_code||[]).push([[5340],{6468:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"poo/fundamentosPOO","title":"Fundamentos de la programaci\xf3n orientada a objetos (Poo)","description":"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma de programaci\xf3n que organiza el dise\xf1o de software en torno a objetos, que son instancias de clases. Este enfoque permite modelar entidades del mundo real de manera m\xe1s intuitiva, facilitando la gesti\xf3n y escalabilidad de aplicaciones complejas","source":"@site/docs/poo/fundamentosPOO.md","sourceDirName":"poo","slug":"/poo/fundamentosPOO","permalink":"/docuQuest/docs/poo/fundamentosPOO","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/poo/fundamentosPOO.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Casos de uso avanzados","permalink":"/docuQuest/docs/js/api/casosAvanzados"},"next":{"title":"Objetos y prototipos en JavaScript","permalink":"/docuQuest/docs/poo/objetos&prototipos"}}');var o=a(4848),r=a(8453);const i={},c="Fundamentos de la programaci\xf3n orientada a objetos (Poo)",l={},d=[{value:"\xbfQu\xe9 es la Programaci\xf3n Orientada a Objetos?",id:"qu\xe9-es-la-programaci\xf3n-orientada-a-objetos",level:2},{value:"Beneficios y aplicaciones en el desarrollo web",id:"beneficios-y-aplicaciones-en-el-desarrollo-web",level:2},{value:"Comparaci\xf3n entre programaci\xf3n estructurada y orientada a objetos",id:"comparaci\xf3n-entre-programaci\xf3n-estructurada-y-orientada-a-objetos",level:2},{value:"Principios de la POO",id:"principios-de-la-poo",level:2},{value:"Abstracci\xf3n",id:"abstracci\xf3n",level:3},{value:"Encapsulaci\xf3n",id:"encapsulaci\xf3n",level:3},{value:"Herencia",id:"herencia",level:3},{value:"<strong>Polimorfismo</strong>",id:"polimorfismo",level:3},{value:"<strong>Conclusi\xf3n</strong>",id:"conclusi\xf3n",level:2}];function t(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"fundamentos-de-la-programaci\xf3n-orientada-a-objetos-poo",children:"Fundamentos de la programaci\xf3n orientada a objetos (Poo)"})}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"Programaci\xf3n Orientada a Objetos (POO)"})," es un paradigma de programaci\xf3n que organiza el dise\xf1o de software en torno a ",(0,o.jsx)(n.strong,{children:"objetos"}),", que son instancias de ",(0,o.jsx)(n.strong,{children:"clases"}),". Este enfoque permite modelar entidades del mundo real de manera m\xe1s intuitiva, facilitando la gesti\xf3n y escalabilidad de aplicaciones complejas"]}),"\n",(0,o.jsx)(n.h2,{id:"qu\xe9-es-la-programaci\xf3n-orientada-a-objetos",children:"\xbfQu\xe9 es la Programaci\xf3n Orientada a Objetos?"}),"\n",(0,o.jsxs)(n.p,{children:["La POO se centra en la creaci\xf3n de objetos que contienen tanto ",(0,o.jsx)(n.strong,{children:"datos"})," (atributos o propiedades) como ",(0,o.jsx)(n.strong,{children:"comportamientos"})," (m\xe9todos o funciones). Cada objeto es una instancia de una ",(0,o.jsx)(n.strong,{children:"clase"}),", que act\xfaa como plantilla o molde para crear objetos con caracter\xedsticas y comportamientos similares"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ejemplo en JavaScript ES6+:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'class Persona {\n  constructor(nombre, edad) {\n    this.nombre = nombre;\n    this.edad = edad;\n  }\n\n  saludar() {\n    console.log(`Hola, mi nombre es ${this.nombre} y tengo ${this.edad} a\xf1os.`);\n  }\n}\n\nconst persona1 = new Persona("Ana", 30);\npersona1.saludar(); // Hola, mi nombre es Ana y tengo 30 a\xf1os.\n'})}),"\n",(0,o.jsx)(n.h2,{id:"beneficios-y-aplicaciones-en-el-desarrollo-web",children:"Beneficios y aplicaciones en el desarrollo web"}),"\n",(0,o.jsx)(n.p,{children:"La adopci\xf3n de la POO en el desarrollo web ofrece m\xfaltiples ventajas:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Modularidad:"})," Permite dividir el c\xf3digo en piezas independientes (clases y objetos), facilitando su mantenimiento y reutilizaci\xf3n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reutilizaci\xf3n:"})," Las clases pueden ser reutilizadas en diferentes partes de la aplicaci\xf3n o en proyectos distintos, reduciendo la duplicaci\xf3n de c\xf3digo"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Escalabilidad:"})," Facilita la ampliaci\xf3n de funcionalidades sin afectar significativamente el c\xf3digo existente"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Mantenibilidad:"})," Al tener una estructura organizada, es m\xe1s sencillo identificar y corregir errores o implementar mejoras"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"En el desarrollo web, la POO es fundamental para construir aplicaciones robustas y escalables, especialmente cuando se trabaja con frameworks y bibliotecas modernas que siguen este paradigma"}),"\n",(0,o.jsx)(n.h2,{id:"comparaci\xf3n-entre-programaci\xf3n-estructurada-y-orientada-a-objetos",children:"Comparaci\xf3n entre programaci\xf3n estructurada y orientada a objetos"}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"programaci\xf3n estructurada"})," se basa en la divisi\xf3n del programa en funciones o procedimientos, enfoc\xe1ndose en la secuencia l\xf3gica de las operaciones. Por otro lado, la ",(0,o.jsx)(n.strong,{children:"programaci\xf3n orientada a objetos"})," organiza el c\xf3digo en torno a objetos que representan entidades del mundo real"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Diferencias clave:"})}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Enfoque:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Estructurada:"})," Basada en funciones y procedimientos"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Orientada a objetos:"})," Basada en objetos y clases"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Modularidad:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Estructurada:"})," Se logra mediante funciones"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Orientada a objetos:"})," Se logra mediante clases y objetos, facilitando una mayor encapsulaci\xf3n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Reutilizaci\xf3n:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Estructurada:"})," Limitada a funciones reutilizables"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.em,{children:"Orientada a objetos:"})," Alta reutilizaci\xf3n mediante herencia y polimorfismo"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"La POO ofrece una estructura m\xe1s cercana a c\xf3mo percibimos el mundo real, lo que puede simplificar el dise\xf1o y desarrollo de aplicaciones complejas"}),"\n",(0,o.jsx)(n.h2,{id:"principios-de-la-poo",children:"Principios de la POO"}),"\n",(0,o.jsxs)(n.p,{children:["La POO se basa en cuatro pilares fundamentales: ",(0,o.jsx)(n.strong,{children:"Abstracci\xf3n"}),", ",(0,o.jsx)(n.strong,{children:"Encapsulaci\xf3n"}),", ",(0,o.jsx)(n.strong,{children:"Herencia"})," y ",(0,o.jsx)(n.strong,{children:"Polimorfismo"})]}),"\n",(0,o.jsx)(n.h3,{id:"abstracci\xf3n",children:"Abstracci\xf3n"}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"abstracci\xf3n"})," consiste en identificar y modelar las caracter\xedsticas esenciales de una entidad, omitiendo detalles irrelevantes. Esto permite centrarse en aspectos significativos para el contexto de la aplicaci\xf3n"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ejemplo en JavaScript ES6+:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"class Coche {\n  constructor(marca, modelo) {\n    this.marca = marca;\n    this.modelo = modelo;\n  }\n\n  arrancar() {\n    console.log(`${this.marca} ${this.modelo} est\xe1 arrancando.`);\n  }\n\n"})}),"\n",(0,o.jsxs)(n.p,{children:["En este ejemplo, la clase ",(0,o.jsx)(n.code,{children:"Coche"})," abstrae las propiedades y comportamientos esenciales de un coche, como su marca, modelo y la capacidad de arrancar"]}),"\n",(0,o.jsx)(n.h3,{id:"encapsulaci\xf3n",children:"Encapsulaci\xf3n"}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"encapsulaci\xf3n"})," es el mecanismo que permite ocultar los detalles internos de un objeto y exponer solo lo necesario a trav\xe9s de una interfaz p\xfablica. Esto protege la integridad del objeto y previene accesos indebidos a su estado interno"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ejemplo en JavaScript ES6+:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'class CuentaBancaria {\n  #saldo = 0; // Propiedad privada\n\n  depositar(cantidad) {\n    if (cantidad > 0) {\n      this.#saldo += cantidad;\n      console.log(`Dep\xf3sito exitoso. Saldo actual: ${this.#saldo}`);\n    } else {\n      console.log("La cantidad debe ser positiva.");\n    }\n  }\n\n  retirar(cantidad) {\n    if (cantidad > 0 && cantidad <= this.#saldo) {\n      this.#saldo -= cantidad;\n      console.log(`Retiro exitoso. Saldo actual: ${this.#saldo}`);\n    } else {\n      console.log("Fondos insuficientes o cantidad inv\xe1lida.");\n    }\n  }\n}\n\nconst cuenta = new CuentaBancaria();\ncuenta.depositar(100); // Dep\xf3sito exitoso. Saldo actual: 100\ncuenta.retirar(50); // Retiro exitoso. Saldo actual: 50\ncuenta.#saldo = 1000; // Error: No se puede acceder a una propiedad privada\n'})}),"\n",(0,o.jsxs)(n.p,{children:["Aqu\xed, la propiedad ",(0,o.jsx)(n.code,{children:"#saldo"})," es privada y solo puede ser manipulada mediante los m\xe9todos p\xfablicos ",(0,o.jsx)(n.code,{children:"depositar"})," y ",(0,o.jsx)(n.code,{children:"retirar"}),", garantizando la encapsulaci\xf3n del estado interno de la cuenta bancaria"]}),"\n",(0,o.jsx)(n.h3,{id:"herencia",children:"Herencia"}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"herencia"})," permite que una clase (subclase) adquiera propiedades y m\xe9todos de otra clase (superclase), facilitando la reutilizaci\xf3n y extensi\xf3n del c\xf3digo"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ejemplo en JavaScript ES6+:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'class Animal {\n  constructor(nombre) {\n    this.nombre = nombre;\n  }\n\n  hacerSonido() {\n    console.log(`${this.nombre} hace un sonido.`);\n  }\n}\n\nclass Perro extends Animal {\n  hacerSonido() {\n    console.log(`${this.nombre} ladra.`);\n  }\n}\n\nconst perro1 = new Perro("Firulais");\nperro1.hacerSonido(); // Firulais ladra.\n'})}),"\n",(0,o.jsxs)(n.p,{children:["En este ejemplo, la clase ",(0,o.jsx)(n.code,{children:"Perro"})," hereda de ",(0,o.jsx)(n.code,{children:"Animal"}),", pero sobrescribe el m\xe9todo ",(0,o.jsx)(n.code,{children:"hacerSonido()"})," para personalizar su comportamiento."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h3,{id:"polimorfismo",children:(0,o.jsx)(n.strong,{children:"Polimorfismo"})}),"\n",(0,o.jsxs)(n.p,{children:["El ",(0,o.jsx)(n.strong,{children:"polimorfismo"})," permite que diferentes clases implementen el mismo m\xe9todo de manera distinta, proporcionando flexibilidad y facilitando la extensibilidad del c\xf3digo."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Ejemplo en JavaScript ES6+:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'class Figura {\n  calcularArea() {\n    throw new Error("Este m\xe9todo debe ser implementado por una subclase.");\n  }\n}\n\nclass Cuadrado extends Figura {\n  constructor(lado) {\n    super();\n    this.lado = lado;\n  }\n\n  calcularArea() {\n    return this.lado * this.lado;\n  }\n}\n\nclass Circulo extends Figura {\n  constructor(radio) {\n    super();\n    this.radio = radio;\n  }\n\n  calcularArea() {\n    return Math.PI * this.radio * this.radio;\n  }\n}\n\nconst cuadrado = new Cuadrado(4);\nconsole.log(`\xc1rea del cuadrado: ${cuadrado.calcularArea()}`); // \xc1rea del cuadrado: 16\n\nconst circulo = new Circulo(3);\nconsole.log(`\xc1rea del c\xedrculo: ${circulo.calcularArea()}`); // \xc1rea del c\xedrculo: 28.27...\n'})}),"\n",(0,o.jsxs)(n.p,{children:["En este ejemplo, la clase ",(0,o.jsx)(n.code,{children:"Figura"})," define un m\xe9todo ",(0,o.jsx)(n.code,{children:"calcularArea()"}),", que es sobrescrito por sus subclases ",(0,o.jsx)(n.code,{children:"Cuadrado"})," y ",(0,o.jsx)(n.code,{children:"Circulo"}),". Esto permite que objetos diferentes puedan responder a la misma interfaz de manera \xfanica."]}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h2,{id:"conclusi\xf3n",children:(0,o.jsx)(n.strong,{children:"Conclusi\xf3n"})}),"\n",(0,o.jsxs)(n.p,{children:["La ",(0,o.jsx)(n.strong,{children:"Programaci\xf3n Orientada a Objetos (POO)"})," es un enfoque fundamental en el desarrollo de aplicaciones web modernas. Sus principios clave (",(0,o.jsx)(n.strong,{children:"Abstracci\xf3n, Encapsulaci\xf3n, Herencia y Polimorfismo"}),") proporcionan una base s\xf3lida para escribir c\xf3digo reutilizable, modular y escalable."]}),"\n",(0,o.jsx)(n.p,{children:"A lo largo del curso, aplicaremos estos conceptos en escenarios reales del desarrollo web, integr\xe1ndolos con tecnolog\xedas actuales para maximizar su potencial."})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(t,{...e})}):t(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var s=a(6540);const o={},r=s.createContext(o);function i(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);