"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[6960],{8318:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"frontend/js/operadores/precedenciaOperadores","title":"Precedencia de Operadores","description":"Introducci\xf3n a la Precedencia en JavaScript","source":"@site/docs/frontend/js/operadores/precedenciaOperadores.md","sourceDirName":"frontend/js/operadores","slug":"/frontend/js/operadores/precedenciaOperadores","permalink":"/docuQuest/docs/frontend/js/operadores/precedenciaOperadores","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/frontend/js/operadores/precedenciaOperadores.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Operadores L\xf3gicos","permalink":"/docuQuest/docs/frontend/js/operadores/operadoresLogicos"},"next":{"title":"Funciones","permalink":"/docuQuest/docs/frontend/js/funciones/"}}');var c=n(4848),i=n(8453);const s={},o="Precedencia de Operadores",d={},l=[{value:"Introducci\xf3n a la Precedencia en JavaScript",id:"introducci\xf3n-a-la-precedencia-en-javascript",level:2},{value:"Tabla de Precedencia de Operadores en JavaScript",id:"tabla-de-precedencia-de-operadores-en-javascript",level:2},{value:"Funcionamiento de la Precedencia en JavaScript",id:"funcionamiento-de-la-precedencia-en-javascript",level:2},{value:"Ejemplo 1: Multiplicaci\xf3n vs. Suma",id:"ejemplo-1-multiplicaci\xf3n-vs-suma",level:3},{value:"Ejemplo 2: Uso de Par\xe9ntesis",id:"ejemplo-2-uso-de-par\xe9ntesis",level:3},{value:"Ejemplo 3: Asignaci\xf3n y Comparaci\xf3n",id:"ejemplo-3-asignaci\xf3n-y-comparaci\xf3n",level:3},{value:"Conclusiones",id:"conclusiones",level:2}];function t(e){const a={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(a.header,{children:(0,c.jsx)(a.h1,{id:"precedencia-de-operadores",children:"Precedencia de Operadores"})}),"\n",(0,c.jsx)(a.h2,{id:"introducci\xf3n-a-la-precedencia-en-javascript",children:"Introducci\xf3n a la Precedencia en JavaScript"}),"\n",(0,c.jsx)(a.p,{children:"La precedencia en JavaScript se refiere al orden en el que se eval\xfaan las operaciones en una expresi\xf3n. Cada operador tiene una precedencia asignada, lo que determina su prioridad en relaci\xf3n con otros operadores. Cuando hay m\xfaltiples operadores en una expresi\xf3n, JavaScript utiliza su precedencia para decidir qu\xe9 operaci\xf3n se realiza primero."}),"\n",(0,c.jsx)(a.h2,{id:"tabla-de-precedencia-de-operadores-en-javascript",children:"Tabla de Precedencia de Operadores en JavaScript"}),"\n",(0,c.jsx)(a.p,{children:"JavaScript sigue una jerarqu\xeda de precedencia predefinida para sus operadores. A continuaci\xf3n, se presenta una tabla simplificada de algunos operadores comunes, ordenados de mayor a menor precedencia:"}),"\n",(0,c.jsxs)(a.ol,{children:["\n",(0,c.jsxs)(a.li,{children:["Par\xe9ntesis ",(0,c.jsx)(a.code,{children:"( )"})]}),"\n",(0,c.jsxs)(a.li,{children:["Incremento/decremento ",(0,c.jsx)(a.code,{children:"++ --"})]}),"\n",(0,c.jsxs)(a.li,{children:["Negaci\xf3n ",(0,c.jsx)(a.code,{children:"!"})]}),"\n",(0,c.jsxs)(a.li,{children:["Exponenciaci\xf3n ",(0,c.jsx)(a.code,{children:"*"})]}),"\n",(0,c.jsxs)(a.li,{children:["Multiplicaci\xf3n/divisi\xf3n ",(0,c.jsx)(a.code,{children:"/ %"})]}),"\n",(0,c.jsxs)(a.li,{children:["Suma/resta ",(0,c.jsx)(a.code,{children:"+ -"})]}),"\n",(0,c.jsxs)(a.li,{children:["Concatenaci\xf3n de cadenas ",(0,c.jsx)(a.code,{children:"+"})]}),"\n",(0,c.jsxs)(a.li,{children:["Operadores de comparaci\xf3n ",(0,c.jsx)(a.code,{children:"> < >= <="})]}),"\n",(0,c.jsxs)(a.li,{children:["Igualdad estricta ",(0,c.jsx)(a.code,{children:"=== !=="})]}),"\n",(0,c.jsxs)(a.li,{children:["Operadores l\xf3gicos ",(0,c.jsx)(a.code,{children:"&& ||"})]}),"\n",(0,c.jsxs)(a.li,{children:["Asignaci\xf3n ",(0,c.jsx)(a.code,{children:"="})]}),"\n"]}),"\n",(0,c.jsx)(a.p,{children:"Es importante tener en cuenta que esta es solo una lista parcial de operadores comunes y su precedencia relativa. Hay otros operadores en JavaScript con diferentes niveles de precedencia."}),"\n",(0,c.jsx)(a.h2,{id:"funcionamiento-de-la-precedencia-en-javascript",children:"Funcionamiento de la Precedencia en JavaScript"}),"\n",(0,c.jsx)(a.p,{children:"Para comprender mejor c\xf3mo funciona la precedencia en JavaScript, veamos algunos ejemplos pr\xe1cticos:"}),"\n",(0,c.jsx)(a.h3,{id:"ejemplo-1-multiplicaci\xf3n-vs-suma",children:"Ejemplo 1: Multiplicaci\xf3n vs. Suma"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"let resultado = 2 + 3 * 4;\r\nconsole.log(resultado); // Devuelve 14 (se eval\xfaa primero la multiplicaci\xf3n)\n"})}),"\n",(0,c.jsxs)(a.p,{children:["En este ejemplo, la multiplicaci\xf3n se eval\xfaa antes que la suma debido a la precedencia m\xe1s alta del operador ",(0,c.jsx)(a.code,{children:"*"}),"."]}),"\n",(0,c.jsx)(a.h3,{id:"ejemplo-2-uso-de-par\xe9ntesis",children:"Ejemplo 2: Uso de Par\xe9ntesis"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"let resultado = (2 + 3) * 4;\r\nconsole.log(resultado); // Devuelve 20 (se eval\xfaa primero la suma dentro de los par\xe9ntesis)\n"})}),"\n",(0,c.jsx)(a.p,{children:"Los par\xe9ntesis pueden utilizarse para modificar la precedencia de los operadores y forzar la evaluaci\xf3n en un orden espec\xedfico."}),"\n",(0,c.jsx)(a.h3,{id:"ejemplo-3-asignaci\xf3n-y-comparaci\xf3n",children:"Ejemplo 3: Asignaci\xf3n y Comparaci\xf3n"}),"\n",(0,c.jsx)(a.pre,{children:(0,c.jsx)(a.code,{className:"language-jsx",children:"let a = 5;\r\nlet b = 3;\r\nlet resultado = a * b > 10;\r\nconsole.log(resultado); // Devuelve true (se eval\xfaa primero la multiplicaci\xf3n y luego la comparaci\xf3n)\n"})}),"\n",(0,c.jsxs)(a.p,{children:["En este caso, la multiplicaci\xf3n se eval\xfaa antes que la comparaci\xf3n debido a la precedencia del operador ",(0,c.jsx)(a.code,{children:">"}),"."]}),"\n",(0,c.jsx)(a.h2,{id:"conclusiones",children:"Conclusiones"}),"\n",(0,c.jsx)(a.p,{children:"La precedencia de operadores en JavaScript es un aspecto fundamental de la sintaxis del lenguaje que afecta directamente al resultado de las expresiones. Al comprender la jerarqu\xeda de precedencia y c\xf3mo se eval\xfaan las expresiones en JavaScript, los desarrolladores pueden escribir c\xf3digo m\xe1s claro, preciso y menos propenso a errores. Es importante tener en cuenta la precedencia al escribir expresiones complejas y utilizar par\xe9ntesis cuando sea necesario para evitar confusiones y garantizar el comportamiento deseado del c\xf3digo."})]})}function p(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,c.jsx)(a,{...e,children:(0,c.jsx)(t,{...e})}):t(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>s,x:()=>o});var r=n(6540);const c={},i=r.createContext(c);function s(e){const a=r.useContext(i);return r.useMemo(function(){return"function"==typeof e?e(a):{...a,...e}},[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);