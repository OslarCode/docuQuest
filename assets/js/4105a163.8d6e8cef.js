"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[2176],{8425:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"backend/Node.js/sistemaArchivosProcesos","title":"Sistema de archivos y procesos en Node.js","description":"Introducci\xf3n","source":"@site/docs/backend/Node.js/sistemaArchivosProcesos.md","sourceDirName":"backend/Node.js","slug":"/backend/Node.js/sistemaArchivosProcesos","permalink":"/docuQuest/docs/backend/Node.js/sistemaArchivosProcesos","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/Node.js/sistemaArchivosProcesos.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Fundamentos de asincron\xeda en Node.js","permalink":"/docuQuest/docs/backend/Node.js/asincronia"},"next":{"title":"Servidores web con Node.js","permalink":"/docuQuest/docs/backend/Node.js/servidorWeb"}}');var n=r(4848),o=r(8453);const i={},c="Sistema de archivos y procesos en Node.js",d={},l=[{value:"Introducci\xf3n",id:"introducci\xf3n",level:2},{value:"Trabajando con el sistema de archivos (<code>fs</code>)",id:"trabajando-con-el-sistema-de-archivos-fs",level:2},{value:"Leer archivos de texto",id:"leer-archivos-de-texto",level:3},{value:"Escribir archivos (crea o reemplaza)",id:"escribir-archivos-crea-o-reemplaza",level:3},{value:"A\xf1adir contenido al final de un archivo (append)",id:"a\xf1adir-contenido-al-final-de-un-archivo-append",level:3},{value:"Eliminar archivos",id:"eliminar-archivos",level:3},{value:"Crear y eliminar carpetas",id:"crear-y-eliminar-carpetas",level:3},{value:"Trabajar con rutas (<code>path</code>)",id:"trabajar-con-rutas-path",level:2},{value:"Streams: lectura y escritura eficiente",id:"streams-lectura-y-escritura-eficiente",level:2},{value:"Interacci\xf3n con el sistema (<code>os</code> y <code>process</code>)",id:"interacci\xf3n-con-el-sistema-os-y-process",level:2},{value:"M\xf3dulo <code>os</code>",id:"m\xf3dulo-os",level:3},{value:"M\xf3dulo <code>process</code>",id:"m\xf3dulo-process",level:3},{value:"Ejercicio pr\xe1ctico: Generador de resumen del sistema",id:"ejercicio-pr\xe1ctico-generador-de-resumen-del-sistema",level:2},{value:"Conclusi\xf3n",id:"conclusi\xf3n",level:2},{value:"Recursos adicionales",id:"recursos-adicionales",level:2}];function t(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"sistema-de-archivos-y-procesos-en-nodejs",children:"Sistema de archivos y procesos en Node.js"})}),"\n",(0,n.jsx)(s.h2,{id:"introducci\xf3n",children:"Introducci\xf3n"}),"\n",(0,n.jsx)(s.p,{children:"Una de las grandes ventajas de Node.js es que permite interactuar directamente con el sistema operativo, lo que lo convierte en una herramienta ideal para crear scripts, herramientas de automatizaci\xf3n, servidores de archivos, y m\xe1s."}),"\n",(0,n.jsx)(s.p,{children:"En este m\xf3dulo vas a aprender a:"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:"Leer, escribir y modificar archivos locales"}),"\n",(0,n.jsx)(s.li,{children:"Trabajar con rutas de archivos de forma segura"}),"\n",(0,n.jsx)(s.li,{children:"Utilizar flujos (streams) para manejar archivos grandes"}),"\n",(0,n.jsx)(s.li,{children:"Interactuar con procesos del sistema (memoria, CPU, etc.)"}),"\n",(0,n.jsx)(s.li,{children:"Crear herramientas \xfatiles directamente desde la terminal"}),"\n"]}),"\n",(0,n.jsxs)(s.h2,{id:"trabajando-con-el-sistema-de-archivos-fs",children:["Trabajando con el sistema de archivos (",(0,n.jsx)(s.code,{children:"fs"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Node.js incluye un m\xf3dulo interno llamado ",(0,n.jsx)(s.code,{children:"fs"})," (file system), que permite realizar operaciones como leer, escribir, copiar, eliminar o renombrar archivos y carpetas."]}),"\n",(0,n.jsxs)(s.p,{children:["Puedes usarlo en su versi\xf3n cl\xe1sica basada en callbacks, o en su versi\xf3n moderna con promesas (",(0,n.jsx)(s.code,{children:"fs/promises"}),"), que es la que vamos a utilizar aqu\xed por claridad y compatibilidad con ",(0,n.jsx)(s.code,{children:"async/await"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"leer-archivos-de-texto",children:"Leer archivos de texto"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'const fs = require("fs/promises");\n\nasync function leerArchivo() {\n  const contenido = await fs.readFile("./texto.txt", "utf8");\n  console.log("\ud83d\udcc4 Contenido del archivo:", contenido);\n}\n'})}),"\n",(0,n.jsxs)(s.p,{children:["El segundo par\xe1metro ",(0,n.jsx)(s.code,{children:'"utf8"'})," indica que queremos leer el contenido como texto. Si lo omites, obtendr\xe1s un ",(0,n.jsx)(s.code,{children:"Buffer"}),"."]}),"\n",(0,n.jsx)(s.h3,{id:"escribir-archivos-crea-o-reemplaza",children:"Escribir archivos (crea o reemplaza)"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'await fs.writeFile(\n  "./resultado.txt",\n  "Este es un nuevo archivo generado por Node.js"\n);\n'})}),"\n",(0,n.jsx)(s.p,{children:"Si el archivo no existe, lo crea. Si ya existe, lo sobrescribe. Puedes guardar datos generados por tu programa, respuestas de una API, logs, etc."}),"\n",(0,n.jsx)(s.h3,{id:"a\xf1adir-contenido-al-final-de-un-archivo-append",children:"A\xf1adir contenido al final de un archivo (append)"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'await fs.appendFile("./resultado.txt", "\\nNueva l\xednea a\xf1adida al final");\n'})}),"\n",(0,n.jsx)(s.p,{children:"Ideal para guardar logs, errores o registros de acciones sin borrar lo anterior."}),"\n",(0,n.jsx)(s.h3,{id:"eliminar-archivos",children:"Eliminar archivos"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'await fs.unlink("./archivo_innecesario.txt");\n'})}),"\n",(0,n.jsx)(s.p,{children:"\xdasalo con cuidado. Esta acci\xf3n no se puede deshacer."}),"\n",(0,n.jsx)(s.h3,{id:"crear-y-eliminar-carpetas",children:"Crear y eliminar carpetas"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'await fs.mkdir("./carpetaNueva"); // Crea una carpeta\nawait fs.rmdir("./carpetaNueva"); // Elimina la carpeta si est\xe1 vac\xeda\n'})}),"\n",(0,n.jsxs)(s.h2,{id:"trabajar-con-rutas-path",children:["Trabajar con rutas (",(0,n.jsx)(s.code,{children:"path"}),")"]}),"\n",(0,n.jsxs)(s.p,{children:["Cuando trabajas con archivos, necesitas crear rutas compatibles con cualquier sistema operativo. Para eso usamos el m\xf3dulo ",(0,n.jsx)(s.code,{children:"path"}),", que evita errores como separadores invertidos en Windows (",(0,n.jsx)(s.code,{children:"\\"}),") o rutas absolutas relativas mal construidas."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'const path = require("path");\n\nconst rutaCompleta = path.join(__dirname, "data", "archivo.txt");\nconsole.log(rutaCompleta);\n'})}),"\n",(0,n.jsx)(s.p,{children:"Esto genera una ruta segura como:"}),"\n",(0,n.jsx)(s.p,{children:(0,n.jsx)(s.code,{children:"/home/usuario/proyecto/data/archivo.txt"})}),"\n",(0,n.jsx)(s.h2,{id:"streams-lectura-y-escritura-eficiente",children:"Streams: lectura y escritura eficiente"}),"\n",(0,n.jsxs)(s.p,{children:["Para archivos muy grandes (como logs, archivos CSV o de respaldo), no conviene leerlos todos de golpe. En su lugar, puedes procesarlos por partes usando ",(0,n.jsx)(s.em,{children:"streams"})," (flujos)."]}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'const fs = require("fs");\n\nconst lector = fs.createReadStream("grande.txt", "utf8");\n\nlector.on("data", (chunk) => {\n  console.log("\ud83d\udce6 Bloque recibido:", chunk.length, "bytes");\n});\n\nlector.on("end", () => {\n  console.log("\u2705 Lectura completa");\n});\n'})}),"\n",(0,n.jsx)(s.p,{children:"Con esto evitas saturar la memoria leyendo archivos pesados, y puedes incluso procesarlos l\xednea a l\xednea o enviarlos por red."}),"\n",(0,n.jsxs)(s.h2,{id:"interacci\xf3n-con-el-sistema-os-y-process",children:["Interacci\xf3n con el sistema (",(0,n.jsx)(s.code,{children:"os"})," y ",(0,n.jsx)(s.code,{children:"process"}),")"]}),"\n",(0,n.jsxs)(s.h3,{id:"m\xf3dulo-os",children:["M\xf3dulo ",(0,n.jsx)(s.code,{children:"os"})]}),"\n",(0,n.jsx)(s.p,{children:"Permite consultar informaci\xf3n del sistema operativo:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'const os = require("os");\n\nconsole.log("Sistema operativo:", os.platform());\nconsole.log("Memoria libre:", os.freemem());\nconsole.log("CPUs:", os.cpus().length);\n'})}),"\n",(0,n.jsxs)(s.h3,{id:"m\xf3dulo-process",children:["M\xf3dulo ",(0,n.jsx)(s.code,{children:"process"})]}),"\n",(0,n.jsx)(s.p,{children:"Permite interactuar con el proceso actual: leer argumentos, variables de entorno, o cerrar el programa manualmente."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'console.log("Directorio actual:", process.cwd());\nconsole.log("Variables de entorno:", process.env);\nconsole.log("Argumentos:", process.argv);\n'})}),"\n",(0,n.jsx)(s.p,{children:"Tambi\xe9n puedes capturar errores que no fueron controlados:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'process.on("uncaughtException", (err) => {\n  console.error("Error inesperado:", err.message);\n});\n'})}),"\n",(0,n.jsx)(s.h2,{id:"ejercicio-pr\xe1ctico-generador-de-resumen-del-sistema",children:"Ejercicio pr\xe1ctico: Generador de resumen del sistema"}),"\n",(0,n.jsx)(s.p,{children:"Vamos a crear un script que guarde en un archivo un resumen de tu sistema actual: sistema operativo, memoria libre, CPUs, directorio actual y fecha."}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-jsx",children:'// resumen.js\nconst fs = require("fs/promises");\nconst os = require("os");\n\nasync function generarResumen() {\n  const resumen = `\n\ud83d\udda5\ufe0f INFORME DEL SISTEMA\n-------------------------\nSistema operativo: ${os.platform()}\nMemoria libre: ${Math.round(os.freemem() / 1024 / 1024)} MB\nN\xfamero de CPUs: ${os.cpus().length}\nDirectorio actual: ${process.cwd()}\nFecha: ${new Date().toLocaleString()}\n`;\n\n  await fs.writeFile("./informe.txt", resumen);\n  console.log("\u2705 Informe guardado como \'informe.txt\'");\n}\n\ngenerarResumen();\n'})}),"\n",(0,n.jsx)(s.p,{children:"Ejecuta con:"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{className:"language-bash",children:"node resumen.js\n"})}),"\n",(0,n.jsx)(s.p,{children:"Y revisa el archivo generado."}),"\n",(0,n.jsx)(s.h2,{id:"conclusi\xf3n",children:"Conclusi\xf3n"}),"\n",(0,n.jsx)(s.p,{children:"En este m\xf3dulo has aprendido a interactuar con el sistema de archivos y el entorno del sistema operativo desde Node.js. Estas habilidades son fundamentales para crear aplicaciones de l\xednea de comandos, generadores de contenido, sistemas de logging, tareas programadas o incluso servidores que manejan archivos de usuario."}),"\n",(0,n.jsx)(s.h2,{id:"recursos-adicionales",children:"Recursos adicionales"}),"\n",(0,n.jsxs)(s.ul,{children:["\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://nodejs.org/api/fs.html#fspromisesreadfilepath-options",children:"Documentaci\xf3n oficial de fs/promises"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://nodejs.org/api/path.html",children:"Documentaci\xf3n de path"})}),"\n",(0,n.jsx)(s.li,{children:(0,n.jsx)(s.a,{href:"https://nodejs.org/api/os.html",children:"Documentaci\xf3n de os"})}),"\n"]})]})}function u(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(t,{...e})}):t(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>i,x:()=>c});var a=r(6540);const n={},o=a.createContext(n);function i(e){const s=a.useContext(o);return a.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),a.createElement(o.Provider,{value:s},e.children)}}}]);