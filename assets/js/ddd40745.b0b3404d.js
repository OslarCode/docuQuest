"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[6009],{1539:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"backend/databases/ACID_sin_humo","title":"ACID sin humo","description":"20.1. \xbfQu\xe9 es una transacci\xf3n?","source":"@site/docs/backend/databases/ACID_sin_humo.md","sourceDirName":"backend/databases","slug":"/backend/databases/ACID_sin_humo","permalink":"/docuQuest/docs/backend/databases/ACID_sin_humo","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/ACID_sin_humo.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Planificaci\xf3n conceptual de consultas","permalink":"/docuQuest/docs/backend/databases/Planificacion_conceptual_de_consultas"},"next":{"title":"Aislamiento y anomal\xedas","permalink":"/docuQuest/docs/backend/databases/Aislamiento_y_anomalias"}}');var i=s(4848),r=s(8453);const o={},d="ACID sin humo",l={},c=[{value:"20.1. \xbfQu\xe9 es una transacci\xf3n?",id:"201-qu\xe9-es-una-transacci\xf3n",level:2},{value:"20.2. Las 4 propiedades ACID",id:"202-las-4-propiedades-acid",level:2},{value:"20.3. Atomicidad \u2014 \u201cTodo o nada\u201d",id:"203-atomicidad--todo-o-nada",level:2},{value:"20.4. Consistencia \u2014 siempre en un estado v\xe1lido",id:"204-consistencia--siempre-en-un-estado-v\xe1lido",level:2},{value:"20.5. Aislamiento \u2014 cuando varios act\xfaan al mismo tiempo",id:"205-aislamiento--cuando-varios-act\xfaan-al-mismo-tiempo",level:2},{value:"20.6. Durabilidad \u2014 lo que se confirma no se pierde",id:"206-durabilidad--lo-que-se-confirma-no-se-pierde",level:2},{value:"20.7. Ejemplo completo \u2014 reserva de entradas",id:"207-ejemplo-completo--reserva-de-entradas",level:2},{value:"20.8. Transacciones expl\xedcitas vs autom\xe1ticas",id:"208-transacciones-expl\xedcitas-vs-autom\xe1ticas",level:2},{value:"20.9. Buenas pr\xe1cticas con transacciones",id:"209-buenas-pr\xe1cticas-con-transacciones",level:2},{value:"20.10. Errores comunes",id:"2010-errores-comunes",level:2}];function t(e){const n={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"acid-sin-humo",children:"ACID sin humo"})}),"\n",(0,i.jsx)(n.h2,{id:"201-qu\xe9-es-una-transacci\xf3n",children:"20.1. \xbfQu\xe9 es una transacci\xf3n?"}),"\n",(0,i.jsxs)(n.p,{children:["Una ",(0,i.jsx)(n.strong,{children:"transacci\xf3n"})," es una unidad l\xf3gica de trabajo:"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Un conjunto de operaciones que deben ejecutarse como si fueran una sola."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Quitar dinero de una cuenta."}),"\n",(0,i.jsxs)(n.li,{children:["A\xf1adir ese dinero a otra cuenta.\nLas dos operaciones ",(0,i.jsx)(n.strong,{children:"deben cumplirse juntas"})," o no cumplirse en absoluto."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"En SQL:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nUPDATE cuenta SET saldo = saldo - 100 WHERE id = 1;\nUPDATE cuenta SET saldo = saldo + 100 WHERE id = 2;\nCOMMIT;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Si algo falla entre medio:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"ROLLBACK;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"La base de datos revierte todos los cambios."}),"\n",(0,i.jsx)(n.p,{children:"Esto evita inconsistencias como \u201cdinero desaparecido\u201d."}),"\n",(0,i.jsx)(n.h2,{id:"202-las-4-propiedades-acid",children:"20.2. Las 4 propiedades ACID"}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"Propiedad"}),(0,i.jsx)(n.th,{children:"Qu\xe9 garantiza"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"A"}),"tomicidad"]}),(0,i.jsx)(n.td,{children:"Todo o nada: una transacci\xf3n no queda a medias."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"C"}),"onsistencia"]}),(0,i.jsx)(n.td,{children:"La base pasa de un estado v\xe1lido a otro v\xe1lido."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"I"}),"solamiento"]}),(0,i.jsx)(n.td,{children:"Las transacciones concurrentes no interfieren entre s\xed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{children:[(0,i.jsx)(n.strong,{children:"D"}),"urabilidad"]}),(0,i.jsx)(n.td,{children:"Si se confirma, los cambios persisten incluso ante fallos."})]})]})]}),"\n",(0,i.jsx)(n.p,{children:"Vamos a desglosarlas con ejemplos reales"}),"\n",(0,i.jsx)(n.h2,{id:"203-atomicidad--todo-o-nada",children:"20.3. Atomicidad \u2014 \u201cTodo o nada\u201d"}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo: transferencia bancaria."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nUPDATE cuenta SET saldo = saldo - 500 WHERE id = 1;\nUPDATE cuenta SET saldo = saldo + 500 WHERE id = 2;\nCOMMIT;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Si la segunda instrucci\xf3n falla (por ejemplo, cuenta inexistente):"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"ROLLBACK"})," revierte la primera."]}),"\n",(0,i.jsx)(n.p,{children:"Nadie pierde ni gana dinero de forma inconsistente."}),"\n",(0,i.jsx)(n.p,{children:"Si no existiera atomicidad:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"El primer UPDATE se har\xeda,"}),"\n",(0,i.jsx)(n.li,{children:"El segundo fallar\xeda,"}),"\n",(0,i.jsx)(n.li,{children:"Y el dinero se \u201cevaporar\xeda\u201d."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Regla pr\xe1ctica:"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"No conf\xedes en que tu aplicaci\xf3n controle todo. Las transacciones son tu red de seguridad."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"204-consistencia--siempre-en-un-estado-v\xe1lido",children:"20.4. Consistencia \u2014 siempre en un estado v\xe1lido"}),"\n",(0,i.jsxs)(n.p,{children:["Cada regla que definimos (FK, CHECK, UNIQUE, dominios\u2026) ",(0,i.jsx)(n.strong,{children:"define un estado v\xe1lido"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["La propiedad de ",(0,i.jsx)(n.strong,{children:"consistencia"})," garantiza que:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Si la BD parte de un estado v\xe1lido,"}),"\n",(0,i.jsx)(n.li,{children:"Y ejecutas una transacci\xf3n v\xe1lida,"}),"\n",(0,i.jsx)(n.li,{children:"Entonces termina en otro estado v\xe1lido."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Regla: ning\xfan saldo de cuenta puede ser negativo (",(0,i.jsx)(n.code,{children:"CHECK (saldo >= 0)"}),")."]}),"\n",(0,i.jsx)(n.li,{children:"Si intentas transferir m\xe1s de lo que hay:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"UPDATE cuenta SET saldo = saldo - 10000 WHERE id = 1;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"La restricci\xf3n falla."}),"\n",(0,i.jsx)(n.p,{children:"La transacci\xf3n no se confirma."}),"\n",(0,i.jsxs)(n.p,{children:["La BD ",(0,i.jsx)(n.strong,{children:"nunca entra en un estado inv\xe1lido"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Esto es lo que diferencia un sistema robusto de uno \u201checho a mano\u201d que permite errores silenciosos."}),"\n",(0,i.jsx)(n.h2,{id:"205-aislamiento--cuando-varios-act\xfaan-al-mismo-tiempo",children:"20.5. Aislamiento \u2014 cuando varios act\xfaan al mismo tiempo"}),"\n",(0,i.jsx)(n.p,{children:"Aqu\xed es donde se pone interesante \ud83d\udc40"}),"\n",(0,i.jsx)(n.p,{children:"En sistemas reales, no hay un solo usuario ejecutando transacciones. Hay cientos, miles\u2026"}),"\n",(0,i.jsxs)(n.p,{children:["El aislamiento asegura que ",(0,i.jsx)(n.strong,{children:"una transacci\xf3n no interfiera con otra"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo real:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Usuario A est\xe1 comprando el \xfaltimo billete de avi\xf3n."}),"\n",(0,i.jsxs)(n.li,{children:["Usuario B tambi\xe9n.\nSi no hay aislamiento, ",(0,i.jsx)(n.strong,{children:"los dos podr\xedan comprar el mismo asiento"})," al mismo tiempo."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Con transacciones:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nSELECT * FROM vuelos WHERE id = 1 FOR UPDATE;\n-- (bloquea la fila)\nUPDATE vuelos SET asientos_libres = asientos_libres - 1 WHERE id = 1;\nCOMMIT;\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Si B intenta hacer lo mismo mientras A no ha terminado:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"La fila est\xe1 bloqueada."}),"\n",(0,i.jsx)(n.li,{children:"Su transacci\xf3n espera."}),"\n",(0,i.jsx)(n.li,{children:"Solo uno de los dos obtiene el asiento."}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Sin aislamiento, tendr\xedas ",(0,i.jsx)(n.strong,{children:"condiciones de carrera"})," e inconsistencias."]}),"\n",(0,i.jsx)(n.h2,{id:"206-durabilidad--lo-que-se-confirma-no-se-pierde",children:"20.6. Durabilidad \u2014 lo que se confirma no se pierde"}),"\n",(0,i.jsxs)(n.p,{children:["La durabilidad garantiza que si una transacci\xf3n ",(0,i.jsxs)(n.strong,{children:["se confirma (",(0,i.jsx)(n.code,{children:"COMMIT"}),")"]}),","]}),"\n",(0,i.jsxs)(n.p,{children:["sus cambios ",(0,i.jsx)(n.strong,{children:"persisten incluso si el servidor se cae"})," justo despu\xe9s."]}),"\n",(0,i.jsx)(n.p,{children:"Esto lo logran los motores de BD mediante:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Journaling"})," o ",(0,i.jsx)(n.strong,{children:"Write Ahead Log"})," (WAL),"]}),"\n",(0,i.jsx)(n.li,{children:"Registros de cambios en disco antes de confirmar,"}),"\n",(0,i.jsx)(n.li,{children:"Mecanismos de recuperaci\xf3n autom\xe1ticos tras fallos."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Ejemplo real:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Usuario compra un producto \u2192 pago procesado \u2192 ",(0,i.jsx)(n.code,{children:"COMMIT"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Se va la luz.\nCuando el servidor vuelva, ",(0,i.jsx)(n.strong,{children:"el pedido sigue registrado"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Sin durabilidad, la base podr\xeda quedar en un estado \u201cmedio roto\u201d despu\xe9s de un fallo."}),"\n",(0,i.jsx)(n.h2,{id:"207-ejemplo-completo--reserva-de-entradas",children:"20.7. Ejemplo completo \u2014 reserva de entradas"}),"\n",(0,i.jsx)(n.p,{children:"Supongamos un sistema de entradas de concierto."}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Consultar disponibilidad."}),"\n",(0,i.jsx)(n.li,{children:"Restar una entrada."}),"\n",(0,i.jsx)(n.li,{children:"Registrar el pedido."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BEGIN;\n\nSELECT stock FROM entrada WHERE id_evento = 1 FOR UPDATE;\nUPDATE entrada SET stock = stock - 1 WHERE id_evento = 1;\nINSERT INTO pedido (id_usuario, id_evento, fecha) VALUES (10, 1, NOW());\n\nCOMMIT;\n\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Atomicidad: si la inserci\xf3n del pedido falla, la resta del stock tambi\xe9n se revierte."}),"\n",(0,i.jsx)(n.li,{children:"Consistencia: no se permiten stocks negativos."}),"\n",(0,i.jsx)(n.li,{children:"Aislamiento: solo un usuario a la vez puede reservar el mismo asiento."}),"\n",(0,i.jsxs)(n.li,{children:["Durabilidad: si se corta la luz despu\xe9s de ",(0,i.jsx)(n.code,{children:"COMMIT"}),", el pedido queda registrado."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Esto es exactamente lo que pasa en sistemas de venta de entradas, billetes de avi\xf3n, etc."}),"\n",(0,i.jsx)(n.h2,{id:"208-transacciones-expl\xedcitas-vs-autom\xe1ticas",children:"20.8. Transacciones expl\xedcitas vs autom\xe1ticas"}),"\n",(0,i.jsxs)(n.p,{children:["Por defecto, muchas bases ejecutan cada sentencia como ",(0,i.jsx)(n.strong,{children:"una transacci\xf3n autom\xe1tica"})," (autocommit)."]}),"\n",(0,i.jsxs)(n.p,{children:["Pero cuando necesitas atomicidad real en ",(0,i.jsx)(n.strong,{children:"operaciones m\xfaltiples"}),", debes agruparlas manualmente:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-sql",children:"BEGIN;\n-- Varias operaciones dependientes\nCOMMIT; -- o ROLLBACK en caso de error\n\n"})}),"\n",(0,i.jsx)(n.p,{children:"Recomendaci\xf3n:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Para operaciones cr\xedticas \u2192 usa transacciones expl\xedcitas."}),"\n",(0,i.jsx)(n.li,{children:"Para operaciones simples e independientes \u2192 autocommit est\xe1 bien."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"209-buenas-pr\xe1cticas-con-transacciones",children:"20.9. Buenas pr\xe1cticas con transacciones"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Haz ",(0,i.jsx)(n.strong,{children:"transacciones cortas"}),": bloqueos prolongados generan cuellos de botella."]}),"\n",(0,i.jsxs)(n.li,{children:["Aseg\xfarate de que ",(0,i.jsx)(n.strong,{children:"todas las operaciones dependientes est\xe9n dentro"})," de la misma transacci\xf3n."]}),"\n",(0,i.jsx)(n.li,{children:"Siempre considera qu\xe9 pasa si algo falla a mitad."}),"\n",(0,i.jsxs)(n.li,{children:["Usa ",(0,i.jsx)(n.code,{children:"ROLLBACK"})," para revertir en caso de error."]}),"\n",(0,i.jsx)(n.li,{children:"Aprovecha restricciones de integridad para reforzar la consistencia."}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"2010-errores-comunes",children:"20.10. Errores comunes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"No usar transacciones cuando varias operaciones dependen unas de otras."}),"\n",(0,i.jsx)(n.li,{children:"Confiar en que \u201cnada fallar\xe1\u201d (spoiler: siempre falla)."}),"\n",(0,i.jsx)(n.li,{children:"Mantener transacciones abiertas demasiado tiempo."}),"\n",(0,i.jsx)(n.li,{children:"No manejar fallos correctamente (sin rollback)."}),"\n",(0,i.jsx)(n.li,{children:"No entender los efectos de m\xfaltiples usuarios concurrentes."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>d});var a=s(6540);const i={},r=a.createContext(i);function o(e){const n=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),a.createElement(r.Provider,{value:n},e.children)}}}]);