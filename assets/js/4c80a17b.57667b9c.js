"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[961],{4700:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>u,frontMatter:()=>l,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"backend/databases/Cambios_en_caliente","title":"Cambios en caliente","description":"32.1. El reto: \u201ccambiar sin romper\u201d","source":"@site/docs/backend/databases/Cambios_en_caliente.md","sourceDirName":"backend/databases","slug":"/backend/databases/Cambios_en_caliente","permalink":"/docuQuest/docs/backend/databases/Cambios_en_caliente","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/databases/Cambios_en_caliente.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Mantenimiento de \xedndices y crecimiento","permalink":"/docuQuest/docs/backend/databases/Mantenimiento_de_indices_y_crecimiento"},"next":{"title":"Particionamiento y distribuci\xf3n","permalink":"/docuQuest/docs/backend/databases/Particionamiento_y_distribucion"}}');var a=s(4848),r=s(8453);const l={},c="Cambios en caliente",o={},d=[{value:"32.1. El reto: \u201ccambiar sin romper\u201d",id:"321-el-reto-cambiar-sin-romper",level:2},{value:"32.2. Cambios seguros vs cambios peligrosos",id:"322-cambios-seguros-vs-cambios-peligrosos",level:2},{value:"32.3. Estrategia b\xe1sica: cambios en dos fases",id:"323-estrategia-b\xe1sica-cambios-en-dos-fases",level:2},{value:"32.4. A\xf1adir restricciones pesadas sin bloqueo",id:"324-a\xf1adir-restricciones-pesadas-sin-bloqueo",level:2},{value:"32.5. Creaci\xf3n de \xedndices sin interrumpir tr\xe1fico",id:"325-creaci\xf3n-de-\xedndices-sin-interrumpir-tr\xe1fico",level:2},{value:"32.6. \u201cExpand and contract\u201d \u2014 estrategia profesional para despliegues",id:"326-expand-and-contract--estrategia-profesional-para-despliegues",level:2},{value:"32.7. Cambios complejos: particiones y relaciones",id:"327-cambios-complejos-particiones-y-relaciones",level:2},{value:"32.8. Feature flags y compatibilidad temporal",id:"328-feature-flags-y-compatibilidad-temporal",level:2},{value:"32.9. Testing de cambios en caliente",id:"329-testing-de-cambios-en-caliente",level:2},{value:"32.10. Buenas pr\xe1cticas para cambios en caliente",id:"3210-buenas-pr\xe1cticas-para-cambios-en-caliente",level:2},{value:"32.11. Errores comunes",id:"3211-errores-comunes",level:2}];function t(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"cambios-en-caliente",children:"Cambios en caliente"})}),"\n",(0,a.jsx)(n.h2,{id:"321-el-reto-cambiar-sin-romper",children:"32.1. El reto: \u201ccambiar sin romper\u201d"}),"\n",(0,a.jsx)(n.p,{children:"En producci\xf3n hay tres objetivos al modificar el esquema:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Mantener disponibilidad"}),": que los usuarios no vean errores."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Mantener compatibilidad"}),": que la aplicaci\xf3n siga funcionando durante y despu\xe9s del cambio."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Poder revertir r\xe1pidamente"})," si algo sale mal."]}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Esto implica que ",(0,a.jsx)(n.strong,{children:"la forma en que haces cambios en producci\xf3n no puede ser la misma que en desarrollo"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"322-cambios-seguros-vs-cambios-peligrosos",children:"32.2. Cambios seguros vs cambios peligrosos"}),"\n",(0,a.jsxs)(n.p,{children:["Algunos cambios son ",(0,a.jsx)(n.strong,{children:"casi instant\xe1neos"})," y no bloquean:"]}),"\n",(0,a.jsx)(n.p,{children:"Cambios seguros:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"A\xf1adir columnas con valores por defecto simples o nulos."}),"\n",(0,a.jsx)(n.li,{children:"Crear \xedndices en paralelo."}),"\n",(0,a.jsx)(n.li,{children:"Crear nuevas tablas, vistas o constraints diferidas."}),"\n",(0,a.jsx)(n.li,{children:"A\xf1adir triggers o funciones sin tocar tablas grandes."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Cambios peligrosos:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Borrar columnas o tablas usadas por la aplicaci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Cambiar tipos de datos de campos grandes."}),"\n",(0,a.jsx)(n.li,{children:"A\xf1adir restricciones NOT NULL o UNIQUE sobre millones de filas sin preparaci\xf3n."}),"\n",(0,a.jsx)(n.li,{children:"Renombrar columnas que el c\xf3digo a\xfan usa."}),"\n",(0,a.jsx)(n.li,{children:"Reescribir relaciones o claves for\xe1neas activas."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["La clave est\xe1 en ",(0,a.jsx)(n.strong,{children:"descomponer los cambios peligrosos en pasos seguros"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"323-estrategia-b\xe1sica-cambios-en-dos-fases",children:"32.3. Estrategia b\xe1sica: cambios en dos fases"}),"\n",(0,a.jsxs)(n.p,{children:["La regla de oro: ",(0,a.jsx)(n.strong,{children:"\u201cadd first, remove later\u201d"}),"."]}),"\n",(0,a.jsxs)(n.p,{children:["Ejemplo: quieres ",(0,a.jsx)(n.strong,{children:"renombrar una columna"})," ",(0,a.jsx)(n.code,{children:"precio"})," a ",(0,a.jsx)(n.code,{children:"precio_unitario"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Mal enfoque (riesgoso):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE productos RENAME COLUMN precio TO precio_unitario;\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["La aplicaci\xf3n rompe inmediatamente si sigue consultando ",(0,a.jsx)(n.code,{children:"precio"}),"."]}),"\n",(0,a.jsx)(n.p,{children:"Enfoque correcto (seguro):"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agregar nueva columna"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE productos ADD COLUMN precio_unitario NUMERIC(10,2);\nUPDATE productos SET precio_unitario = precio;\n\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Modificar la aplicaci\xf3n"})," para que use ",(0,a.jsx)(n.code,{children:"precio_unitario"})," sin borrar la vieja."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Verificar logs y tr\xe1fico"})," para confirmar que nadie usa la vieja."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Eliminar columna vieja"})," cuando todo est\xe1 estable:"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE productos DROP COLUMN precio;\n\n"})}),"\n",(0,a.jsx)(n.p,{children:"Cero tiempo de inactividad."}),"\n",(0,a.jsx)(n.h2,{id:"324-a\xf1adir-restricciones-pesadas-sin-bloqueo",children:"32.4. A\xf1adir restricciones pesadas sin bloqueo"}),"\n",(0,a.jsxs)(n.p,{children:["A\xf1adir un ",(0,a.jsx)(n.code,{children:"NOT NULL"})," o ",(0,a.jsx)(n.code,{children:"UNIQUE"})," sobre tablas grandes puede bloquear la escritura durante minutos u horas."]}),"\n",(0,a.jsx)(n.p,{children:"Estrategia segura:"}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Verificar manualmente que los datos cumplen la restricci\xf3n"}),":"]}),"\n"]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"SELECT * FROM usuarios WHERE email IS NULL;\n\n"})}),"\n",(0,a.jsxs)(n.ol,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Corregir los datos si hay infracciones"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.strong,{children:"Agregar la restricci\xf3n"})," (o constraint diferida si tu motor lo permite)."]}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"ALTER TABLE usuarios\nADD CONSTRAINT email_no_nulo CHECK (email IS NOT NULL) NOT VALID;\n\nALTER TABLE usuarios\nVALIDATE CONSTRAINT email_no_nulo;\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["El ",(0,a.jsx)(n.code,{children:"VALIDATE"})," se hace en segundo plano en muchos motores, reduciendo bloqueos."]}),"\n",(0,a.jsx)(n.h2,{id:"325-creaci\xf3n-de-\xedndices-sin-interrumpir-tr\xe1fico",children:"32.5. Creaci\xf3n de \xedndices sin interrumpir tr\xe1fico"}),"\n",(0,a.jsx)(n.p,{children:"Crear un \xedndice en una tabla grande puede bloquear lecturas y escrituras."}),"\n",(0,a.jsx)(n.p,{children:"Soluci\xf3n: usar modos concurrentes o en l\xednea."}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo (PostgreSQL):"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"CREATE INDEX CONCURRENTLY idx_pedidos_cliente ON pedidos(cliente_id);\n\n"})}),"\n",(0,a.jsx)(n.p,{children:"Mientras el \xedndice se crea:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Las operaciones normales siguen funcionando,"}),"\n",(0,a.jsx)(n.li,{children:"No hay lock exclusivo sobre la tabla."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:["Este tipo de operaciones debe planificarse, pero ",(0,a.jsx)(n.strong,{children:"no requieren downtime"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"326-expand-and-contract--estrategia-profesional-para-despliegues",children:"32.6. \u201cExpand and contract\u201d \u2014 estrategia profesional para despliegues"}),"\n",(0,a.jsx)(n.p,{children:"Este patr\xf3n se usa en muchas empresas grandes (GitHub, Shopify, Stripe\u2026)."}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Fase 1 \u2014 Expand"})," \ud83e\ude9c"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Agrega nueva estructura (columnas, tablas, relaciones)."}),"\n",(0,a.jsx)(n.li,{children:"Aseg\xfarate de que es compatible con la versi\xf3n actual de la app."}),"\n",(0,a.jsx)(n.li,{children:"Despliega nueva versi\xf3n de c\xf3digo que puede trabajar con ambas estructuras."}),"\n"]}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.strong,{children:"Fase 2 \u2014 Contract"})," \u2702\ufe0f"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Una vez que todo el tr\xe1fico usa la nueva estructura,"}),"\n",(0,a.jsx)(n.li,{children:"Elimina la antigua de forma controlada y sin impacto."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"As\xed, nunca tienes un estado intermedio que rompa la app."}),"\n",(0,a.jsx)(n.h2,{id:"327-cambios-complejos-particiones-y-relaciones",children:"32.7. Cambios complejos: particiones y relaciones"}),"\n",(0,a.jsx)(n.p,{children:"Algunas migraciones son especialmente sensibles:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Reparticionar tablas grandes,"}),"\n",(0,a.jsx)(n.li,{children:"Cambiar claves for\xe1neas activas,"}),"\n",(0,a.jsx)(n.li,{children:"Fusionar o dividir tablas."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Para estos casos:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Prepara estructuras paralelas (nuevas tablas, triggers de sincronizaci\xf3n)."}),"\n",(0,a.jsx)(n.li,{children:"Redirige tr\xe1fico progresivamente."}),"\n",(0,a.jsx)(n.li,{children:"Migra datos en lotes peque\xf1os para evitar bloqueos largos."}),"\n",(0,a.jsx)(n.li,{children:"Usa ventanas de mantenimiento planificadas solo si es inevitable."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-sql",children:"-- Crear tabla particionada nueva\nCREATE TABLE pedidos_nuevo (...) PARTITION BY RANGE (fecha);\n\n-- Copiar datos por lotes\nINSERT INTO pedidos_nuevo SELECT * FROM pedidos WHERE fecha < NOW() - INTERVAL '1 year';\n\n-- Activar trigger para redirigir escrituras\n-- Cambiar aplicaci\xf3n a nueva tabla\n-- Eliminar tabla vieja cuando est\xe9 vac\xeda\n\n"})}),"\n",(0,a.jsxs)(n.p,{children:["Esto permite \u201cmover\u201d estructuras pesadas ",(0,a.jsx)(n.strong,{children:"sin downtime masivo"}),"."]}),"\n",(0,a.jsx)(n.h2,{id:"328-feature-flags-y-compatibilidad-temporal",children:"32.8. Feature flags y compatibilidad temporal"}),"\n",(0,a.jsxs)(n.p,{children:["En muchos despliegues modernos se usan ",(0,a.jsx)(n.strong,{children:"feature flags"})," para:"]}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Activar cambios de esquema de forma gradual,"}),"\n",(0,a.jsx)(n.li,{children:"Mantener dos caminos compatibles temporalmente,"}),"\n",(0,a.jsx)(n.li,{children:"Revertir f\xe1cilmente si algo falla."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Agregas columna ",(0,a.jsx)(n.code,{children:"nuevo_estado"}),"."]}),"\n",(0,a.jsxs)(n.li,{children:["El c\xf3digo lee de ",(0,a.jsx)(n.code,{children:"estado"})," y ",(0,a.jsx)(n.code,{children:"nuevo_estado"})," durante una semana."]}),"\n",(0,a.jsx)(n.li,{children:"Cuando todo el tr\xe1fico usa la nueva columna, borras la vieja."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Esto reduce riesgo y permite rollback r\xe1pido."}),"\n",(0,a.jsx)(n.h2,{id:"329-testing-de-cambios-en-caliente",children:"32.9. Testing de cambios en caliente"}),"\n",(0,a.jsx)(n.p,{children:"Antes de tocar producci\xf3n:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Prueba la migraci\xf3n en un entorno staging con datos reales o parecidos."}),"\n",(0,a.jsx)(n.li,{children:"Mide el tiempo real que tarda en ejecutarse cada paso."}),"\n",(0,a.jsx)(n.li,{children:"Documenta comandos de rollback claros."}),"\n",(0,a.jsx)(n.li,{children:"No hagas grandes cambios a ciegas."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Migrar tabla de 50M filas en staging."}),"\n",(0,a.jsx)(n.li,{children:"Medir cu\xe1nto tarda el \xedndice concurrente."}),"\n",(0,a.jsx)(n.li,{children:"Planificar el despliegue real en consecuencia."}),"\n"]}),"\n",(0,a.jsx)(n.p,{children:"Cambiar sin medir = receta para el desastre."}),"\n",(0,a.jsx)(n.h2,{id:"3210-buenas-pr\xe1cticas-para-cambios-en-caliente",children:"32.10. Buenas pr\xe1cticas para cambios en caliente"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"Prefiere agregar antes que eliminar."}),"\n",(0,a.jsx)(n.li,{children:"Usa operaciones concurrentes cuando est\xe9n disponibles."}),"\n",(0,a.jsx)(n.li,{children:"Divide cambios grandes en pasos peque\xf1os y seguros."}),"\n",(0,a.jsx)(n.li,{children:"Despliega c\xf3digo compatible antes de eliminar estructuras viejas."}),"\n",(0,a.jsx)(n.li,{children:"Usa triggers o sincronizaciones temporales si hace falta mantener dos estructuras activas."}),"\n",(0,a.jsx)(n.li,{children:"Automatiza validaciones previas y postcambio."}),"\n",(0,a.jsx)(n.li,{children:"Documenta procedimientos de rollback."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"3211-errores-comunes",children:"32.11. Errores comunes"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:["Hacer un ",(0,a.jsx)(n.code,{children:"ALTER"})," destructivo directamente en producci\xf3n \ud83d\ude2c"]}),"\n",(0,a.jsx)(n.li,{children:"No probar cu\xe1nto tarda un cambio en tablas grandes."}),"\n",(0,a.jsx)(n.li,{children:"No tener rollback \u2192 \u201csi falla, estamos jodidos\u201d."}),"\n",(0,a.jsx)(n.li,{children:"Borrar estructuras antes de actualizar c\xf3digo."}),"\n",(0,a.jsx)(n.li,{children:"No sincronizar cambios entre varios entornos."}),"\n",(0,a.jsx)(n.li,{children:"Confiar ciegamente en que \u201cesto tardar\xe1 poco\u201d."}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>c});var i=s(6540);const a={},r=i.createContext(a);function l(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);