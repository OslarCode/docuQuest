"use strict";(globalThis.webpackChunkDocuQuest_oslar_code=globalThis.webpackChunkDocuQuest_oslar_code||[]).push([[2414],{2472:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"backend/sqlite/transaccionesYConcurrencia","title":"Transacciones y concurrencia","description":"1. Qu\xe9 es una transacci\xf3n","source":"@site/docs/backend/sqlite/transaccionesYConcurrencia.md","sourceDirName":"backend/sqlite","slug":"/backend/sqlite/transaccionesYConcurrencia","permalink":"/docuQuest/docs/backend/sqlite/transaccionesYConcurrencia","draft":false,"unlisted":false,"editUrl":"https://github.com/OslarCode/OslarCode/docs/backend/sqlite/transaccionesYConcurrencia.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Indices y planificador de consultas","permalink":"/docuQuest/docs/backend/sqlite/indicesYPlanificador"},"next":{"title":"Seguridad pr\xe1ctica","permalink":"/docuQuest/docs/backend/sqlite/seguridad"}}');var r=s(4848),c=s(8453);const a={},l="Transacciones y concurrencia",o={},d=[{value:"1. Qu\xe9 es una transacci\xf3n",id:"1-qu\xe9-es-una-transacci\xf3n",level:2},{value:"2. Sintaxis b\xe1sica de transacciones en SQLite",id:"2-sintaxis-b\xe1sica-de-transacciones-en-sqlite",level:2},{value:"3. Ejemplo pr\xe1ctico \u2014 sin transacci\xf3n",id:"3-ejemplo-pr\xe1ctico--sin-transacci\xf3n",level:2},{value:"4. Ejemplo correcto \u2014 con transacci\xf3n",id:"4-ejemplo-correcto--con-transacci\xf3n",level:2},{value:"5. Transacciones impl\xedcitas vs expl\xedcitas",id:"5-transacciones-impl\xedcitas-vs-expl\xedcitas",level:2},{value:"6. Aislamiento y concurrencia en SQLite",id:"6-aislamiento-y-concurrencia-en-sqlite",level:2},{value:"7. Tipos de bloqueo en SQLite",id:"7-tipos-de-bloqueo-en-sqlite",level:2},{value:"8. Ejemplo real de concurrencia",id:"8-ejemplo-real-de-concurrencia",level:2},{value:"9. Timeout y reintentos",id:"9-timeout-y-reintentos",level:2},{value:"10. Buenas pr\xe1cticas con transacciones y concurrencia",id:"10-buenas-pr\xe1cticas-con-transacciones-y-concurrencia",level:2},{value:"Errores comunes",id:"errores-comunes",level:2},{value:"1. Qu\xe9 es WAL (Write-Ahead Logging)",id:"1-qu\xe9-es-wal-write-ahead-logging",level:2},{value:"2. Activar WAL mode en SQLite",id:"2-activar-wal-mode-en-sqlite",level:2},{value:"3. \xbfQu\xe9 cambia con WAL?",id:"3-qu\xe9-cambia-con-wal",level:2},{value:"4. Ejemplo de mejora con WAL",id:"4-ejemplo-de-mejora-con-wal",level:2},{value:"5. Checkpoint: c\xf3mo y cu\xe1ndo se consolida el WAL",id:"5-checkpoint-c\xf3mo-y-cu\xe1ndo-se-consolida-el-wal",level:2},{value:"6. WAL y transacciones",id:"6-wal-y-transacciones",level:2},{value:"7. WAL y backups seguros",id:"7-wal-y-backups-seguros",level:2},{value:"8. Ejercicio pr\xe1ctico \u2014 activar y usar WAL",id:"8-ejercicio-pr\xe1ctico--activar-y-usar-wal",level:2},{value:"9. Buenas pr\xe1cticas con WAL",id:"9-buenas-pr\xe1cticas-con-wal",level:2},{value:"Errores comunes con WAL",id:"errores-comunes-con-wal",level:2},{value:"10. Resumen: WAL + transacciones = potencia real",id:"10-resumen-wal--transacciones--potencia-real",level:2}];function t(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,c.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"transacciones-y-concurrencia",children:"Transacciones y concurrencia"})}),"\n",(0,r.jsx)(n.h2,{id:"1-qu\xe9-es-una-transacci\xf3n",children:"1. Qu\xe9 es una transacci\xf3n"}),"\n",(0,r.jsxs)(n.p,{children:["Una ",(0,r.jsx)(n.strong,{children:"transacci\xf3n"})," es un bloque de operaciones que:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Se ejecuta ",(0,r.jsx)(n.strong,{children:"toda o nada"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Garantiza que los datos ",(0,r.jsx)(n.strong,{children:"no queden a medias"})," si hay un fallo."]}),"\n",(0,r.jsx)(n.li,{children:"A\xedsla operaciones simult\xe1neas para evitar inconsistencias."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["En SQLite (y en casi todos los motores SQL), esto se rige por las propiedades ",(0,r.jsx)(n.strong,{children:"ACID"}),":"]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Propiedad"}),(0,r.jsx)(n.th,{children:"Significado"}),(0,r.jsx)(n.th,{children:"Qu\xe9 garantiza"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"A"}),"tomicidad"]}),(0,r.jsx)(n.td,{children:"Todas las operaciones dentro de la transacci\xf3n se ejecutan o ninguna"}),(0,r.jsx)(n.td,{children:"\u201cTodo o nada\u201d"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"C"}),"onsistencia"]}),(0,r.jsx)(n.td,{children:"La base pasa de un estado v\xe1lido a otro v\xe1lido"}),(0,r.jsx)(n.td,{children:"Datos coherentes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"I"}),"solaci\xf3n"]}),(0,r.jsx)(n.td,{children:"Varias transacciones no interfieren entre s\xed"}),(0,r.jsx)(n.td,{children:"Sin lecturas sucias"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.strong,{children:"D"}),"urabilidad"]}),(0,r.jsx)(n.td,{children:"Los cambios confirmados no se pierden"}),(0,r.jsx)(n.td,{children:"Persistencia en disco"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo simple:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nINSERT INTO orders (client_id, total) VALUES (1, 50);\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (last_insert_rowid(), 2, 3);\nCOMMIT;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Si cualquiera de los ",(0,r.jsx)(n.code,{children:"INSERT"})," falla, toda la transacci\xf3n se revierte."]}),"\n",(0,r.jsx)(n.p,{children:"Si ambos funcionan, se aplican definitivamente al final."}),"\n",(0,r.jsx)(n.h2,{id:"2-sintaxis-b\xe1sica-de-transacciones-en-sqlite",children:"2. Sintaxis b\xe1sica de transacciones en SQLite"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\n-- aqu\xed van tus operaciones\nCOMMIT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Si hay un problema:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"ROLLBACK;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Esto ",(0,r.jsxs)(n.strong,{children:["revierte todo lo que haya pasado desde el ",(0,r.jsx)(n.code,{children:"BEGIN"})]}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puedes usar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN TRANSACTION;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["(o simplemente ",(0,r.jsx)(n.code,{children:"BEGIN"})," \u2014 es equivalente)."]}),"\n",(0,r.jsx)(n.h2,{id:"3-ejemplo-pr\xe1ctico--sin-transacci\xf3n",children:"3. Ejemplo pr\xe1ctico \u2014 sin transacci\xf3n"}),"\n",(0,r.jsx)(n.p,{children:"Imagina que quieres insertar un pedido y sus l\xedneas:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO orders (client_id, total) VALUES (1, 120);\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (last_insert_rowid(), 10, 2);\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (last_insert_rowid(), 15, 1);\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Si el tercer ",(0,r.jsx)(n.code,{children:"INSERT"})," falla (por ejemplo, por un foreign key inexistente), ",(0,r.jsx)(n.strong,{children:"los dos primeros ya estar\xe1n guardados"}),", dejando la base en un estado inconsistente."]}),"\n",(0,r.jsx)(n.h2,{id:"4-ejemplo-correcto--con-transacci\xf3n",children:"4. Ejemplo correcto \u2014 con transacci\xf3n"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nINSERT INTO orders (client_id, total) VALUES (1, 120);\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (last_insert_rowid(), 10, 2);\nINSERT INTO order_items (order_id, product_id, quantity) VALUES (last_insert_rowid(), 15, 1);\nCOMMIT;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Si algo falla entre ",(0,r.jsx)(n.code,{children:"BEGIN"})," y ",(0,r.jsx)(n.code,{children:"COMMIT"}),", ",(0,r.jsx)(n.strong,{children:"ning\xfan cambio queda guardado"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Esto es especialmente importante en:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"operaciones con m\xfaltiples tablas,"}),"\n",(0,r.jsx)(n.li,{children:"validaciones complejas,"}),"\n",(0,r.jsx)(n.li,{children:"actualizaciones cr\xedticas (saldos, stock, pedidos, reservas\u2026)."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-transacciones-impl\xedcitas-vs-expl\xedcitas",children:"5. Transacciones impl\xedcitas vs expl\xedcitas"}),"\n",(0,r.jsxs)(n.p,{children:["SQLite inicia transacciones autom\xe1ticamente en algunos casos (por ejemplo, en ",(0,r.jsx)(n.code,{children:"INSERT"})," individuales), pero ",(0,r.jsx)(n.strong,{children:"usar transacciones expl\xedcitas es m\xe1s seguro y r\xe1pido"})," cuando haces varias operaciones seguidas."]}),"\n",(0,r.jsx)(n.p,{children:"Adem\xe1s:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Una transacci\xf3n expl\xedcita reduce los accesos a disco."}),"\n",(0,r.jsxs)(n.li,{children:["Es ",(0,r.jsx)(n.strong,{children:"m\xe1s eficiente"})," que muchas operaciones sueltas."]}),"\n",(0,r.jsx)(n.li,{children:"Te permite controlar cu\xe1ndo confirmar o revertir."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"En aplicaciones Node.js o Python, lo habitual es envolver los cambios en un bloque de transacci\xf3n para evitar estados intermedios corruptos."}),"\n",(0,r.jsx)(n.h2,{id:"6-aislamiento-y-concurrencia-en-sqlite",children:"6. Aislamiento y concurrencia en SQLite"}),"\n",(0,r.jsxs)(n.p,{children:["SQLite es ",(0,r.jsx)(n.strong,{children:"segura en concurrencia"}),", pero tiene un modelo simple:"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"una sola escritura a la vez"}),", pero ",(0,r.jsx)(n.strong,{children:"m\xfaltiples lecturas concurrentes"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Muchos clientes pueden leer al mismo tiempo."}),"\n",(0,r.jsx)(n.li,{children:"Solo uno puede escribir (commit) en un instante determinado."}),"\n",(0,r.jsxs)(n.li,{children:["Si otro intenta escribir mientras hay una escritura en curso, obtendr\xe1 un ",(0,r.jsx)(n.strong,{children:"bloqueo temporal"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Usuario A hace un ",(0,r.jsx)(n.code,{children:"INSERT"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Usuario B intenta hacer otro ",(0,r.jsx)(n.code,{children:"INSERT"})," al mismo tiempo."]}),"\n",(0,r.jsx)(n.p,{children:"B esperar\xe1 hasta que A termine (o fallar\xe1 si hay timeout)."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Esto es suficiente para:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"aplicaciones peque\xf1as y medianas,"}),"\n",(0,r.jsx)(n.li,{children:"apps web con baja/moderada concurrencia,"}),"\n",(0,r.jsx)(n.li,{children:"herramientas de escritorio, m\xf3viles o edge."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Importante:"})," esto no significa que SQLite sea lenta \u2014 de hecho es muy eficiente \u2014, solo que ",(0,r.jsx)(n.strong,{children:"su modelo de concurrencia no es igual que PostgreSQL o MySQL"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"7-tipos-de-bloqueo-en-sqlite",children:"7. Tipos de bloqueo en SQLite"}),"\n",(0,r.jsx)(n.p,{children:"SQLite maneja internamente distintos \u201cniveles\u201d de bloqueo:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Bloqueo"}),(0,r.jsx)(n.th,{children:"Qui\xe9n lo usa"}),(0,r.jsx)(n.th,{children:"Qu\xe9 permite"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"SHARED"}),(0,r.jsx)(n.td,{children:"Lectores"}),(0,r.jsx)(n.td,{children:"Varios pueden leer simult\xe1neamente"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RESERVED"}),(0,r.jsx)(n.td,{children:"Escritor que se prepara"}),(0,r.jsx)(n.td,{children:"Lectores pueden seguir leyendo"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"PENDING"}),(0,r.jsx)(n.td,{children:"Escritor esperando"}),(0,r.jsx)(n.td,{children:"Espera a que terminen lectores"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"EXCLUSIVE"}),(0,r.jsx)(n.td,{children:"Escritor escribiendo"}),(0,r.jsx)(n.td,{children:"Bloquea a todos"})]})]})]}),"\n",(0,r.jsx)(n.p,{children:"T\xfa no tienes que manejar esto manualmente \u2014 SQLite lo hace por ti."}),"\n",(0,r.jsx)(n.p,{children:"Pero entenderlo te ayuda a anticipar comportamientos en entornos concurrentes."}),"\n",(0,r.jsx)(n.h2,{id:"8-ejemplo-real-de-concurrencia",children:"8. Ejemplo real de concurrencia"}),"\n",(0,r.jsxs)(n.p,{children:["Supongamos que tienes dos procesos accediendo a la misma base ",(0,r.jsx)(n.code,{children:"primer.db"}),"."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Proceso A"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nINSERT INTO logs (user_id, ts, action) VALUES (1, datetime('now'), 'escribiendo');\n-- no hace COMMIT todav\xeda\n\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Proceso B"}),":"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"INSERT INTO logs (user_id, ts, action) VALUES (2, datetime('now'), 'tambi\xe9n escribiendo');\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Resultado:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"B se bloquea moment\xe1neamente (espera a que A libere)."}),"\n",(0,r.jsxs)(n.li,{children:["Si A hace ",(0,r.jsx)(n.code,{children:"COMMIT"}),", B contin\xfaa."]}),"\n",(0,r.jsx)(n.li,{children:"Si A se cuelga o tarda demasiado, B lanza un error de \u201cdatabase is locked\u201d."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Esto es normal: ",(0,r.jsx)(n.strong,{children:"una escritura a la vez"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"9-timeout-y-reintentos",children:"9. Timeout y reintentos"}),"\n",(0,r.jsx)(n.p,{children:"Puedes configurar un tiempo de espera para evitar errores inmediatos de bloqueo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA busy_timeout = 5000;  -- en milisegundos\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto da a SQLite hasta 5 segundos para esperar antes de devolver error."}),"\n",(0,r.jsxs)(n.p,{children:["En Node.js (",(0,r.jsx)(n.code,{children:"better-sqlite3"}),"):"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",children:"db.pragma('busy_timeout = 5000');\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Esto es \xfatil en aplicaciones web multiusuario, evitando que un peque\xf1o pico de concurrencia rompa la app."}),"\n",(0,r.jsx)(n.h2,{id:"10-buenas-pr\xe1cticas-con-transacciones-y-concurrencia",children:"10. Buenas pr\xe1cticas con transacciones y concurrencia"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:"BEGIN"})," y ",(0,r.jsx)(n.code,{children:"COMMIT"})," para agrupar operaciones relacionadas."]}),"\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:"ROLLBACK"})," si detectas errores intermedios."]}),"\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:"busy_timeout"})," si esperas varios usuarios escribiendo a la vez."]}),"\n",(0,r.jsxs)(n.li,{children:["Mant\xe9n las transacciones ",(0,r.jsx)(n.strong,{children:"cortas"})," \u2014 cuanto menos tiempo tengas el bloqueo, mejor."]}),"\n",(0,r.jsx)(n.li,{children:"No hagas operaciones lentas (como llamadas a APIs) dentro de una transacci\xf3n."}),"\n",(0,r.jsx)(n.li,{children:"Prueba escenarios de concurrencia en desarrollo, no solo en producci\xf3n."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"errores-comunes",children:"Errores comunes"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Error / s\xedntoma"}),(0,r.jsx)(n.th,{children:"Causa"}),(0,r.jsx)(n.th,{children:"Soluci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cdatabase is locked\u201d"}),(0,r.jsx)(n.td,{children:"Dos escrituras simult\xe1neas"}),(0,r.jsxs)(n.td,{children:["Usa ",(0,r.jsx)(n.code,{children:"busy_timeout"})," o dise\xf1a operaciones m\xe1s cortas"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Cambios parciales"}),(0,r.jsx)(n.td,{children:"No usaste transacci\xf3n"}),(0,r.jsxs)(n.td,{children:["Agrupa operaciones con ",(0,r.jsx)(n.code,{children:"BEGIN"})," / ",(0,r.jsx)(n.code,{children:"COMMIT"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Datos corruptos"}),(0,r.jsx)(n.td,{children:"Cortes o fallos en mitad de operaciones"}),(0,r.jsx)(n.td,{children:"Usa transacciones y WAL"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lecturas lentas durante escritura"}),(0,r.jsx)(n.td,{children:"Transacci\xf3n larga bloqueando"}),(0,r.jsx)(n.td,{children:"Acorta bloqueos"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"1-qu\xe9-es-wal-write-ahead-logging",children:"1. Qu\xe9 es WAL (Write-Ahead Logging)"}),"\n",(0,r.jsxs)(n.p,{children:["Por defecto, SQLite usa el ",(0,r.jsx)(n.strong,{children:"modo de journaling tradicional"})," (",(0,r.jsx)(n.code,{children:"DELETE"}),"), que:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Bloquea la base mientras escribe."}),"\n",(0,r.jsxs)(n.li,{children:["Es seguro, pero ",(0,r.jsx)(n.strong,{children:"poco eficiente si hay muchas lecturas y escrituras al mismo tiempo"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"WAL (Write-Ahead Logging) cambia la estrategia:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["En lugar de escribir directamente en el archivo ",(0,r.jsx)(n.code,{children:".db"}),","]}),"\n",(0,r.jsxs)(n.li,{children:["SQLite escribe primero en un ",(0,r.jsx)(n.strong,{children:"archivo WAL temporal"}),","]}),"\n",(0,r.jsxs)(n.li,{children:["Y luego ",(0,r.jsx)(n.strong,{children:"sincroniza"})," los cambios en segundo plano."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Esto significa:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Varias ",(0,r.jsx)(n.strong,{children:"lecturas pueden ocurrir mientras hay una escritura"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Las operaciones se vuelven m\xe1s fluidas."}),"\n",(0,r.jsx)(n.li,{children:"No se bloquean tantas conexiones simult\xe1neas."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"2-activar-wal-mode-en-sqlite",children:"2. Activar WAL mode en SQLite"}),"\n",(0,r.jsx)(n.p,{children:"Activar WAL es tan sencillo como ejecutar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA journal_mode = WAL;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Ejemplo en el shell:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"sqlite> PRAGMA journal_mode = WAL;\nwal\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Resultado: la base ahora funciona en modo WAL."}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puedes verificar el modo actual:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA journal_mode;\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["\u2192 ",(0,r.jsx)(n.code,{children:"wal"})," si est\xe1 activo."]}),"\n",(0,r.jsxs)(n.p,{children:["Esto crea un archivo adicional junto a tu ",(0,r.jsx)(n.code,{children:".db"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"primer.db\nprimer.db-wal\nprimer.db-shm\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Estos archivos almacenan los cambios pendientes antes de consolidarlos."}),"\n",(0,r.jsx)(n.h2,{id:"3-qu\xe9-cambia-con-wal",children:"3. \xbfQu\xe9 cambia con WAL?"}),"\n",(0,r.jsxs)(n.p,{children:["Modo cl\xe1sico (",(0,r.jsx)(n.code,{children:"DELETE"}),"):"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Escritura bloquea lectura."}),"\n",(0,r.jsxs)(n.li,{children:["Escritura se aplica directamente sobre ",(0,r.jsx)(n.code,{children:".db"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Rendimiento limitado en alta concurrencia."}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Modo WAL:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Lecturas y escritura pueden ocurrir en paralelo."}),"\n",(0,r.jsx)(n.li,{children:"Escritura va primero al WAL y luego se consolida."}),"\n",(0,r.jsx)(n.li,{children:"Mucho mejor rendimiento en apps con lecturas frecuentes."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Ejemplo real"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"En modo DELETE, si un usuario est\xe1 insertando un gran lote, otros deben esperar."}),"\n",(0,r.jsx)(n.li,{children:"En modo WAL, los lectores pueden seguir trabajando mientras la escritura ocurre."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"4-ejemplo-de-mejora-con-wal",children:"4. Ejemplo de mejora con WAL"}),"\n",(0,r.jsx)(n.p,{children:"Sup\xf3n que tienes un script que hace miles de inserts:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nINSERT INTO logs (user_id, ts, action) VALUES (1, datetime('now'), 'test');\n-- repetir muchas veces...\nCOMMIT;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Y otra sesi\xf3n hace:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*) FROM logs;\n\n"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["En ",(0,r.jsx)(n.strong,{children:"DELETE mode"}),": la segunda sesi\xf3n esperar\xe1 el fin de la escritura."]}),"\n",(0,r.jsxs)(n.li,{children:["En ",(0,r.jsx)(n.strong,{children:"WAL mode"}),": puede seguir leyendo sin bloquearse."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Esto es especialmente \xfatil en:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"aplicaciones web multiusuario,"}),"\n",(0,r.jsx)(n.li,{children:"dashboards con muchas lecturas,"}),"\n",(0,r.jsx)(n.li,{children:"apps embebidas que escriben y leen al mismo tiempo."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"5-checkpoint-c\xf3mo-y-cu\xe1ndo-se-consolida-el-wal",children:"5. Checkpoint: c\xf3mo y cu\xe1ndo se consolida el WAL"}),"\n",(0,r.jsxs)(n.p,{children:["Cuando usas WAL, los cambios se escriben en ",(0,r.jsx)(n.code,{children:"primer.db-wal"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Para que esos cambios pasen al archivo principal ",(0,r.jsx)(n.code,{children:".db"}),", SQLite hace un ",(0,r.jsx)(n.strong,{children:"checkpoint"}),"."]}),"\n",(0,r.jsx)(n.p,{children:"Existen dos modos:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Autom\xe1tico"}),": SQLite hace checkpoint cuando el WAL supera cierto tama\xf1o (por defecto, 1.000 p\xe1ginas)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Manual"}),": puedes forzar un checkpoint cuando quieras:"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA wal_checkpoint(FULL);\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Tambi\xe9n puedes usar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA wal_checkpoint(TRUNCATE);\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"\u2192 Esto adem\xe1s reduce el tama\xf1o f\xedsico del WAL."}),"\n",(0,r.jsxs)(n.p,{children:["\ud83d\udca1 ",(0,r.jsx)(n.em,{children:"Consejo real"}),": en la mayor\xeda de aplicaciones basta con el checkpoint autom\xe1tico."]}),"\n",(0,r.jsx)(n.p,{children:"Solo en escenarios muy controlados (por ejemplo, backups programados) conviene forzarlo manualmente."}),"\n",(0,r.jsx)(n.h2,{id:"6-wal-y-transacciones",children:"6. WAL y transacciones"}),"\n",(0,r.jsxs)(n.p,{children:["WAL ",(0,r.jsx)(n.strong,{children:"no cambia c\xf3mo usas las transacciones"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Sigues usando ",(0,r.jsx)(n.code,{children:"BEGIN"})," y ",(0,r.jsx)(n.code,{children:"COMMIT"})," igual."]}),"\n",(0,r.jsxs)(n.li,{children:["Pero ahora ",(0,r.jsx)(n.strong,{children:"las lecturas no se bloquean mientras la transacci\xf3n de escritura no haya hecho commit"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Importante:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Solo ",(0,r.jsx)(n.strong,{children:"una escritura activa"})," a la vez (como siempre en SQLite)."]}),"\n",(0,r.jsxs)(n.li,{children:["Pero ",(0,r.jsx)(n.strong,{children:"muchas lecturas pueden ocurrir al mismo tiempo"})," sin esperas."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"7-wal-y-backups-seguros",children:"7. WAL y backups seguros"}),"\n",(0,r.jsx)(n.p,{children:"Cuando uses WAL, debes tener esto en cuenta al hacer copias de seguridad:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Si copias solo ",(0,r.jsx)(n.code,{children:"primer.db"})," mientras hay operaciones pendientes en el WAL, ",(0,r.jsx)(n.strong,{children:"no tendr\xe1s un backup completo"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Debes asegurarte de que la base est\xe9 en un estado consistente:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"O bien esperar a que se haga un checkpoint,"}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"O bien forzarlo t\xfa antes de copiar:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA wal_checkpoint(FULL);\n\n"})}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Luego hacer la copia de ",(0,r.jsx)(n.code,{children:"primer.db"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Tambi\xe9n puedes usar la utilidad ",(0,r.jsx)(n.code,{children:"sqlite3"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sqlite3 primer.db \".backup 'backup.db'\"\n\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Esto crea un backup ",(0,r.jsx)(n.strong,{children:"coherente y seguro"}),", sin importar el estado del WAL."]}),"\n",(0,r.jsx)(n.h2,{id:"8-ejercicio-pr\xe1ctico--activar-y-usar-wal",children:"8. Ejercicio pr\xe1ctico \u2014 activar y usar WAL"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Activa WAL:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA journal_mode = WAL;\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Inserta datos desde una sesi\xf3n A:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"BEGIN;\nINSERT INTO logs (user_id, ts, action) VALUES (1, datetime('now'), 'writing...');\n-- no commits a\xfan\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Desde una sesi\xf3n B:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"SELECT COUNT(*) FROM logs;\n\n"})}),"\n",(0,r.jsx)(n.p,{children:"Observa que no se bloquea la lectura."}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Haz commit desde A:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"COMMIT;\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Haz checkpoint:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-sql",children:"PRAGMA wal_checkpoint(FULL);\n\n"})}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Verifica que los cambios est\xe9n consolidados."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"9-buenas-pr\xe1cticas-con-wal",children:"9. Buenas pr\xe1cticas con WAL"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Activa WAL si esperas ",(0,r.jsx)(n.strong,{children:"m\xfaltiples lecturas y escrituras concurrentes"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Mant\xe9n las transacciones cortas para reducir el tiempo de bloqueo de escritura."}),"\n",(0,r.jsx)(n.li,{children:"Deja que SQLite haga los checkpoints autom\xe1ticos \u2014 forzarlos manualmente solo si es necesario (p.ej. antes de un backup)."}),"\n",(0,r.jsxs)(n.li,{children:["Usa ",(0,r.jsx)(n.code,{children:".backup"})," en lugar de copiar archivos directamente si hay actividad."]}),"\n",(0,r.jsx)(n.li,{children:"No borres el archivo WAL manualmente: SQLite lo gestiona solo."}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"errores-comunes-con-wal",children:"Errores comunes con WAL"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Error / s\xedntoma"}),(0,r.jsx)(n.th,{children:"Causa"}),(0,r.jsx)(n.th,{children:"Soluci\xf3n"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"\u201cdatabase is locked\u201d"}),(0,r.jsx)(n.td,{children:"Transacci\xf3n larga de escritura"}),(0,r.jsx)(n.td,{children:"Acorta la transacci\xf3n o usa busy_timeout"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Copia de seguridad incompleta"}),(0,r.jsx)(n.td,{children:"No se incluy\xf3 el WAL"}),(0,r.jsxs)(n.td,{children:["Usa ",(0,r.jsx)(n.code,{children:"PRAGMA wal_checkpoint"})," o ",(0,r.jsx)(n.code,{children:".backup"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Archivo WAL muy grande"}),(0,r.jsx)(n.td,{children:"Checkpoints no se han ejecutado"}),(0,r.jsx)(n.td,{children:"Forzar checkpoint si es necesario"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Lector bloqueado"}),(0,r.jsx)(n.td,{children:"Lector antiguo que impide limpiar WAL"}),(0,r.jsx)(n.td,{children:"Cierra conexiones que no se usen"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"10-resumen-wal--transacciones--potencia-real",children:"10. Resumen: WAL + transacciones = potencia real"}),"\n",(0,r.jsx)(n.p,{children:"Con WAL activado:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Lecturas y escritura ",(0,r.jsx)(n.strong,{children:"coexisten sin bloquearse"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["La base es ",(0,r.jsx)(n.strong,{children:"m\xe1s r\xe1pida bajo carga"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Las transacciones siguen garantizando ",(0,r.jsx)(n.strong,{children:"seguridad ACID"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Los backups requieren un peque\xf1o cuidado extra, pero nada complejo."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Para muchos proyectos (APIs, dashboards, apps locales multiusuario), ",(0,r.jsx)(n.strong,{children:"activar WAL es el mayor salto de rendimiento"})," que puedes hacer sin cambiar de motor."]})]})}function h(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(t,{...e})}):t(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var i=s(6540);const r={},c=i.createContext(r);function a(e){const n=i.useContext(c);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);